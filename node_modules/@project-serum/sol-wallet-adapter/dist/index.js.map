{"version":3,"file":"index.js","sources":["../src/index.js"],"sourcesContent":["import EventEmitter from 'eventemitter3';\nimport { PublicKey } from '@solana/web3.js';\nimport bs58 from 'bs58';\n\nexport default class Wallet extends EventEmitter {\n  constructor(providerUrl, network) {\n    super();\n    this._providerUrl = new URL(providerUrl);\n    this._providerUrl.hash = new URLSearchParams({\n      origin: window.location.origin,\n      network,\n    }).toString();\n    this._publicKey = null;\n    this._autoApprove = false;\n    this._popup = null;\n    this._handlerAdded = false;\n    this._nextRequestId = 1;\n    this._responsePromises = new Map();\n  }\n\n  _handleMessage = (e) => {\n    if (e.origin === this._providerUrl.origin && e.source === this._popup) {\n      if (e.data.method === 'connected') {\n        const newPublicKey = new PublicKey(e.data.params.publicKey);\n        if (!this._publicKey || !this._publicKey.equals(newPublicKey)) {\n          this._handleDisconnect();\n          this._publicKey = newPublicKey;\n          this._autoApprove = !!e.data.params.autoApprove;\n          this.emit('connect', this._publicKey);\n        }\n      } else if (e.data.method === 'disconnected') {\n        this._handleDisconnect();\n      } else if (e.data.result || e.data.error) {\n        if (this._responsePromises.has(e.data.id)) {\n          const [resolve, reject] = this._responsePromises.get(e.data.id);\n          if (e.data.result) {\n            resolve(e.data.result);\n          } else {\n            reject(new Error(e.data.error));\n          }\n        }\n      }\n    }\n  };\n\n  _handleDisconnect = () => {\n    if (this._publicKey) {\n      this._publicKey = null;\n      this.emit('disconnect');\n    }\n    this._responsePromises.forEach(([resolve, reject], id) => {\n      this._responsePromises.delete(id);\n      reject('Wallet disconnected');\n    });\n  };\n\n  _sendRequest = async (method, params) => {\n    if (!this.connected) {\n      throw new Error('Wallet not connected');\n    }\n    const requestId = this._nextRequestId;\n    ++this._nextRequestId;\n    return new Promise((resolve, reject) => {\n      this._responsePromises.set(requestId, [resolve, reject]);\n      this._popup.postMessage(\n        {\n          jsonrpc: '2.0',\n          id: requestId,\n          method,\n          params,\n        },\n        this._providerUrl.origin,\n      );\n      if (!this.autoApprove) {\n        this._popup.focus();\n      }\n    });\n  };\n\n  get publicKey() {\n    return this._publicKey;\n  }\n\n  get connected() {\n    return this._publicKey !== null;\n  }\n\n  get autoApprove() {\n    return this._autoApprove;\n  }\n\n  connect = () => {\n    if (this._popup) {\n      this._popup.close();\n    }\n    if (!this._handlerAdded) {\n      this._handlerAdded = true;\n      window.addEventListener('message', this._handleMessage);\n      window.addEventListener('beforeunload', this.disconnect);\n    }\n    window.name = 'parent';\n    this._popup = window.open(\n      this._providerUrl.toString(),\n      '_blank',\n      'location,resizable,width=460,height=675',\n    );\n    return new Promise((resolve) => {\n      this.once('connect', resolve);\n    });\n  };\n\n  disconnect = () => {\n    if (this._popup) {\n      this._popup.close();\n    }\n    this._handleDisconnect();\n  };\n\n  signTransaction = async (transaction) => {\n    const response = await this._sendRequest('signTransaction', {\n      message: bs58.encode(transaction.serializeMessage()),\n    });\n    const signature = bs58.decode(response.signature);\n    const publicKey = new PublicKey(response.publicKey);\n    transaction.addSignature(publicKey, signature);\n    return transaction;\n  };\n}\n"],"names":["Wallet","providerUrl","network","_handleMessage","e","origin","_providerUrl","source","_popup","data","method","newPublicKey","PublicKey","params","publicKey","_publicKey","equals","_handleDisconnect","_autoApprove","autoApprove","emit","result","error","_responsePromises","has","id","get","resolve","reject","Error","forEach","_sendRequest","connected","requestId","_nextRequestId","Promise","set","postMessage","jsonrpc","focus","connect","close","_handlerAdded","window","addEventListener","disconnect","name","open","toString","once","signTransaction","transaction","message","bs58","encode","serializeMessage","response","signature","decode","addSignature","URL","hash","URLSearchParams","location","Map","EventEmitter"],"mappings":"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"}