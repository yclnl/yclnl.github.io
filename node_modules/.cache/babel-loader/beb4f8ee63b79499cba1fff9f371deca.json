{"ast":null,"code":"import{Numberu64}from\"@solana/spl-token-swap\";import{TransactionInstruction}from\"@solana/web3.js\";import*as BufferLayout from\"buffer-layout\";export{TokenSwap}from\"@solana/spl-token-swap\";/**\n * Layout for a public key\n */export var publicKey=function publicKey(){var property=arguments.length>0&&arguments[0]!==undefined?arguments[0]:\"publicKey\";return BufferLayout.blob(32,property);};/**\n * Layout for a 64bit unsigned value\n */export var uint64=function uint64(){var property=arguments.length>0&&arguments[0]!==undefined?arguments[0]:\"uint64\";return BufferLayout.blob(8,property);};export var TokenSwapLayoutLegacyV0=BufferLayout.struct([BufferLayout.u8(\"isInitialized\"),BufferLayout.u8(\"nonce\"),publicKey(\"tokenAccountA\"),publicKey(\"tokenAccountB\"),publicKey(\"tokenPool\"),uint64(\"feesNumerator\"),uint64(\"feesDenominator\")]);export var TokenSwapLayout=BufferLayout.struct([BufferLayout.u8(\"isInitialized\"),BufferLayout.u8(\"nonce\"),publicKey(\"tokenProgramId\"),publicKey(\"tokenAccountA\"),publicKey(\"tokenAccountB\"),publicKey(\"tokenPool\"),publicKey(\"mintA\"),publicKey(\"mintB\"),publicKey(\"feeAccount\"),BufferLayout.u8(\"curveType\"),uint64(\"tradeFeeNumerator\"),uint64(\"tradeFeeDenominator\"),uint64(\"ownerTradeFeeNumerator\"),uint64(\"ownerTradeFeeDenominator\"),uint64(\"ownerWithdrawFeeNumerator\"),uint64(\"ownerWithdrawFeeDenominator\"),BufferLayout.blob(16,\"padding\")]);export var createInitSwapInstruction=function createInitSwapInstruction(tokenSwapAccount,authority,tokenAccountA,tokenAccountB,tokenPool,feeAccount,tokenAccountPool,tokenProgramId,swapProgramId,nonce,curveType,tradeFeeNumerator,tradeFeeDenominator,ownerTradeFeeNumerator,ownerTradeFeeDenominator,ownerWithdrawFeeNumerator,ownerWithdrawFeeDenominator){var keys=[{pubkey:tokenSwapAccount.publicKey,isSigner:false,isWritable:true},{pubkey:authority,isSigner:false,isWritable:false},{pubkey:tokenAccountA,isSigner:false,isWritable:false},{pubkey:tokenAccountB,isSigner:false,isWritable:false},{pubkey:tokenPool,isSigner:false,isWritable:true},{pubkey:feeAccount,isSigner:false,isWritable:false},{pubkey:tokenAccountPool,isSigner:false,isWritable:true},{pubkey:tokenProgramId,isSigner:false,isWritable:false}];var commandDataLayout=BufferLayout.struct([BufferLayout.u8(\"instruction\"),BufferLayout.u8(\"nonce\"),BufferLayout.u8(\"curveType\"),BufferLayout.nu64(\"tradeFeeNumerator\"),BufferLayout.nu64(\"tradeFeeDenominator\"),BufferLayout.nu64(\"ownerTradeFeeNumerator\"),BufferLayout.nu64(\"ownerTradeFeeDenominator\"),BufferLayout.nu64(\"ownerWithdrawFeeNumerator\"),BufferLayout.nu64(\"ownerWithdrawFeeDenominator\"),BufferLayout.blob(16,\"padding\")]);var data=Buffer.alloc(1024);{var encodeLength=commandDataLayout.encode({instruction:0,// InitializeSwap instruction\nnonce:nonce,curveType:curveType,tradeFeeNumerator:tradeFeeNumerator,tradeFeeDenominator:tradeFeeDenominator,ownerTradeFeeNumerator:ownerTradeFeeNumerator,ownerTradeFeeDenominator:ownerTradeFeeDenominator,ownerWithdrawFeeNumerator:ownerWithdrawFeeNumerator,ownerWithdrawFeeDenominator:ownerWithdrawFeeDenominator},data);data=data.slice(0,encodeLength);}return new TransactionInstruction({keys:keys,programId:swapProgramId,data:data});};export var depositInstruction=function depositInstruction(tokenSwap,authority,sourceA,sourceB,intoA,intoB,poolToken,poolAccount,swapProgramId,tokenProgramId,poolTokenAmount,maximumTokenA,maximumTokenB){var dataLayout=BufferLayout.struct([BufferLayout.u8(\"instruction\"),uint64(\"poolTokenAmount\"),uint64(\"maximumTokenA\"),uint64(\"maximumTokenB\")]);var data=Buffer.alloc(dataLayout.span);dataLayout.encode({instruction:2,// Deposit instruction\npoolTokenAmount:new Numberu64(poolTokenAmount).toBuffer(),maximumTokenA:new Numberu64(maximumTokenA).toBuffer(),maximumTokenB:new Numberu64(maximumTokenB).toBuffer()},data);var keys=[{pubkey:tokenSwap,isSigner:false,isWritable:false},{pubkey:authority,isSigner:false,isWritable:false},{pubkey:sourceA,isSigner:false,isWritable:true},{pubkey:sourceB,isSigner:false,isWritable:true},{pubkey:intoA,isSigner:false,isWritable:true},{pubkey:intoB,isSigner:false,isWritable:true},{pubkey:poolToken,isSigner:false,isWritable:true},{pubkey:poolAccount,isSigner:false,isWritable:true},{pubkey:tokenProgramId,isSigner:false,isWritable:false}];return new TransactionInstruction({keys:keys,programId:swapProgramId,data:data});};export var withdrawInstruction=function withdrawInstruction(tokenSwap,authority,poolMint,feeAccount,sourcePoolAccount,fromA,fromB,userAccountA,userAccountB,swapProgramId,tokenProgramId,poolTokenAmount,minimumTokenA,minimumTokenB){var dataLayout=BufferLayout.struct([BufferLayout.u8(\"instruction\"),uint64(\"poolTokenAmount\"),uint64(\"minimumTokenA\"),uint64(\"minimumTokenB\")]);var data=Buffer.alloc(dataLayout.span);dataLayout.encode({instruction:3,// Withdraw instruction\npoolTokenAmount:new Numberu64(poolTokenAmount).toBuffer(),minimumTokenA:new Numberu64(minimumTokenA).toBuffer(),minimumTokenB:new Numberu64(minimumTokenB).toBuffer()},data);var keys=[{pubkey:tokenSwap,isSigner:false,isWritable:false},{pubkey:authority,isSigner:false,isWritable:false},{pubkey:poolMint,isSigner:false,isWritable:true},{pubkey:sourcePoolAccount,isSigner:false,isWritable:true},{pubkey:fromA,isSigner:false,isWritable:true},{pubkey:fromB,isSigner:false,isWritable:true},{pubkey:userAccountA,isSigner:false,isWritable:true},{pubkey:userAccountB,isSigner:false,isWritable:true}];if(feeAccount){keys.push({pubkey:feeAccount,isSigner:false,isWritable:true});}keys.push({pubkey:tokenProgramId,isSigner:false,isWritable:false});return new TransactionInstruction({keys:keys,programId:swapProgramId,data:data});};export var swapInstruction=function swapInstruction(tokenSwap,authority,userSource,poolSource,poolDestination,userDestination,poolMint,feeAccount,swapProgramId,tokenProgramId,amountIn,minimumAmountOut,programOwner){var dataLayout=BufferLayout.struct([BufferLayout.u8(\"instruction\"),uint64(\"amountIn\"),uint64(\"minimumAmountOut\")]);var keys=[{pubkey:tokenSwap,isSigner:false,isWritable:false},{pubkey:authority,isSigner:false,isWritable:false},{pubkey:userSource,isSigner:false,isWritable:true},{pubkey:poolSource,isSigner:false,isWritable:true},{pubkey:poolDestination,isSigner:false,isWritable:true},{pubkey:userDestination,isSigner:false,isWritable:true},{pubkey:poolMint,isSigner:false,isWritable:true},{pubkey:feeAccount,isSigner:false,isWritable:true},{pubkey:tokenProgramId,isSigner:false,isWritable:false}];// optional depending on the build of token-swap program\nif(programOwner){keys.push({pubkey:programOwner,isSigner:false,isWritable:true});}var data=Buffer.alloc(dataLayout.span);dataLayout.encode({instruction:1,// Swap instruction\namountIn:new Numberu64(amountIn).toBuffer(),minimumAmountOut:new Numberu64(minimumAmountOut).toBuffer()},data);return new TransactionInstruction({keys:keys,programId:swapProgramId,data:data});};","map":{"version":3,"sources":["/home/yclnl/yclnl.github.io/src/models/tokenSwap.ts"],"names":["Numberu64","TransactionInstruction","BufferLayout","TokenSwap","publicKey","property","blob","uint64","TokenSwapLayoutLegacyV0","struct","u8","TokenSwapLayout","createInitSwapInstruction","tokenSwapAccount","authority","tokenAccountA","tokenAccountB","tokenPool","feeAccount","tokenAccountPool","tokenProgramId","swapProgramId","nonce","curveType","tradeFeeNumerator","tradeFeeDenominator","ownerTradeFeeNumerator","ownerTradeFeeDenominator","ownerWithdrawFeeNumerator","ownerWithdrawFeeDenominator","keys","pubkey","isSigner","isWritable","commandDataLayout","nu64","data","Buffer","alloc","encodeLength","encode","instruction","slice","programId","depositInstruction","tokenSwap","sourceA","sourceB","intoA","intoB","poolToken","poolAccount","poolTokenAmount","maximumTokenA","maximumTokenB","dataLayout","span","toBuffer","withdrawInstruction","poolMint","sourcePoolAccount","fromA","fromB","userAccountA","userAccountB","minimumTokenA","minimumTokenB","push","swapInstruction","userSource","poolSource","poolDestination","userDestination","amountIn","minimumAmountOut","programOwner"],"mappings":"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","sourcesContent":["import { Numberu64 } from \"@solana/spl-token-swap\";\nimport { PublicKey, Account, TransactionInstruction } from \"@solana/web3.js\";\nimport * as BufferLayout from \"buffer-layout\";\n\nexport { TokenSwap } from \"@solana/spl-token-swap\";\n\n/**\n * Layout for a public key\n */\nexport const publicKey = (property: string = \"publicKey\"): Object => {\n  return BufferLayout.blob(32, property);\n};\n\n/**\n * Layout for a 64bit unsigned value\n */\nexport const uint64 = (property: string = \"uint64\"): Object => {\n  return BufferLayout.blob(8, property);\n};\n\nexport const TokenSwapLayoutLegacyV0 = BufferLayout.struct([\n  BufferLayout.u8(\"isInitialized\"),\n  BufferLayout.u8(\"nonce\"),\n  publicKey(\"tokenAccountA\"),\n  publicKey(\"tokenAccountB\"),\n  publicKey(\"tokenPool\"),\n  uint64(\"feesNumerator\"),\n  uint64(\"feesDenominator\"),\n]);\n\nexport const TokenSwapLayout: typeof BufferLayout.Structure = BufferLayout.struct(\n  [\n    BufferLayout.u8(\"isInitialized\"),\n    BufferLayout.u8(\"nonce\"),\n    publicKey(\"tokenProgramId\"),\n    publicKey(\"tokenAccountA\"),\n    publicKey(\"tokenAccountB\"),\n    publicKey(\"tokenPool\"),\n    publicKey(\"mintA\"),\n    publicKey(\"mintB\"),\n    publicKey(\"feeAccount\"),\n    BufferLayout.u8(\"curveType\"),\n    uint64(\"tradeFeeNumerator\"),\n    uint64(\"tradeFeeDenominator\"),\n    uint64(\"ownerTradeFeeNumerator\"),\n    uint64(\"ownerTradeFeeDenominator\"),\n    uint64(\"ownerWithdrawFeeNumerator\"),\n    uint64(\"ownerWithdrawFeeDenominator\"),\n    BufferLayout.blob(16, \"padding\"),\n  ]\n);\n\nexport const createInitSwapInstruction = (\n  tokenSwapAccount: Account,\n  authority: PublicKey,\n  tokenAccountA: PublicKey,\n  tokenAccountB: PublicKey,\n  tokenPool: PublicKey,\n  feeAccount: PublicKey,\n  tokenAccountPool: PublicKey,\n  tokenProgramId: PublicKey,\n  swapProgramId: PublicKey,\n  nonce: number,\n  curveType: number,\n  tradeFeeNumerator: number,\n  tradeFeeDenominator: number,\n  ownerTradeFeeNumerator: number,\n  ownerTradeFeeDenominator: number,\n  ownerWithdrawFeeNumerator: number,\n  ownerWithdrawFeeDenominator: number\n): TransactionInstruction => {\n  const keys = [\n    { pubkey: tokenSwapAccount.publicKey, isSigner: false, isWritable: true },\n    { pubkey: authority, isSigner: false, isWritable: false },\n    { pubkey: tokenAccountA, isSigner: false, isWritable: false },\n    { pubkey: tokenAccountB, isSigner: false, isWritable: false },\n    { pubkey: tokenPool, isSigner: false, isWritable: true },\n    { pubkey: feeAccount, isSigner: false, isWritable: false },\n    { pubkey: tokenAccountPool, isSigner: false, isWritable: true },\n    { pubkey: tokenProgramId, isSigner: false, isWritable: false },\n  ];\n\n  const commandDataLayout = BufferLayout.struct([\n    BufferLayout.u8(\"instruction\"),\n    BufferLayout.u8(\"nonce\"),\n    BufferLayout.u8(\"curveType\"),\n    BufferLayout.nu64(\"tradeFeeNumerator\"),\n    BufferLayout.nu64(\"tradeFeeDenominator\"),\n    BufferLayout.nu64(\"ownerTradeFeeNumerator\"),\n    BufferLayout.nu64(\"ownerTradeFeeDenominator\"),\n    BufferLayout.nu64(\"ownerWithdrawFeeNumerator\"),\n    BufferLayout.nu64(\"ownerWithdrawFeeDenominator\"),\n    BufferLayout.blob(16, \"padding\"),\n  ]);\n  let data = Buffer.alloc(1024);\n  {\n    const encodeLength = commandDataLayout.encode(\n      {\n        instruction: 0, // InitializeSwap instruction\n        nonce,\n        curveType,\n        tradeFeeNumerator,\n        tradeFeeDenominator,\n        ownerTradeFeeNumerator,\n        ownerTradeFeeDenominator,\n        ownerWithdrawFeeNumerator,\n        ownerWithdrawFeeDenominator,\n      },\n      data\n    );\n    data = data.slice(0, encodeLength);\n  }\n  return new TransactionInstruction({\n    keys,\n    programId: swapProgramId,\n    data,\n  });\n};\n\nexport const depositInstruction = (\n  tokenSwap: PublicKey,\n  authority: PublicKey,\n  sourceA: PublicKey,\n  sourceB: PublicKey,\n  intoA: PublicKey,\n  intoB: PublicKey,\n  poolToken: PublicKey,\n  poolAccount: PublicKey,\n  swapProgramId: PublicKey,\n  tokenProgramId: PublicKey,\n  poolTokenAmount: number | Numberu64,\n  maximumTokenA: number | Numberu64,\n  maximumTokenB: number | Numberu64\n): TransactionInstruction => {\n  const dataLayout = BufferLayout.struct([\n    BufferLayout.u8(\"instruction\"),\n    uint64(\"poolTokenAmount\"),\n    uint64(\"maximumTokenA\"),\n    uint64(\"maximumTokenB\"),\n  ]);\n\n  const data = Buffer.alloc(dataLayout.span);\n  dataLayout.encode(\n    {\n      instruction: 2, // Deposit instruction\n      poolTokenAmount: new Numberu64(poolTokenAmount).toBuffer(),\n      maximumTokenA: new Numberu64(maximumTokenA).toBuffer(),\n      maximumTokenB: new Numberu64(maximumTokenB).toBuffer(),\n    },\n    data\n  );\n\n  const keys = [\n    { pubkey: tokenSwap, isSigner: false, isWritable: false },\n    { pubkey: authority, isSigner: false, isWritable: false },\n    { pubkey: sourceA, isSigner: false, isWritable: true },\n    { pubkey: sourceB, isSigner: false, isWritable: true },\n    { pubkey: intoA, isSigner: false, isWritable: true },\n    { pubkey: intoB, isSigner: false, isWritable: true },\n    { pubkey: poolToken, isSigner: false, isWritable: true },\n    { pubkey: poolAccount, isSigner: false, isWritable: true },\n    { pubkey: tokenProgramId, isSigner: false, isWritable: false },\n  ];\n  return new TransactionInstruction({\n    keys,\n    programId: swapProgramId,\n    data,\n  });\n};\n\nexport const withdrawInstruction = (\n  tokenSwap: PublicKey,\n  authority: PublicKey,\n  poolMint: PublicKey,\n  feeAccount: PublicKey | undefined,\n  sourcePoolAccount: PublicKey,\n  fromA: PublicKey,\n  fromB: PublicKey,\n  userAccountA: PublicKey,\n  userAccountB: PublicKey,\n  swapProgramId: PublicKey,\n  tokenProgramId: PublicKey,\n  poolTokenAmount: number | Numberu64,\n  minimumTokenA: number | Numberu64,\n  minimumTokenB: number | Numberu64\n): TransactionInstruction => {\n  const dataLayout = BufferLayout.struct([\n    BufferLayout.u8(\"instruction\"),\n    uint64(\"poolTokenAmount\"),\n    uint64(\"minimumTokenA\"),\n    uint64(\"minimumTokenB\"),\n  ]);\n\n  const data = Buffer.alloc(dataLayout.span);\n  dataLayout.encode(\n    {\n      instruction: 3, // Withdraw instruction\n      poolTokenAmount: new Numberu64(poolTokenAmount).toBuffer(),\n      minimumTokenA: new Numberu64(minimumTokenA).toBuffer(),\n      minimumTokenB: new Numberu64(minimumTokenB).toBuffer(),\n    },\n    data\n  );\n\n  const keys = [\n    { pubkey: tokenSwap, isSigner: false, isWritable: false },\n    { pubkey: authority, isSigner: false, isWritable: false },\n    { pubkey: poolMint, isSigner: false, isWritable: true },\n    { pubkey: sourcePoolAccount, isSigner: false, isWritable: true },\n    { pubkey: fromA, isSigner: false, isWritable: true },\n    { pubkey: fromB, isSigner: false, isWritable: true },\n    { pubkey: userAccountA, isSigner: false, isWritable: true },\n    { pubkey: userAccountB, isSigner: false, isWritable: true },\n  ];\n\n  if (feeAccount) {\n    keys.push({ pubkey: feeAccount, isSigner: false, isWritable: true });\n  }\n  keys.push({ pubkey: tokenProgramId, isSigner: false, isWritable: false });\n\n  return new TransactionInstruction({\n    keys,\n    programId: swapProgramId,\n    data,\n  });\n};\n\nexport const swapInstruction = (\n  tokenSwap: PublicKey,\n  authority: PublicKey,\n  userSource: PublicKey,\n  poolSource: PublicKey,\n  poolDestination: PublicKey,\n  userDestination: PublicKey,\n  poolMint: PublicKey,\n  feeAccount: PublicKey,\n  swapProgramId: PublicKey,\n  tokenProgramId: PublicKey,\n  amountIn: number | Numberu64,\n  minimumAmountOut: number | Numberu64,\n  programOwner?: PublicKey\n): TransactionInstruction => {\n  const dataLayout = BufferLayout.struct([\n    BufferLayout.u8(\"instruction\"),\n    uint64(\"amountIn\"),\n    uint64(\"minimumAmountOut\"),\n  ]);\n\n  const keys = [\n    { pubkey: tokenSwap, isSigner: false, isWritable: false },\n    { pubkey: authority, isSigner: false, isWritable: false },\n    { pubkey: userSource, isSigner: false, isWritable: true },\n    { pubkey: poolSource, isSigner: false, isWritable: true },\n    { pubkey: poolDestination, isSigner: false, isWritable: true },\n    { pubkey: userDestination, isSigner: false, isWritable: true },\n    { pubkey: poolMint, isSigner: false, isWritable: true },\n    { pubkey: feeAccount, isSigner: false, isWritable: true },\n    { pubkey: tokenProgramId, isSigner: false, isWritable: false },\n  ];\n\n  // optional depending on the build of token-swap program\n  if (programOwner) {\n    keys.push({ pubkey: programOwner, isSigner: false, isWritable: true });\n  }\n\n  const data = Buffer.alloc(dataLayout.span);\n  dataLayout.encode(\n    {\n      instruction: 1, // Swap instruction\n      amountIn: new Numberu64(amountIn).toBuffer(),\n      minimumAmountOut: new Numberu64(minimumAmountOut).toBuffer(),\n    },\n    data\n  );\n\n  return new TransactionInstruction({\n    keys,\n    programId: swapProgramId,\n    data,\n  });\n};\n"]},"metadata":{},"sourceType":"module"}