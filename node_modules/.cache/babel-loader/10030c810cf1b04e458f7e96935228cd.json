{"ast":null,"code":"import _slicedToArray from\"/home/yclnl/yclnl.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{Button,Card,Popover}from\"antd\";import{TradeEntry}from\"./trade\";import{AddToLiquidity}from\"./pool/add\";import{Settings}from\"./settings\";import{SettingOutlined}from\"@ant-design/icons\";import{AppBar}from\"./appBar\";export var ExchangeView=function ExchangeView(props){var _tabList$find;var tabStyle={width:120};var tabList=[{key:\"trade\",tab:/*#__PURE__*/React.createElement(\"div\",{style:tabStyle},\"Trade\"),render:function render(){return/*#__PURE__*/React.createElement(TradeEntry,null);}},{key:\"pool\",tab:/*#__PURE__*/React.createElement(\"div\",{style:tabStyle},\"Pool\"),render:function render(){return/*#__PURE__*/React.createElement(AddToLiquidity,null);}}];var _useState=useState(tabList[0].key),_useState2=_slicedToArray(_useState,2),activeTab=_useState2[0],setActiveTab=_useState2[1];return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(AppBar,{right:/*#__PURE__*/React.createElement(Popover,{placement:\"topRight\",title:\"Settings\",content:/*#__PURE__*/React.createElement(Settings,null),trigger:\"click\"},/*#__PURE__*/React.createElement(Button,{shape:\"circle\",size:\"large\",type:\"text\",icon:/*#__PURE__*/React.createElement(SettingOutlined,null)}))}),/*#__PURE__*/React.createElement(Card,{className:\"exchange-card\",headStyle:{padding:0},tabList:tabList,tabProps:{tabBarGutter:0},activeTabKey:activeTab,onTabChange:function onTabChange(key){setActiveTab(key);}},(_tabList$find=tabList.find(function(t){return t.key===activeTab;}))===null||_tabList$find===void 0?void 0:_tabList$find.render()));};","map":{"version":3,"sources":["/home/yclnl/yclnl.github.io/src/components/exchange.tsx"],"names":["React","useState","Button","Card","Popover","TradeEntry","AddToLiquidity","Settings","SettingOutlined","AppBar","ExchangeView","props","tabStyle","width","tabList","key","tab","render","activeTab","setActiveTab","padding","tabBarGutter","find","t"],"mappings":"kJAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,MAAT,CAAiBC,IAAjB,CAAuBC,OAAvB,KAAsC,MAAtC,CACA,OAASC,UAAT,KAA2B,SAA3B,CACA,OAASC,cAAT,KAA+B,YAA/B,CACA,OAASC,QAAT,KAAyB,YAAzB,CACA,OAASC,eAAT,KAAgC,mBAAhC,CACA,OAASC,MAAT,KAAuB,UAAvB,CAEA,MAAO,IAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,KAAD,CAAe,mBACzC,GAAMC,CAAAA,QAA6B,CAAG,CAAEC,KAAK,CAAE,GAAT,CAAtC,CACA,GAAMC,CAAAA,OAAO,CAAG,CACd,CACEC,GAAG,CAAE,OADP,CAEEC,GAAG,cAAE,2BAAK,KAAK,CAAEJ,QAAZ,UAFP,CAGEK,MAAM,CAAE,iBAAM,CACZ,mBAAO,oBAAC,UAAD,MAAP,CACD,CALH,CADc,CAQd,CACEF,GAAG,CAAE,MADP,CAEEC,GAAG,cAAE,2BAAK,KAAK,CAAEJ,QAAZ,SAFP,CAGEK,MAAM,CAAE,iBAAM,CACZ,mBAAO,oBAAC,cAAD,MAAP,CACD,CALH,CARc,CAAhB,CAFyC,cAmBPhB,QAAQ,CAACa,OAAO,CAAC,CAAD,CAAP,CAAWC,GAAZ,CAnBD,wCAmBlCG,SAnBkC,eAmBvBC,YAnBuB,eAqBzC,mBACE,qDACE,oBAAC,MAAD,EACE,KAAK,cACH,oBAAC,OAAD,EACE,SAAS,CAAC,UADZ,CAEE,KAAK,CAAC,UAFR,CAGE,OAAO,cAAE,oBAAC,QAAD,MAHX,CAIE,OAAO,CAAC,OAJV,eAME,oBAAC,MAAD,EACE,KAAK,CAAC,QADR,CAEE,IAAI,CAAC,OAFP,CAGE,IAAI,CAAC,MAHP,CAIE,IAAI,cAAE,oBAAC,eAAD,MAJR,EANF,CAFJ,EADF,cAkBE,oBAAC,IAAD,EACE,SAAS,CAAC,eADZ,CAEE,SAAS,CAAE,CAAEC,OAAO,CAAE,CAAX,CAFb,CAGE,OAAO,CAAEN,OAHX,CAIE,QAAQ,CAAE,CACRO,YAAY,CAAE,CADN,CAJZ,CAOE,YAAY,CAAEH,SAPhB,CAQE,WAAW,CAAE,qBAACH,GAAD,CAAS,CACpBI,YAAY,CAACJ,GAAD,CAAZ,CACD,CAVH,iBAYGD,OAAO,CAACQ,IAAR,CAAa,SAACC,CAAD,QAAOA,CAAAA,CAAC,CAACR,GAAF,GAAUG,SAAjB,EAAb,CAZH,wCAYG,cAA0CD,MAA1C,EAZH,CAlBF,CADF,CAmCD,CAxDM","sourcesContent":["import React, { useState } from \"react\";\nimport { Button, Card, Popover } from \"antd\";\nimport { TradeEntry } from \"./trade\";\nimport { AddToLiquidity } from \"./pool/add\";\nimport { Settings } from \"./settings\";\nimport { SettingOutlined } from \"@ant-design/icons\";\nimport { AppBar } from \"./appBar\";\n\nexport const ExchangeView = (props: {}) => {\n  const tabStyle: React.CSSProperties = { width: 120 };\n  const tabList = [\n    {\n      key: \"trade\",\n      tab: <div style={tabStyle}>Trade</div>,\n      render: () => {\n        return <TradeEntry />;\n      },\n    },\n    {\n      key: \"pool\",\n      tab: <div style={tabStyle}>Pool</div>,\n      render: () => {\n        return <AddToLiquidity />;\n      },\n    },\n  ];\n\n  const [activeTab, setActiveTab] = useState(tabList[0].key);\n\n  return (\n    <>\n      <AppBar\n        right={\n          <Popover\n            placement=\"topRight\"\n            title=\"Settings\"\n            content={<Settings />}\n            trigger=\"click\"\n          >\n            <Button\n              shape=\"circle\"\n              size=\"large\"\n              type=\"text\"\n              icon={<SettingOutlined />}\n            />\n          </Popover>\n        }\n      />\n      <Card\n        className=\"exchange-card\"\n        headStyle={{ padding: 0 }}\n        tabList={tabList}\n        tabProps={{\n          tabBarGutter: 0,\n        }}\n        activeTabKey={activeTab}\n        onTabChange={(key) => {\n          setActiveTab(key);\n        }}\n      >\n        {tabList.find((t) => t.key === activeTab)?.render()}\n      </Card>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}