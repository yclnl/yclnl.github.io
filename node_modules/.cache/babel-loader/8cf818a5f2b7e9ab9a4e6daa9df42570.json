{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EVENT_QUEUE_LAYOUT = exports.REQUEST_QUEUE_LAYOUT = exports.decodeEventQueue = exports.decodeRequestQueue = void 0;\n\nvar buffer_layout_1 = require(\"buffer-layout\");\n\nvar layout_1 = require(\"./layout\");\n\nvar REQUEST_QUEUE_HEADER = buffer_layout_1.struct([buffer_layout_1.blob(5), layout_1.accountFlagsLayout('accountFlags'), buffer_layout_1.u32('head'), layout_1.zeros(4), buffer_layout_1.u32('count'), layout_1.zeros(4), buffer_layout_1.u32('nextSeqNum'), layout_1.zeros(4)]);\nvar REQUEST_FLAGS = buffer_layout_1.bits(buffer_layout_1.u8(), false, 'requestFlags');\nREQUEST_FLAGS.addBoolean('newOrder');\nREQUEST_FLAGS.addBoolean('cancelOrder');\nREQUEST_FLAGS.addBoolean('bid');\nREQUEST_FLAGS.addBoolean('postOnly');\nREQUEST_FLAGS.addBoolean('ioc');\nvar REQUEST = buffer_layout_1.struct([REQUEST_FLAGS, buffer_layout_1.u8('openOrdersSlot'), buffer_layout_1.u8('feeTier'), buffer_layout_1.blob(5), layout_1.u64('maxBaseSizeOrCancelId'), layout_1.u64('nativeQuoteQuantityLocked'), layout_1.u128('orderId'), layout_1.publicKeyLayout('openOrders'), layout_1.u64('clientOrderId')]);\nvar EVENT_QUEUE_HEADER = buffer_layout_1.struct([buffer_layout_1.blob(5), layout_1.accountFlagsLayout('accountFlags'), buffer_layout_1.u32('head'), layout_1.zeros(4), buffer_layout_1.u32('count'), layout_1.zeros(4), buffer_layout_1.u32('seqNum'), layout_1.zeros(4)]);\nvar EVENT_FLAGS = buffer_layout_1.bits(buffer_layout_1.u8(), false, 'eventFlags');\nEVENT_FLAGS.addBoolean('fill');\nEVENT_FLAGS.addBoolean('out');\nEVENT_FLAGS.addBoolean('bid');\nEVENT_FLAGS.addBoolean('maker');\nvar EVENT = buffer_layout_1.struct([EVENT_FLAGS, buffer_layout_1.u8('openOrdersSlot'), buffer_layout_1.u8('feeTier'), buffer_layout_1.blob(5), layout_1.u64('nativeQuantityReleased'), layout_1.u64('nativeQuantityPaid'), layout_1.u64('nativeFeeOrRebate'), layout_1.u128('orderId'), layout_1.publicKeyLayout('openOrders'), layout_1.u64('clientOrderId')]);\n\nfunction decodeQueue(headerLayout, nodeLayout, buffer, history) {\n  var header = headerLayout.decode(buffer);\n  var allocLen = Math.floor((buffer.length - headerLayout.span) / nodeLayout.span);\n  var nodes = [];\n\n  if (history) {\n    for (var i = 0; i < Math.min(history, allocLen); ++i) {\n      var nodeIndex = (header.head + header.count + allocLen - 1 - i) % allocLen;\n      nodes.push(nodeLayout.decode(buffer, headerLayout.span + nodeIndex * nodeLayout.span));\n    }\n  } else {\n    for (var _i = 0; _i < header.count; ++_i) {\n      var _nodeIndex = (header.head + _i) % allocLen;\n\n      nodes.push(nodeLayout.decode(buffer, headerLayout.span + _nodeIndex * nodeLayout.span));\n    }\n  }\n\n  return {\n    header: header,\n    nodes: nodes\n  };\n}\n\nfunction decodeRequestQueue(buffer, history) {\n  var _decodeQueue = decodeQueue(REQUEST_QUEUE_HEADER, REQUEST, buffer, history),\n      header = _decodeQueue.header,\n      nodes = _decodeQueue.nodes;\n\n  if (!header.accountFlags.initialized || !header.accountFlags.requestQueue) {\n    throw new Error('Invalid requests queue');\n  }\n\n  return nodes;\n}\n\nexports.decodeRequestQueue = decodeRequestQueue;\n\nfunction decodeEventQueue(buffer, history) {\n  var _decodeQueue2 = decodeQueue(EVENT_QUEUE_HEADER, EVENT, buffer, history),\n      header = _decodeQueue2.header,\n      nodes = _decodeQueue2.nodes;\n\n  if (!header.accountFlags.initialized || !header.accountFlags.eventQueue) {\n    throw new Error('Invalid events queue');\n  }\n\n  return nodes;\n}\n\nexports.decodeEventQueue = decodeEventQueue;\nexports.REQUEST_QUEUE_LAYOUT = {\n  HEADER: REQUEST_QUEUE_HEADER,\n  NODE: REQUEST\n};\nexports.EVENT_QUEUE_LAYOUT = {\n  HEADER: EVENT_QUEUE_HEADER,\n  NODE: EVENT\n};","map":{"version":3,"sources":["../src/queue.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EVENT_QUEUE_LAYOUT = exports.REQUEST_QUEUE_LAYOUT = exports.decodeEventQueue = exports.decodeRequestQueue = void 0;\nconst buffer_layout_1 = require(\"buffer-layout\");\nconst layout_1 = require(\"./layout\");\nconst REQUEST_QUEUE_HEADER = buffer_layout_1.struct([\n    buffer_layout_1.blob(5),\n    layout_1.accountFlagsLayout('accountFlags'),\n    buffer_layout_1.u32('head'),\n    layout_1.zeros(4),\n    buffer_layout_1.u32('count'),\n    layout_1.zeros(4),\n    buffer_layout_1.u32('nextSeqNum'),\n    layout_1.zeros(4),\n]);\nconst REQUEST_FLAGS = buffer_layout_1.bits(buffer_layout_1.u8(), false, 'requestFlags');\nREQUEST_FLAGS.addBoolean('newOrder');\nREQUEST_FLAGS.addBoolean('cancelOrder');\nREQUEST_FLAGS.addBoolean('bid');\nREQUEST_FLAGS.addBoolean('postOnly');\nREQUEST_FLAGS.addBoolean('ioc');\nconst REQUEST = buffer_layout_1.struct([\n    REQUEST_FLAGS,\n    buffer_layout_1.u8('openOrdersSlot'),\n    buffer_layout_1.u8('feeTier'),\n    buffer_layout_1.blob(5),\n    layout_1.u64('maxBaseSizeOrCancelId'),\n    layout_1.u64('nativeQuoteQuantityLocked'),\n    layout_1.u128('orderId'),\n    layout_1.publicKeyLayout('openOrders'),\n    layout_1.u64('clientOrderId'),\n]);\nconst EVENT_QUEUE_HEADER = buffer_layout_1.struct([\n    buffer_layout_1.blob(5),\n    layout_1.accountFlagsLayout('accountFlags'),\n    buffer_layout_1.u32('head'),\n    layout_1.zeros(4),\n    buffer_layout_1.u32('count'),\n    layout_1.zeros(4),\n    buffer_layout_1.u32('seqNum'),\n    layout_1.zeros(4),\n]);\nconst EVENT_FLAGS = buffer_layout_1.bits(buffer_layout_1.u8(), false, 'eventFlags');\nEVENT_FLAGS.addBoolean('fill');\nEVENT_FLAGS.addBoolean('out');\nEVENT_FLAGS.addBoolean('bid');\nEVENT_FLAGS.addBoolean('maker');\nconst EVENT = buffer_layout_1.struct([\n    EVENT_FLAGS,\n    buffer_layout_1.u8('openOrdersSlot'),\n    buffer_layout_1.u8('feeTier'),\n    buffer_layout_1.blob(5),\n    layout_1.u64('nativeQuantityReleased'),\n    layout_1.u64('nativeQuantityPaid'),\n    layout_1.u64('nativeFeeOrRebate'),\n    layout_1.u128('orderId'),\n    layout_1.publicKeyLayout('openOrders'),\n    layout_1.u64('clientOrderId'),\n]);\nfunction decodeQueue(headerLayout, nodeLayout, buffer, history) {\n    const header = headerLayout.decode(buffer);\n    const allocLen = Math.floor((buffer.length - headerLayout.span) / nodeLayout.span);\n    const nodes = [];\n    if (history) {\n        for (let i = 0; i < Math.min(history, allocLen); ++i) {\n            const nodeIndex = (header.head + header.count + allocLen - 1 - i) % allocLen;\n            nodes.push(nodeLayout.decode(buffer, headerLayout.span + nodeIndex * nodeLayout.span));\n        }\n    }\n    else {\n        for (let i = 0; i < header.count; ++i) {\n            const nodeIndex = (header.head + i) % allocLen;\n            nodes.push(nodeLayout.decode(buffer, headerLayout.span + nodeIndex * nodeLayout.span));\n        }\n    }\n    return { header, nodes };\n}\nfunction decodeRequestQueue(buffer, history) {\n    const { header, nodes } = decodeQueue(REQUEST_QUEUE_HEADER, REQUEST, buffer, history);\n    if (!header.accountFlags.initialized || !header.accountFlags.requestQueue) {\n        throw new Error('Invalid requests queue');\n    }\n    return nodes;\n}\nexports.decodeRequestQueue = decodeRequestQueue;\nfunction decodeEventQueue(buffer, history) {\n    const { header, nodes } = decodeQueue(EVENT_QUEUE_HEADER, EVENT, buffer, history);\n    if (!header.accountFlags.initialized || !header.accountFlags.eventQueue) {\n        throw new Error('Invalid events queue');\n    }\n    return nodes;\n}\nexports.decodeEventQueue = decodeEventQueue;\nexports.REQUEST_QUEUE_LAYOUT = {\n    HEADER: REQUEST_QUEUE_HEADER,\n    NODE: REQUEST,\n};\nexports.EVENT_QUEUE_LAYOUT = {\n    HEADER: EVENT_QUEUE_HEADER,\n    NODE: EVENT,\n};\n//# sourceMappingURL=queue.js.map"]},"metadata":{},"sourceType":"script"}