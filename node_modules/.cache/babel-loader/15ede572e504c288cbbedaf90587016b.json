{"ast":null,"code":"\"use strict\";\n\nvar _toConsumableArray = require(\"/home/yclnl/yclnl.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/toConsumableArray\");\n\nvar _classCallCheck = require(\"/home/yclnl/yclnl.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/yclnl/yclnl.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DexInstructions = exports.decodeInstruction = exports.encodeInstruction = exports.INSTRUCTION_LAYOUT = exports.NEW_ORDER_OWNER_INDEX = exports.NEW_ORDER_OPEN_ORDERS_INDEX = exports.SETTLE_FUNDS_QUOTE_WALLET_INDEX = exports.SETTLE_FUNDS_BASE_WALLET_INDEX = void 0;\n\nvar buffer_layout_1 = require(\"buffer-layout\");\n\nvar layout_1 = require(\"./layout\");\n\nvar web3_js_1 = require(\"@solana/web3.js\");\n\nvar token_instructions_1 = require(\"./token-instructions\"); // NOTE: Update these if the position of arguments for the settleFunds instruction changes\n\n\nexports.SETTLE_FUNDS_BASE_WALLET_INDEX = 5;\nexports.SETTLE_FUNDS_QUOTE_WALLET_INDEX = 6; // NOTE: Update these if the position of arguments for the newOrder instruction changes\n\nexports.NEW_ORDER_OPEN_ORDERS_INDEX = 1;\nexports.NEW_ORDER_OWNER_INDEX = 4;\nexports.INSTRUCTION_LAYOUT = new layout_1.VersionedLayout(0, buffer_layout_1.union(buffer_layout_1.u32('instruction')));\nexports.INSTRUCTION_LAYOUT.inner.addVariant(0, buffer_layout_1.struct([layout_1.u64('baseLotSize'), layout_1.u64('quoteLotSize'), buffer_layout_1.u16('feeRateBps'), layout_1.u64('vaultSignerNonce'), layout_1.u64('quoteDustThreshold')]), 'initializeMarket');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(1, buffer_layout_1.struct([layout_1.sideLayout('side'), layout_1.u64('limitPrice'), layout_1.u64('maxQuantity'), layout_1.orderTypeLayout('orderType'), layout_1.u64('clientId')]), 'newOrder');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(2, buffer_layout_1.struct([buffer_layout_1.u16('limit')]), 'matchOrders');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(3, buffer_layout_1.struct([buffer_layout_1.u16('limit')]), 'consumeEvents');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(4, buffer_layout_1.struct([layout_1.sideLayout('side'), layout_1.u128('orderId'), layout_1.publicKeyLayout('openOrders'), buffer_layout_1.u8('openOrdersSlot')]), 'cancelOrder');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(5, buffer_layout_1.struct([]), 'settleFunds');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(6, buffer_layout_1.struct([layout_1.u64('clientId')]), 'cancelOrderByClientId');\n\nfunction encodeInstruction(instruction) {\n  var b = Buffer.alloc(100);\n  return b.slice(0, exports.INSTRUCTION_LAYOUT.encode(instruction, b));\n}\n\nexports.encodeInstruction = encodeInstruction;\n\nfunction decodeInstruction(message) {\n  return exports.INSTRUCTION_LAYOUT.decode(message);\n}\n\nexports.decodeInstruction = decodeInstruction;\n\nvar DexInstructions = /*#__PURE__*/function () {\n  function DexInstructions() {\n    _classCallCheck(this, DexInstructions);\n  }\n\n  _createClass(DexInstructions, null, [{\n    key: \"initializeMarket\",\n    value: function initializeMarket(_ref) {\n      var market = _ref.market,\n          requestQueue = _ref.requestQueue,\n          eventQueue = _ref.eventQueue,\n          bids = _ref.bids,\n          asks = _ref.asks,\n          baseVault = _ref.baseVault,\n          quoteVault = _ref.quoteVault,\n          baseMint = _ref.baseMint,\n          quoteMint = _ref.quoteMint,\n          baseLotSize = _ref.baseLotSize,\n          quoteLotSize = _ref.quoteLotSize,\n          feeRateBps = _ref.feeRateBps,\n          vaultSignerNonce = _ref.vaultSignerNonce,\n          quoteDustThreshold = _ref.quoteDustThreshold,\n          programId = _ref.programId;\n      return new web3_js_1.TransactionInstruction({\n        keys: [{\n          pubkey: market,\n          isSigner: false,\n          isWritable: true\n        }, {\n          pubkey: requestQueue,\n          isSigner: false,\n          isWritable: true\n        }, {\n          pubkey: eventQueue,\n          isSigner: false,\n          isWritable: true\n        }, {\n          pubkey: bids,\n          isSigner: false,\n          isWritable: true\n        }, {\n          pubkey: asks,\n          isSigner: false,\n          isWritable: true\n        }, {\n          pubkey: baseVault,\n          isSigner: false,\n          isWritable: true\n        }, {\n          pubkey: quoteVault,\n          isSigner: false,\n          isWritable: true\n        }, {\n          pubkey: baseMint,\n          isSigner: false,\n          isWritable: false\n        }, {\n          pubkey: quoteMint,\n          isSigner: false,\n          isWritable: false\n        }],\n        programId: programId,\n        data: encodeInstruction({\n          initializeMarket: {\n            baseLotSize: baseLotSize,\n            quoteLotSize: quoteLotSize,\n            feeRateBps: feeRateBps,\n            vaultSignerNonce: vaultSignerNonce,\n            quoteDustThreshold: quoteDustThreshold\n          }\n        })\n      });\n    }\n  }, {\n    key: \"newOrder\",\n    value: function newOrder(_ref2) {\n      var market = _ref2.market,\n          openOrders = _ref2.openOrders,\n          payer = _ref2.payer,\n          owner = _ref2.owner,\n          requestQueue = _ref2.requestQueue,\n          baseVault = _ref2.baseVault,\n          quoteVault = _ref2.quoteVault,\n          side = _ref2.side,\n          limitPrice = _ref2.limitPrice,\n          maxQuantity = _ref2.maxQuantity,\n          orderType = _ref2.orderType,\n          clientId = _ref2.clientId,\n          programId = _ref2.programId,\n          _ref2$feeDiscountPubk = _ref2.feeDiscountPubkey,\n          feeDiscountPubkey = _ref2$feeDiscountPubk === void 0 ? null : _ref2$feeDiscountPubk;\n      var keys = [{\n        pubkey: market,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: openOrders,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: requestQueue,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: payer,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: owner,\n        isSigner: true,\n        isWritable: false\n      }, {\n        pubkey: baseVault,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: quoteVault,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: token_instructions_1.TOKEN_PROGRAM_ID,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: web3_js_1.SYSVAR_RENT_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }];\n\n      if (feeDiscountPubkey) {\n        keys.push({\n          pubkey: feeDiscountPubkey,\n          isSigner: false,\n          isWritable: false\n        });\n      }\n\n      return new web3_js_1.TransactionInstruction({\n        keys: keys,\n        programId: programId,\n        data: encodeInstruction({\n          newOrder: clientId ? {\n            side: side,\n            limitPrice: limitPrice,\n            maxQuantity: maxQuantity,\n            orderType: orderType,\n            clientId: clientId\n          } : {\n            side: side,\n            limitPrice: limitPrice,\n            maxQuantity: maxQuantity,\n            orderType: orderType\n          }\n        })\n      });\n    }\n  }, {\n    key: \"matchOrders\",\n    value: function matchOrders(_ref3) {\n      var market = _ref3.market,\n          requestQueue = _ref3.requestQueue,\n          eventQueue = _ref3.eventQueue,\n          bids = _ref3.bids,\n          asks = _ref3.asks,\n          baseVault = _ref3.baseVault,\n          quoteVault = _ref3.quoteVault,\n          limit = _ref3.limit,\n          programId = _ref3.programId;\n      return new web3_js_1.TransactionInstruction({\n        keys: [{\n          pubkey: market,\n          isSigner: false,\n          isWritable: true\n        }, {\n          pubkey: requestQueue,\n          isSigner: false,\n          isWritable: true\n        }, {\n          pubkey: eventQueue,\n          isSigner: false,\n          isWritable: true\n        }, {\n          pubkey: bids,\n          isSigner: false,\n          isWritable: true\n        }, {\n          pubkey: asks,\n          isSigner: false,\n          isWritable: true\n        }, {\n          pubkey: baseVault,\n          isSigner: false,\n          isWritable: true\n        }, {\n          pubkey: quoteVault,\n          isSigner: false,\n          isWritable: true\n        }],\n        programId: programId,\n        data: encodeInstruction({\n          matchOrders: {\n            limit: limit\n          }\n        })\n      });\n    }\n  }, {\n    key: \"consumeEvents\",\n    value: function consumeEvents(_ref4) {\n      var market = _ref4.market,\n          eventQueue = _ref4.eventQueue,\n          openOrdersAccounts = _ref4.openOrdersAccounts,\n          limit = _ref4.limit,\n          programId = _ref4.programId;\n      return new web3_js_1.TransactionInstruction({\n        keys: [].concat(_toConsumableArray(openOrdersAccounts.map(function (account) {\n          return {\n            pubkey: account,\n            isSigner: false,\n            isWritable: true\n          };\n        })), [{\n          pubkey: market,\n          isSigner: false,\n          isWritable: true\n        }, {\n          pubkey: eventQueue,\n          isSigner: false,\n          isWritable: true\n        }]),\n        programId: programId,\n        data: encodeInstruction({\n          consumeEvents: {\n            limit: limit\n          }\n        })\n      });\n    }\n  }, {\n    key: \"cancelOrder\",\n    value: function cancelOrder(_ref5) {\n      var market = _ref5.market,\n          openOrders = _ref5.openOrders,\n          owner = _ref5.owner,\n          requestQueue = _ref5.requestQueue,\n          side = _ref5.side,\n          orderId = _ref5.orderId,\n          openOrdersSlot = _ref5.openOrdersSlot,\n          programId = _ref5.programId;\n      return new web3_js_1.TransactionInstruction({\n        keys: [{\n          pubkey: market,\n          isSigner: false,\n          isWritable: false\n        }, {\n          pubkey: openOrders,\n          isSigner: false,\n          isWritable: true\n        }, {\n          pubkey: requestQueue,\n          isSigner: false,\n          isWritable: true\n        }, {\n          pubkey: owner,\n          isSigner: true,\n          isWritable: false\n        }],\n        programId: programId,\n        data: encodeInstruction({\n          cancelOrder: {\n            side: side,\n            orderId: orderId,\n            openOrders: openOrders,\n            openOrdersSlot: openOrdersSlot\n          }\n        })\n      });\n    }\n  }, {\n    key: \"cancelOrderByClientId\",\n    value: function cancelOrderByClientId(_ref6) {\n      var market = _ref6.market,\n          openOrders = _ref6.openOrders,\n          owner = _ref6.owner,\n          requestQueue = _ref6.requestQueue,\n          clientId = _ref6.clientId,\n          programId = _ref6.programId;\n      return new web3_js_1.TransactionInstruction({\n        keys: [{\n          pubkey: market,\n          isSigner: false,\n          isWritable: false\n        }, {\n          pubkey: openOrders,\n          isSigner: false,\n          isWritable: true\n        }, {\n          pubkey: requestQueue,\n          isSigner: false,\n          isWritable: true\n        }, {\n          pubkey: owner,\n          isSigner: true,\n          isWritable: false\n        }],\n        programId: programId,\n        data: encodeInstruction({\n          cancelOrderByClientId: {\n            clientId: clientId\n          }\n        })\n      });\n    }\n  }, {\n    key: \"settleFunds\",\n    value: function settleFunds(_ref7) {\n      var market = _ref7.market,\n          openOrders = _ref7.openOrders,\n          owner = _ref7.owner,\n          baseVault = _ref7.baseVault,\n          quoteVault = _ref7.quoteVault,\n          baseWallet = _ref7.baseWallet,\n          quoteWallet = _ref7.quoteWallet,\n          vaultSigner = _ref7.vaultSigner,\n          programId = _ref7.programId,\n          _ref7$referrerQuoteWa = _ref7.referrerQuoteWallet,\n          referrerQuoteWallet = _ref7$referrerQuoteWa === void 0 ? null : _ref7$referrerQuoteWa;\n      var keys = [{\n        pubkey: market,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: openOrders,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: owner,\n        isSigner: true,\n        isWritable: false\n      }, {\n        pubkey: baseVault,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: quoteVault,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: baseWallet,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: quoteWallet,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: vaultSigner,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: token_instructions_1.TOKEN_PROGRAM_ID,\n        isSigner: false,\n        isWritable: false\n      }];\n\n      if (referrerQuoteWallet) {\n        keys.push({\n          pubkey: referrerQuoteWallet,\n          isSigner: false,\n          isWritable: true\n        });\n      }\n\n      return new web3_js_1.TransactionInstruction({\n        keys: keys,\n        programId: programId,\n        data: encodeInstruction({\n          settleFunds: {}\n        })\n      });\n    }\n  }]);\n\n  return DexInstructions;\n}();\n\nexports.DexInstructions = DexInstructions;","map":{"version":3,"sources":["../src/instructions.js"],"names":[],"mappings":";;;;;;;;;;;;;AAAA,IAAA,eAAA,GAAA,OAAA,CAAA,eAAA,CAAA;;AACA,IAAA,QAAA,GAAA,OAAA,CAAA,UAAA,CAAA;;AAQA,IAAA,SAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;;AACA,IAAA,oBAAA,GAAA,OAAA,CAAA,sBAAA,CAAA,C,CAEA;;;AACa,OAAA,CAAA,8BAAA,GAAiC,CAAjC;AACA,OAAA,CAAA,+BAAA,GAAkC,CAAlC,C,CAEb;;AACa,OAAA,CAAA,2BAAA,GAA8B,CAA9B;AACA,OAAA,CAAA,qBAAA,GAAwB,CAAxB;AAEA,OAAA,CAAA,kBAAA,GAAqB,IAAI,QAAA,CAAA,eAAJ,CAChC,CADgC,EAEhC,eAAA,CAAA,KAAA,CAAM,eAAA,CAAA,GAAA,CAAI,aAAJ,CAAN,CAFgC,CAArB;AAIb,OAAA,CAAA,kBAAA,CAAmB,KAAnB,CAAyB,UAAzB,CACE,CADF,EAEE,eAAA,CAAA,MAAA,CAAO,CACL,QAAA,CAAA,GAAA,CAAI,aAAJ,CADK,EAEL,QAAA,CAAA,GAAA,CAAI,cAAJ,CAFK,EAGL,eAAA,CAAA,GAAA,CAAI,YAAJ,CAHK,EAIL,QAAA,CAAA,GAAA,CAAI,kBAAJ,CAJK,EAKL,QAAA,CAAA,GAAA,CAAI,oBAAJ,CALK,CAAP,CAFF,EASE,kBATF;AAWA,OAAA,CAAA,kBAAA,CAAmB,KAAnB,CAAyB,UAAzB,CACE,CADF,EAEE,eAAA,CAAA,MAAA,CAAO,CACL,QAAA,CAAA,UAAA,CAAW,MAAX,CADK,EAEL,QAAA,CAAA,GAAA,CAAI,YAAJ,CAFK,EAGL,QAAA,CAAA,GAAA,CAAI,aAAJ,CAHK,EAIL,QAAA,CAAA,eAAA,CAAgB,WAAhB,CAJK,EAKL,QAAA,CAAA,GAAA,CAAI,UAAJ,CALK,CAAP,CAFF,EASE,UATF;AAWA,OAAA,CAAA,kBAAA,CAAmB,KAAnB,CAAyB,UAAzB,CAAoC,CAApC,EAAuC,eAAA,CAAA,MAAA,CAAO,CAAC,eAAA,CAAA,GAAA,CAAI,OAAJ,CAAD,CAAP,CAAvC,EAA+D,aAA/D;AACA,OAAA,CAAA,kBAAA,CAAmB,KAAnB,CAAyB,UAAzB,CAAoC,CAApC,EAAuC,eAAA,CAAA,MAAA,CAAO,CAAC,eAAA,CAAA,GAAA,CAAI,OAAJ,CAAD,CAAP,CAAvC,EAA+D,eAA/D;AACA,OAAA,CAAA,kBAAA,CAAmB,KAAnB,CAAyB,UAAzB,CACE,CADF,EAEE,eAAA,CAAA,MAAA,CAAO,CACL,QAAA,CAAA,UAAA,CAAW,MAAX,CADK,EAEL,QAAA,CAAA,IAAA,CAAK,SAAL,CAFK,EAGL,QAAA,CAAA,eAAA,CAAgB,YAAhB,CAHK,EAIL,eAAA,CAAA,EAAA,CAAG,gBAAH,CAJK,CAAP,CAFF,EAQE,aARF;AAUA,OAAA,CAAA,kBAAA,CAAmB,KAAnB,CAAyB,UAAzB,CAAoC,CAApC,EAAuC,eAAA,CAAA,MAAA,CAAO,EAAP,CAAvC,EAAmD,aAAnD;AACA,OAAA,CAAA,kBAAA,CAAmB,KAAnB,CAAyB,UAAzB,CACE,CADF,EAEE,eAAA,CAAA,MAAA,CAAO,CAAC,QAAA,CAAA,GAAA,CAAI,UAAJ,CAAD,CAAP,CAFF,EAGE,uBAHF;;AAMA,SAAgB,iBAAhB,CAAkC,WAAlC,EAA6C;AAC3C,MAAM,CAAC,GAAG,MAAM,CAAC,KAAP,CAAa,GAAb,CAAV;AACA,SAAO,CAAC,CAAC,KAAF,CAAQ,CAAR,EAAW,OAAA,CAAA,kBAAA,CAAmB,MAAnB,CAA0B,WAA1B,EAAuC,CAAvC,CAAX,CAAP;AACD;;AAHD,OAAA,CAAA,iBAAA,GAAA,iBAAA;;AAKA,SAAgB,iBAAhB,CAAkC,OAAlC,EAAyC;AACvC,SAAO,OAAA,CAAA,kBAAA,CAAmB,MAAnB,CAA0B,OAA1B,CAAP;AACD;;AAFD,OAAA,CAAA,iBAAA,GAAA,iBAAA;;IAIa,e;;;;;;;2CAiBV;AAAA,UAfC,MAeD,QAfC,MAeD;AAAA,UAdC,YAcD,QAdC,YAcD;AAAA,UAbC,UAaD,QAbC,UAaD;AAAA,UAZC,IAYD,QAZC,IAYD;AAAA,UAXC,IAWD,QAXC,IAWD;AAAA,UAVC,SAUD,QAVC,SAUD;AAAA,UATC,UASD,QATC,UASD;AAAA,UARC,QAQD,QARC,QAQD;AAAA,UAPC,SAOD,QAPC,SAOD;AAAA,UANC,WAMD,QANC,WAMD;AAAA,UALC,YAKD,QALC,YAKD;AAAA,UAJC,UAID,QAJC,UAID;AAAA,UAHC,gBAGD,QAHC,gBAGD;AAAA,UAFC,kBAED,QAFC,kBAED;AAAA,UADC,SACD,QADC,SACD;AACC,aAAO,IAAI,SAAA,CAAA,sBAAJ,CAA2B;AAChC,QAAA,IAAI,EAAE,CACJ;AAAE,UAAA,MAAM,EAAE,MAAV;AAAkB,UAAA,QAAQ,EAAE,KAA5B;AAAmC,UAAA,UAAU,EAAE;AAA/C,SADI,EAEJ;AAAE,UAAA,MAAM,EAAE,YAAV;AAAwB,UAAA,QAAQ,EAAE,KAAlC;AAAyC,UAAA,UAAU,EAAE;AAArD,SAFI,EAGJ;AAAE,UAAA,MAAM,EAAE,UAAV;AAAsB,UAAA,QAAQ,EAAE,KAAhC;AAAuC,UAAA,UAAU,EAAE;AAAnD,SAHI,EAIJ;AAAE,UAAA,MAAM,EAAE,IAAV;AAAgB,UAAA,QAAQ,EAAE,KAA1B;AAAiC,UAAA,UAAU,EAAE;AAA7C,SAJI,EAKJ;AAAE,UAAA,MAAM,EAAE,IAAV;AAAgB,UAAA,QAAQ,EAAE,KAA1B;AAAiC,UAAA,UAAU,EAAE;AAA7C,SALI,EAMJ;AAAE,UAAA,MAAM,EAAE,SAAV;AAAqB,UAAA,QAAQ,EAAE,KAA/B;AAAsC,UAAA,UAAU,EAAE;AAAlD,SANI,EAOJ;AAAE,UAAA,MAAM,EAAE,UAAV;AAAsB,UAAA,QAAQ,EAAE,KAAhC;AAAuC,UAAA,UAAU,EAAE;AAAnD,SAPI,EAQJ;AAAE,UAAA,MAAM,EAAE,QAAV;AAAoB,UAAA,QAAQ,EAAE,KAA9B;AAAqC,UAAA,UAAU,EAAE;AAAjD,SARI,EASJ;AAAE,UAAA,MAAM,EAAE,SAAV;AAAqB,UAAA,QAAQ,EAAE,KAA/B;AAAsC,UAAA,UAAU,EAAE;AAAlD,SATI,CAD0B;AAYhC,QAAA,SAAS,EAAT,SAZgC;AAahC,QAAA,IAAI,EAAE,iBAAiB,CAAC;AACtB,UAAA,gBAAgB,EAAE;AAChB,YAAA,WAAW,EAAX,WADgB;AAEhB,YAAA,YAAY,EAAZ,YAFgB;AAGhB,YAAA,UAAU,EAAV,UAHgB;AAIhB,YAAA,gBAAgB,EAAhB,gBAJgB;AAKhB,YAAA,kBAAkB,EAAlB;AALgB;AADI,SAAD;AAbS,OAA3B,CAAP;AAuBD;;;oCAiBA;AAAA,UAdC,MAcD,SAdC,MAcD;AAAA,UAbC,UAaD,SAbC,UAaD;AAAA,UAZC,KAYD,SAZC,KAYD;AAAA,UAXC,KAWD,SAXC,KAWD;AAAA,UAVC,YAUD,SAVC,YAUD;AAAA,UATC,SASD,SATC,SASD;AAAA,UARC,UAQD,SARC,UAQD;AAAA,UAPC,IAOD,SAPC,IAOD;AAAA,UANC,UAMD,SANC,UAMD;AAAA,UALC,WAKD,SALC,WAKD;AAAA,UAJC,SAID,SAJC,SAID;AAAA,UAHC,QAGD,SAHC,QAGD;AAAA,UAFC,SAED,SAFC,SAED;AAAA,wCADC,iBACD;AAAA,UADC,iBACD,sCADqB,IACrB;AACC,UAAM,IAAI,GAAG,CACX;AAAE,QAAA,MAAM,EAAE,MAAV;AAAkB,QAAA,QAAQ,EAAE,KAA5B;AAAmC,QAAA,UAAU,EAAE;AAA/C,OADW,EAEX;AAAE,QAAA,MAAM,EAAE,UAAV;AAAsB,QAAA,QAAQ,EAAE,KAAhC;AAAuC,QAAA,UAAU,EAAE;AAAnD,OAFW,EAGX;AAAE,QAAA,MAAM,EAAE,YAAV;AAAwB,QAAA,QAAQ,EAAE,KAAlC;AAAyC,QAAA,UAAU,EAAE;AAArD,OAHW,EAIX;AAAE,QAAA,MAAM,EAAE,KAAV;AAAiB,QAAA,QAAQ,EAAE,KAA3B;AAAkC,QAAA,UAAU,EAAE;AAA9C,OAJW,EAKX;AAAE,QAAA,MAAM,EAAE,KAAV;AAAiB,QAAA,QAAQ,EAAE,IAA3B;AAAiC,QAAA,UAAU,EAAE;AAA7C,OALW,EAMX;AAAE,QAAA,MAAM,EAAE,SAAV;AAAqB,QAAA,QAAQ,EAAE,KAA/B;AAAsC,QAAA,UAAU,EAAE;AAAlD,OANW,EAOX;AAAE,QAAA,MAAM,EAAE,UAAV;AAAsB,QAAA,QAAQ,EAAE,KAAhC;AAAuC,QAAA,UAAU,EAAE;AAAnD,OAPW,EAQX;AAAE,QAAA,MAAM,EAAE,oBAAA,CAAA,gBAAV;AAA4B,QAAA,QAAQ,EAAE,KAAtC;AAA6C,QAAA,UAAU,EAAE;AAAzD,OARW,EASX;AAAE,QAAA,MAAM,EAAE,SAAA,CAAA,kBAAV;AAA8B,QAAA,QAAQ,EAAE,KAAxC;AAA+C,QAAA,UAAU,EAAE;AAA3D,OATW,CAAb;;AAWA,UAAI,iBAAJ,EAAuB;AACrB,QAAA,IAAI,CAAC,IAAL,CAAU;AACR,UAAA,MAAM,EAAE,iBADA;AAER,UAAA,QAAQ,EAAE,KAFF;AAGR,UAAA,UAAU,EAAE;AAHJ,SAAV;AAKD;;AACD,aAAO,IAAI,SAAA,CAAA,sBAAJ,CAA2B;AAChC,QAAA,IAAI,EAAJ,IADgC;AAEhC,QAAA,SAAS,EAAT,SAFgC;AAGhC,QAAA,IAAI,EAAE,iBAAiB,CAAC;AACtB,UAAA,QAAQ,EAAE,QAAQ,GACd;AAAE,YAAA,IAAI,EAAJ,IAAF;AAAQ,YAAA,UAAU,EAAV,UAAR;AAAoB,YAAA,WAAW,EAAX,WAApB;AAAiC,YAAA,SAAS,EAAT,SAAjC;AAA4C,YAAA,QAAQ,EAAR;AAA5C,WADc,GAEd;AAAE,YAAA,IAAI,EAAJ,IAAF;AAAQ,YAAA,UAAU,EAAV,UAAR;AAAoB,YAAA,WAAW,EAAX,WAApB;AAAiC,YAAA,SAAS,EAAT;AAAjC;AAHkB,SAAD;AAHS,OAA3B,CAAP;AASD;;;uCAYA;AAAA,UATC,MASD,SATC,MASD;AAAA,UARC,YAQD,SARC,YAQD;AAAA,UAPC,UAOD,SAPC,UAOD;AAAA,UANC,IAMD,SANC,IAMD;AAAA,UALC,IAKD,SALC,IAKD;AAAA,UAJC,SAID,SAJC,SAID;AAAA,UAHC,UAGD,SAHC,UAGD;AAAA,UAFC,KAED,SAFC,KAED;AAAA,UADC,SACD,SADC,SACD;AACC,aAAO,IAAI,SAAA,CAAA,sBAAJ,CAA2B;AAChC,QAAA,IAAI,EAAE,CACJ;AAAE,UAAA,MAAM,EAAE,MAAV;AAAkB,UAAA,QAAQ,EAAE,KAA5B;AAAmC,UAAA,UAAU,EAAE;AAA/C,SADI,EAEJ;AAAE,UAAA,MAAM,EAAE,YAAV;AAAwB,UAAA,QAAQ,EAAE,KAAlC;AAAyC,UAAA,UAAU,EAAE;AAArD,SAFI,EAGJ;AAAE,UAAA,MAAM,EAAE,UAAV;AAAsB,UAAA,QAAQ,EAAE,KAAhC;AAAuC,UAAA,UAAU,EAAE;AAAnD,SAHI,EAIJ;AAAE,UAAA,MAAM,EAAE,IAAV;AAAgB,UAAA,QAAQ,EAAE,KAA1B;AAAiC,UAAA,UAAU,EAAE;AAA7C,SAJI,EAKJ;AAAE,UAAA,MAAM,EAAE,IAAV;AAAgB,UAAA,QAAQ,EAAE,KAA1B;AAAiC,UAAA,UAAU,EAAE;AAA7C,SALI,EAMJ;AAAE,UAAA,MAAM,EAAE,SAAV;AAAqB,UAAA,QAAQ,EAAE,KAA/B;AAAsC,UAAA,UAAU,EAAE;AAAlD,SANI,EAOJ;AAAE,UAAA,MAAM,EAAE,UAAV;AAAsB,UAAA,QAAQ,EAAE,KAAhC;AAAuC,UAAA,UAAU,EAAE;AAAnD,SAPI,CAD0B;AAUhC,QAAA,SAAS,EAAT,SAVgC;AAWhC,QAAA,IAAI,EAAE,iBAAiB,CAAC;AAAE,UAAA,WAAW,EAAE;AAAE,YAAA,KAAK,EAAL;AAAF;AAAf,SAAD;AAXS,OAA3B,CAAP;AAaD;;;yCAQA;AAAA,UALC,MAKD,SALC,MAKD;AAAA,UAJC,UAID,SAJC,UAID;AAAA,UAHC,kBAGD,SAHC,kBAGD;AAAA,UAFC,KAED,SAFC,KAED;AAAA,UADC,SACD,SADC,SACD;AACC,aAAO,IAAI,SAAA,CAAA,sBAAJ,CAA2B;AAChC,QAAA,IAAI,+BACC,kBAAkB,CAAC,GAAnB,CAAuB,UAAC,OAAD;AAAA,iBAAc;AACtC,YAAA,MAAM,EAAE,OAD8B;AAEtC,YAAA,QAAQ,EAAE,KAF4B;AAGtC,YAAA,UAAU,EAAE;AAH0B,WAAd;AAAA,SAAvB,CADD,IAMF;AAAE,UAAA,MAAM,EAAE,MAAV;AAAkB,UAAA,QAAQ,EAAE,KAA5B;AAAmC,UAAA,UAAU,EAAE;AAA/C,SANE,EAOF;AAAE,UAAA,MAAM,EAAE,UAAV;AAAsB,UAAA,QAAQ,EAAE,KAAhC;AAAuC,UAAA,UAAU,EAAE;AAAnD,SAPE,EAD4B;AAUhC,QAAA,SAAS,EAAT,SAVgC;AAWhC,QAAA,IAAI,EAAE,iBAAiB,CAAC;AAAE,UAAA,aAAa,EAAE;AAAE,YAAA,KAAK,EAAL;AAAF;AAAjB,SAAD;AAXS,OAA3B,CAAP;AAaD;;;uCAWA;AAAA,UARC,MAQD,SARC,MAQD;AAAA,UAPC,UAOD,SAPC,UAOD;AAAA,UANC,KAMD,SANC,KAMD;AAAA,UALC,YAKD,SALC,YAKD;AAAA,UAJC,IAID,SAJC,IAID;AAAA,UAHC,OAGD,SAHC,OAGD;AAAA,UAFC,cAED,SAFC,cAED;AAAA,UADC,SACD,SADC,SACD;AACC,aAAO,IAAI,SAAA,CAAA,sBAAJ,CAA2B;AAChC,QAAA,IAAI,EAAE,CACJ;AAAE,UAAA,MAAM,EAAE,MAAV;AAAkB,UAAA,QAAQ,EAAE,KAA5B;AAAmC,UAAA,UAAU,EAAE;AAA/C,SADI,EAEJ;AAAE,UAAA,MAAM,EAAE,UAAV;AAAsB,UAAA,QAAQ,EAAE,KAAhC;AAAuC,UAAA,UAAU,EAAE;AAAnD,SAFI,EAGJ;AAAE,UAAA,MAAM,EAAE,YAAV;AAAwB,UAAA,QAAQ,EAAE,KAAlC;AAAyC,UAAA,UAAU,EAAE;AAArD,SAHI,EAIJ;AAAE,UAAA,MAAM,EAAE,KAAV;AAAiB,UAAA,QAAQ,EAAE,IAA3B;AAAiC,UAAA,UAAU,EAAE;AAA7C,SAJI,CAD0B;AAOhC,QAAA,SAAS,EAAT,SAPgC;AAQhC,QAAA,IAAI,EAAE,iBAAiB,CAAC;AACtB,UAAA,WAAW,EAAE;AAAE,YAAA,IAAI,EAAJ,IAAF;AAAQ,YAAA,OAAO,EAAP,OAAR;AAAiB,YAAA,UAAU,EAAV,UAAjB;AAA6B,YAAA,cAAc,EAAd;AAA7B;AADS,SAAD;AARS,OAA3B,CAAP;AAYD;;;iDASA;AAAA,UANC,MAMD,SANC,MAMD;AAAA,UALC,UAKD,SALC,UAKD;AAAA,UAJC,KAID,SAJC,KAID;AAAA,UAHC,YAGD,SAHC,YAGD;AAAA,UAFC,QAED,SAFC,QAED;AAAA,UADC,SACD,SADC,SACD;AACC,aAAO,IAAI,SAAA,CAAA,sBAAJ,CAA2B;AAChC,QAAA,IAAI,EAAE,CACJ;AAAE,UAAA,MAAM,EAAE,MAAV;AAAkB,UAAA,QAAQ,EAAE,KAA5B;AAAmC,UAAA,UAAU,EAAE;AAA/C,SADI,EAEJ;AAAE,UAAA,MAAM,EAAE,UAAV;AAAsB,UAAA,QAAQ,EAAE,KAAhC;AAAuC,UAAA,UAAU,EAAE;AAAnD,SAFI,EAGJ;AAAE,UAAA,MAAM,EAAE,YAAV;AAAwB,UAAA,QAAQ,EAAE,KAAlC;AAAyC,UAAA,UAAU,EAAE;AAArD,SAHI,EAIJ;AAAE,UAAA,MAAM,EAAE,KAAV;AAAiB,UAAA,QAAQ,EAAE,IAA3B;AAAiC,UAAA,UAAU,EAAE;AAA7C,SAJI,CAD0B;AAOhC,QAAA,SAAS,EAAT,SAPgC;AAQhC,QAAA,IAAI,EAAE,iBAAiB,CAAC;AACtB,UAAA,qBAAqB,EAAE;AAAE,YAAA,QAAQ,EAAR;AAAF;AADD,SAAD;AARS,OAA3B,CAAP;AAYD;;;uCAaA;AAAA,UAVC,MAUD,SAVC,MAUD;AAAA,UATC,UASD,SATC,UASD;AAAA,UARC,KAQD,SARC,KAQD;AAAA,UAPC,SAOD,SAPC,SAOD;AAAA,UANC,UAMD,SANC,UAMD;AAAA,UALC,UAKD,SALC,UAKD;AAAA,UAJC,WAID,SAJC,WAID;AAAA,UAHC,WAGD,SAHC,WAGD;AAAA,UAFC,SAED,SAFC,SAED;AAAA,wCADC,mBACD;AAAA,UADC,mBACD,sCADuB,IACvB;AACC,UAAM,IAAI,GAAG,CACX;AAAE,QAAA,MAAM,EAAE,MAAV;AAAkB,QAAA,QAAQ,EAAE,KAA5B;AAAmC,QAAA,UAAU,EAAE;AAA/C,OADW,EAEX;AAAE,QAAA,MAAM,EAAE,UAAV;AAAsB,QAAA,QAAQ,EAAE,KAAhC;AAAuC,QAAA,UAAU,EAAE;AAAnD,OAFW,EAGX;AAAE,QAAA,MAAM,EAAE,KAAV;AAAiB,QAAA,QAAQ,EAAE,IAA3B;AAAiC,QAAA,UAAU,EAAE;AAA7C,OAHW,EAIX;AAAE,QAAA,MAAM,EAAE,SAAV;AAAqB,QAAA,QAAQ,EAAE,KAA/B;AAAsC,QAAA,UAAU,EAAE;AAAlD,OAJW,EAKX;AAAE,QAAA,MAAM,EAAE,UAAV;AAAsB,QAAA,QAAQ,EAAE,KAAhC;AAAuC,QAAA,UAAU,EAAE;AAAnD,OALW,EAMX;AAAE,QAAA,MAAM,EAAE,UAAV;AAAsB,QAAA,QAAQ,EAAE,KAAhC;AAAuC,QAAA,UAAU,EAAE;AAAnD,OANW,EAOX;AAAE,QAAA,MAAM,EAAE,WAAV;AAAuB,QAAA,QAAQ,EAAE,KAAjC;AAAwC,QAAA,UAAU,EAAE;AAApD,OAPW,EAQX;AAAE,QAAA,MAAM,EAAE,WAAV;AAAuB,QAAA,QAAQ,EAAE,KAAjC;AAAwC,QAAA,UAAU,EAAE;AAApD,OARW,EASX;AAAE,QAAA,MAAM,EAAE,oBAAA,CAAA,gBAAV;AAA4B,QAAA,QAAQ,EAAE,KAAtC;AAA6C,QAAA,UAAU,EAAE;AAAzD,OATW,CAAb;;AAWA,UAAI,mBAAJ,EAAyB;AACvB,QAAA,IAAI,CAAC,IAAL,CAAU;AACR,UAAA,MAAM,EAAE,mBADA;AAER,UAAA,QAAQ,EAAE,KAFF;AAGR,UAAA,UAAU,EAAE;AAHJ,SAAV;AAKD;;AACD,aAAO,IAAI,SAAA,CAAA,sBAAJ,CAA2B;AAChC,QAAA,IAAI,EAAJ,IADgC;AAEhC,QAAA,SAAS,EAAT,SAFgC;AAGhC,QAAA,IAAI,EAAE,iBAAiB,CAAC;AACtB,UAAA,WAAW,EAAE;AADS,SAAD;AAHS,OAA3B,CAAP;AAOD;;;;;;AA3NH,OAAA,CAAA,eAAA,GAAA,eAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DexInstructions = exports.decodeInstruction = exports.encodeInstruction = exports.INSTRUCTION_LAYOUT = exports.NEW_ORDER_OWNER_INDEX = exports.NEW_ORDER_OPEN_ORDERS_INDEX = exports.SETTLE_FUNDS_QUOTE_WALLET_INDEX = exports.SETTLE_FUNDS_BASE_WALLET_INDEX = void 0;\nconst buffer_layout_1 = require(\"buffer-layout\");\nconst layout_1 = require(\"./layout\");\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst token_instructions_1 = require(\"./token-instructions\");\n// NOTE: Update these if the position of arguments for the settleFunds instruction changes\nexports.SETTLE_FUNDS_BASE_WALLET_INDEX = 5;\nexports.SETTLE_FUNDS_QUOTE_WALLET_INDEX = 6;\n// NOTE: Update these if the position of arguments for the newOrder instruction changes\nexports.NEW_ORDER_OPEN_ORDERS_INDEX = 1;\nexports.NEW_ORDER_OWNER_INDEX = 4;\nexports.INSTRUCTION_LAYOUT = new layout_1.VersionedLayout(0, buffer_layout_1.union(buffer_layout_1.u32('instruction')));\nexports.INSTRUCTION_LAYOUT.inner.addVariant(0, buffer_layout_1.struct([\n    layout_1.u64('baseLotSize'),\n    layout_1.u64('quoteLotSize'),\n    buffer_layout_1.u16('feeRateBps'),\n    layout_1.u64('vaultSignerNonce'),\n    layout_1.u64('quoteDustThreshold'),\n]), 'initializeMarket');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(1, buffer_layout_1.struct([\n    layout_1.sideLayout('side'),\n    layout_1.u64('limitPrice'),\n    layout_1.u64('maxQuantity'),\n    layout_1.orderTypeLayout('orderType'),\n    layout_1.u64('clientId'),\n]), 'newOrder');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(2, buffer_layout_1.struct([buffer_layout_1.u16('limit')]), 'matchOrders');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(3, buffer_layout_1.struct([buffer_layout_1.u16('limit')]), 'consumeEvents');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(4, buffer_layout_1.struct([\n    layout_1.sideLayout('side'),\n    layout_1.u128('orderId'),\n    layout_1.publicKeyLayout('openOrders'),\n    buffer_layout_1.u8('openOrdersSlot'),\n]), 'cancelOrder');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(5, buffer_layout_1.struct([]), 'settleFunds');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(6, buffer_layout_1.struct([layout_1.u64('clientId')]), 'cancelOrderByClientId');\nfunction encodeInstruction(instruction) {\n    const b = Buffer.alloc(100);\n    return b.slice(0, exports.INSTRUCTION_LAYOUT.encode(instruction, b));\n}\nexports.encodeInstruction = encodeInstruction;\nfunction decodeInstruction(message) {\n    return exports.INSTRUCTION_LAYOUT.decode(message);\n}\nexports.decodeInstruction = decodeInstruction;\nclass DexInstructions {\n    static initializeMarket({ market, requestQueue, eventQueue, bids, asks, baseVault, quoteVault, baseMint, quoteMint, baseLotSize, quoteLotSize, feeRateBps, vaultSignerNonce, quoteDustThreshold, programId, }) {\n        return new web3_js_1.TransactionInstruction({\n            keys: [\n                { pubkey: market, isSigner: false, isWritable: true },\n                { pubkey: requestQueue, isSigner: false, isWritable: true },\n                { pubkey: eventQueue, isSigner: false, isWritable: true },\n                { pubkey: bids, isSigner: false, isWritable: true },\n                { pubkey: asks, isSigner: false, isWritable: true },\n                { pubkey: baseVault, isSigner: false, isWritable: true },\n                { pubkey: quoteVault, isSigner: false, isWritable: true },\n                { pubkey: baseMint, isSigner: false, isWritable: false },\n                { pubkey: quoteMint, isSigner: false, isWritable: false },\n            ],\n            programId,\n            data: encodeInstruction({\n                initializeMarket: {\n                    baseLotSize,\n                    quoteLotSize,\n                    feeRateBps,\n                    vaultSignerNonce,\n                    quoteDustThreshold,\n                },\n            }),\n        });\n    }\n    static newOrder({ market, openOrders, payer, owner, requestQueue, baseVault, quoteVault, side, limitPrice, maxQuantity, orderType, clientId, programId, feeDiscountPubkey = null, }) {\n        const keys = [\n            { pubkey: market, isSigner: false, isWritable: true },\n            { pubkey: openOrders, isSigner: false, isWritable: true },\n            { pubkey: requestQueue, isSigner: false, isWritable: true },\n            { pubkey: payer, isSigner: false, isWritable: true },\n            { pubkey: owner, isSigner: true, isWritable: false },\n            { pubkey: baseVault, isSigner: false, isWritable: true },\n            { pubkey: quoteVault, isSigner: false, isWritable: true },\n            { pubkey: token_instructions_1.TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n            { pubkey: web3_js_1.SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false },\n        ];\n        if (feeDiscountPubkey) {\n            keys.push({\n                pubkey: feeDiscountPubkey,\n                isSigner: false,\n                isWritable: false,\n            });\n        }\n        return new web3_js_1.TransactionInstruction({\n            keys,\n            programId,\n            data: encodeInstruction({\n                newOrder: clientId\n                    ? { side, limitPrice, maxQuantity, orderType, clientId }\n                    : { side, limitPrice, maxQuantity, orderType },\n            }),\n        });\n    }\n    static matchOrders({ market, requestQueue, eventQueue, bids, asks, baseVault, quoteVault, limit, programId, }) {\n        return new web3_js_1.TransactionInstruction({\n            keys: [\n                { pubkey: market, isSigner: false, isWritable: true },\n                { pubkey: requestQueue, isSigner: false, isWritable: true },\n                { pubkey: eventQueue, isSigner: false, isWritable: true },\n                { pubkey: bids, isSigner: false, isWritable: true },\n                { pubkey: asks, isSigner: false, isWritable: true },\n                { pubkey: baseVault, isSigner: false, isWritable: true },\n                { pubkey: quoteVault, isSigner: false, isWritable: true },\n            ],\n            programId,\n            data: encodeInstruction({ matchOrders: { limit } }),\n        });\n    }\n    static consumeEvents({ market, eventQueue, openOrdersAccounts, limit, programId, }) {\n        return new web3_js_1.TransactionInstruction({\n            keys: [\n                ...openOrdersAccounts.map((account) => ({\n                    pubkey: account,\n                    isSigner: false,\n                    isWritable: true,\n                })),\n                { pubkey: market, isSigner: false, isWritable: true },\n                { pubkey: eventQueue, isSigner: false, isWritable: true },\n            ],\n            programId,\n            data: encodeInstruction({ consumeEvents: { limit } }),\n        });\n    }\n    static cancelOrder({ market, openOrders, owner, requestQueue, side, orderId, openOrdersSlot, programId, }) {\n        return new web3_js_1.TransactionInstruction({\n            keys: [\n                { pubkey: market, isSigner: false, isWritable: false },\n                { pubkey: openOrders, isSigner: false, isWritable: true },\n                { pubkey: requestQueue, isSigner: false, isWritable: true },\n                { pubkey: owner, isSigner: true, isWritable: false },\n            ],\n            programId,\n            data: encodeInstruction({\n                cancelOrder: { side, orderId, openOrders, openOrdersSlot },\n            }),\n        });\n    }\n    static cancelOrderByClientId({ market, openOrders, owner, requestQueue, clientId, programId, }) {\n        return new web3_js_1.TransactionInstruction({\n            keys: [\n                { pubkey: market, isSigner: false, isWritable: false },\n                { pubkey: openOrders, isSigner: false, isWritable: true },\n                { pubkey: requestQueue, isSigner: false, isWritable: true },\n                { pubkey: owner, isSigner: true, isWritable: false },\n            ],\n            programId,\n            data: encodeInstruction({\n                cancelOrderByClientId: { clientId },\n            }),\n        });\n    }\n    static settleFunds({ market, openOrders, owner, baseVault, quoteVault, baseWallet, quoteWallet, vaultSigner, programId, referrerQuoteWallet = null, }) {\n        const keys = [\n            { pubkey: market, isSigner: false, isWritable: true },\n            { pubkey: openOrders, isSigner: false, isWritable: true },\n            { pubkey: owner, isSigner: true, isWritable: false },\n            { pubkey: baseVault, isSigner: false, isWritable: true },\n            { pubkey: quoteVault, isSigner: false, isWritable: true },\n            { pubkey: baseWallet, isSigner: false, isWritable: true },\n            { pubkey: quoteWallet, isSigner: false, isWritable: true },\n            { pubkey: vaultSigner, isSigner: false, isWritable: false },\n            { pubkey: token_instructions_1.TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n        ];\n        if (referrerQuoteWallet) {\n            keys.push({\n                pubkey: referrerQuoteWallet,\n                isSigner: false,\n                isWritable: true,\n            });\n        }\n        return new web3_js_1.TransactionInstruction({\n            keys,\n            programId,\n            data: encodeInstruction({\n                settleFunds: {},\n            }),\n        });\n    }\n}\nexports.DexInstructions = DexInstructions;\n//# sourceMappingURL=instructions.js.map"]},"metadata":{},"sourceType":"script"}