{"ast":null,"code":"var _jsxFileName = \"/home/yclnl/yclnl.github.io/src/components/pool/config.tsx\";\nimport React, { useState } from \"react\";\nimport { Card, Select } from \"antd\";\nimport { NumericInput } from \"../numericInput\";\nimport \"./add.less\";\nconst Option = Select.Option;\nexport const DEFAULT_DENOMINATOR = 10000;\n\nconst FeeInput = props => {\n  const [value, setValue] = useState((props.numerator / props.denominator * 100).toString());\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: \"3px 10px 3px 3px\",\n      border: \"1px solid #434343\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(NumericInput, {\n    className: \"slippage-input\",\n    size: \"small\",\n    value: value,\n    style: {\n      width: 50,\n      fontSize: 14,\n      boxShadow: \"none\",\n      borderColor: \"transparent\",\n      outline: \"transpaernt\"\n    },\n    onChange: x => {\n      setValue(x);\n      const val = parseFloat(x);\n\n      if (Number.isFinite(val)) {\n        const numerator = val * DEFAULT_DENOMINATOR / 100;\n        props.set(numerator, DEFAULT_DENOMINATOR);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }), \"%\");\n}; // sets fee in the pool to 0.3%\n// see for fees details: https://uniswap.org/docs/v2/advanced-topics/fees/\n\n\nexport const PoolConfigCard = props => {\n  const {\n    tradeFeeNumerator,\n    tradeFeeDenominator,\n    ownerTradeFeeNumerator,\n    ownerTradeFeeDenominator,\n    ownerWithdrawFeeNumerator,\n    ownerWithdrawFeeDenominator\n  } = props.options;\n  return /*#__PURE__*/React.createElement(Card, {\n    title: \"Pool configuration\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pool-settings-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, \"LPs Trading Fee:\"), /*#__PURE__*/React.createElement(FeeInput, {\n    numerator: tradeFeeNumerator,\n    denominator: tradeFeeDenominator,\n    set: (numerator, denominator) => props.setOptions({ ...props.options,\n      tradeFeeNumerator: numerator,\n      tradeFeeDenominator: denominator\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, \"Owner Trading Fee:\"), /*#__PURE__*/React.createElement(FeeInput, {\n    numerator: ownerTradeFeeNumerator,\n    denominator: ownerTradeFeeDenominator,\n    set: (numerator, denominator) => props.setOptions({ ...props.options,\n      ownerTradeFeeNumerator: numerator,\n      ownerTradeFeeDenominator: denominator\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, \"Withdraw Fee:\"), /*#__PURE__*/React.createElement(FeeInput, {\n    numerator: ownerWithdrawFeeNumerator,\n    denominator: ownerWithdrawFeeDenominator,\n    set: (numerator, denominator) => props.setOptions({ ...props.options,\n      ownerWithdrawFeeNumerator: numerator,\n      ownerWithdrawFeeDenominator: denominator\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }, \"Curve Type:\"), /*#__PURE__*/React.createElement(Select, {\n    defaultValue: \"0\",\n    style: {\n      width: 200\n    },\n    onChange: val => props.setOptions({ ...props.options,\n      curveType: parseInt(val)\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Option, {\n    value: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }, \"Constant Product\"), /*#__PURE__*/React.createElement(Option, {\n    value: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }, \"Flat\")))));\n};","map":{"version":3,"sources":["/home/yclnl/yclnl.github.io/src/components/pool/config.tsx"],"names":["React","useState","Card","Select","NumericInput","Option","DEFAULT_DENOMINATOR","FeeInput","props","value","setValue","numerator","denominator","toString","padding","border","width","fontSize","boxShadow","borderColor","outline","x","val","parseFloat","Number","isFinite","set","PoolConfigCard","tradeFeeNumerator","tradeFeeDenominator","ownerTradeFeeNumerator","ownerTradeFeeDenominator","ownerWithdrawFeeNumerator","ownerWithdrawFeeDenominator","options","setOptions","curveType","parseInt"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Card, Select } from \"antd\";\nimport { NumericInput } from \"../numericInput\";\nimport \"./add.less\";\nimport { PoolConfig } from \"../../models\";\n\nconst Option = Select.Option;\n\nexport const DEFAULT_DENOMINATOR = 10_000;\n\nconst FeeInput = (props: {\n  numerator: number;\n  denominator: number;\n  set: (numerator: number, denominator: number) => void;\n}) => {\n  const [value, setValue] = useState(\n    ((props.numerator / props.denominator) * 100).toString()\n  );\n\n  return (\n    <div style={{ padding: \"3px 10px 3px 3px\", border: \"1px solid #434343\" }}>\n      <NumericInput\n        className=\"slippage-input\"\n        size=\"small\"\n        value={value}\n        style={{\n          width: 50,\n          fontSize: 14,\n          boxShadow: \"none\",\n          borderColor: \"transparent\",\n          outline: \"transpaernt\",\n        }}\n        onChange={(x: any) => {\n          setValue(x);\n\n          const val = parseFloat(x);\n          if (Number.isFinite(val)) {\n            const numerator = (val * DEFAULT_DENOMINATOR) / 100;\n            props.set(numerator, DEFAULT_DENOMINATOR);\n          }\n        }}\n      />\n      %\n    </div>\n  );\n};\n\n// sets fee in the pool to 0.3%\n// see for fees details: https://uniswap.org/docs/v2/advanced-topics/fees/\nexport const PoolConfigCard = (props: {\n  options: PoolConfig;\n  setOptions: (config: PoolConfig) => void;\n}) => {\n  const {\n    tradeFeeNumerator,\n    tradeFeeDenominator,\n    ownerTradeFeeNumerator,\n    ownerTradeFeeDenominator,\n    ownerWithdrawFeeNumerator,\n    ownerWithdrawFeeDenominator,\n  } = props.options;\n\n  return (\n    <Card title=\"Pool configuration\">\n      <div className=\"pool-settings-grid\">\n        <>\n          <span>LPs Trading Fee:</span>\n          <FeeInput\n            numerator={tradeFeeNumerator}\n            denominator={tradeFeeDenominator}\n            set={(numerator, denominator) =>\n              props.setOptions({\n                ...props.options,\n                tradeFeeNumerator: numerator,\n                tradeFeeDenominator: denominator,\n              })\n            }\n          />\n        </>\n        <>\n          <span>Owner Trading Fee:</span>\n          <FeeInput\n            numerator={ownerTradeFeeNumerator}\n            denominator={ownerTradeFeeDenominator}\n            set={(numerator, denominator) =>\n              props.setOptions({\n                ...props.options,\n                ownerTradeFeeNumerator: numerator,\n                ownerTradeFeeDenominator: denominator,\n              })\n            }\n          />\n        </>\n        <>\n          <span>Withdraw Fee:</span>\n          <FeeInput\n            numerator={ownerWithdrawFeeNumerator}\n            denominator={ownerWithdrawFeeDenominator}\n            set={(numerator, denominator) =>\n              props.setOptions({\n                ...props.options,\n                ownerWithdrawFeeNumerator: numerator,\n                ownerWithdrawFeeDenominator: denominator,\n              })\n            }\n          />\n        </>\n        <>\n          <span>Curve Type:</span>\n          <Select\n            defaultValue=\"0\"\n            style={{ width: 200 }}\n            onChange={(val) =>\n              props.setOptions({\n                ...props.options,\n                curveType: parseInt(val) as any,\n              })\n            }\n          >\n            <Option value=\"0\">Constant Product</Option>\n            <Option value=\"1\">Flat</Option>\n          </Select>\n        </>\n      </div>\n    </Card>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}