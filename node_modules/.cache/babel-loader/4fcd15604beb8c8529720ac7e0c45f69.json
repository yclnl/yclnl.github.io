{"ast":null,"code":"import { EventEmitter as Emitter } from \"eventemitter3\";\nexport class AccountUpdateEvent {\n  constructor(id) {\n    this.id = void 0;\n    this.id = id;\n  }\n\n}\nAccountUpdateEvent.type = \"AccountUpdate\";\nexport class MarketUpdateEvent {\n  constructor(ids) {\n    this.ids = void 0;\n    this.ids = ids;\n  }\n\n}\nMarketUpdateEvent.type = \"MarketUpdate\";\nexport class EventEmitter {\n  constructor() {\n    this.emitter = new Emitter();\n  }\n\n  onMarket(callback) {\n    this.emitter.on(MarketUpdateEvent.type, callback);\n    return () => this.emitter.removeListener(MarketUpdateEvent.type, callback);\n  }\n\n  onAccount(callback) {\n    this.emitter.on(AccountUpdateEvent.type, callback);\n    return () => this.emitter.removeListener(AccountUpdateEvent.type, callback);\n  }\n\n  raiseAccountUpdated(id) {\n    this.emitter.emit(AccountUpdateEvent.type, new AccountUpdateEvent(id));\n  }\n\n  raiseMarketUpdated(ids) {\n    this.emitter.emit(MarketUpdateEvent.type, new MarketUpdateEvent(ids));\n  }\n\n}","map":{"version":3,"sources":["/home/yclnl/yclnl.github.io/src/utils/eventEmitter.ts"],"names":["EventEmitter","Emitter","AccountUpdateEvent","constructor","id","type","MarketUpdateEvent","ids","emitter","onMarket","callback","on","removeListener","onAccount","raiseAccountUpdated","emit","raiseMarketUpdated"],"mappings":"AAAA,SAASA,YAAY,IAAIC,OAAzB,QAAwC,eAAxC;AAEA,OAAO,MAAMC,kBAAN,CAAyB;AAG9BC,EAAAA,WAAW,CAACC,EAAD,EAAa;AAAA,SADxBA,EACwB;AACtB,SAAKA,EAAL,GAAUA,EAAV;AACD;;AAL6B;AAAnBF,kB,CACJG,I,GAAO,e;AAOhB,OAAO,MAAMC,iBAAN,CAAwB;AAG7BH,EAAAA,WAAW,CAACI,GAAD,EAAmB;AAAA,SAD9BA,GAC8B;AAC5B,SAAKA,GAAL,GAAWA,GAAX;AACD;;AAL4B;AAAlBD,iB,CACJD,I,GAAO,c;AAOhB,OAAO,MAAML,YAAN,CAAmB;AAAA;AAAA,SAChBQ,OADgB,GACN,IAAIP,OAAJ,EADM;AAAA;;AAGxBQ,EAAAA,QAAQ,CAACC,QAAD,EAA8C;AACpD,SAAKF,OAAL,CAAaG,EAAb,CAAgBL,iBAAiB,CAACD,IAAlC,EAAwCK,QAAxC;AAEA,WAAO,MAAM,KAAKF,OAAL,CAAaI,cAAb,CAA4BN,iBAAiB,CAACD,IAA9C,EAAoDK,QAApD,CAAb;AACD;;AAEDG,EAAAA,SAAS,CAACH,QAAD,EAA+C;AACtD,SAAKF,OAAL,CAAaG,EAAb,CAAgBT,kBAAkB,CAACG,IAAnC,EAAyCK,QAAzC;AAEA,WAAO,MAAM,KAAKF,OAAL,CAAaI,cAAb,CAA4BV,kBAAkB,CAACG,IAA/C,EAAqDK,QAArD,CAAb;AACD;;AAEDI,EAAAA,mBAAmB,CAACV,EAAD,EAAa;AAC9B,SAAKI,OAAL,CAAaO,IAAb,CAAkBb,kBAAkB,CAACG,IAArC,EAA2C,IAAIH,kBAAJ,CAAuBE,EAAvB,CAA3C;AACD;;AAEDY,EAAAA,kBAAkB,CAACT,GAAD,EAAmB;AACnC,SAAKC,OAAL,CAAaO,IAAb,CAAkBT,iBAAiB,CAACD,IAApC,EAA0C,IAAIC,iBAAJ,CAAsBC,GAAtB,CAA1C;AACD;;AArBuB","sourcesContent":["import { EventEmitter as Emitter } from \"eventemitter3\";\n\nexport class AccountUpdateEvent {\n  static type = \"AccountUpdate\";\n  id: string;\n  constructor(id: string) {\n    this.id = id;\n  }\n}\n\nexport class MarketUpdateEvent {\n  static type = \"MarketUpdate\";\n  ids: Set<string>;\n  constructor(ids: Set<string>) {\n    this.ids = ids;\n  }\n}\n\nexport class EventEmitter {\n  private emitter = new Emitter();\n\n  onMarket(callback: (args: MarketUpdateEvent) => void) {\n    this.emitter.on(MarketUpdateEvent.type, callback);\n\n    return () => this.emitter.removeListener(MarketUpdateEvent.type, callback);\n  }\n\n  onAccount(callback: (args: AccountUpdateEvent) => void) {\n    this.emitter.on(AccountUpdateEvent.type, callback);\n\n    return () => this.emitter.removeListener(AccountUpdateEvent.type, callback);\n  }\n\n  raiseAccountUpdated(id: string) {\n    this.emitter.emit(AccountUpdateEvent.type, new AccountUpdateEvent(id));\n  }\n\n  raiseMarketUpdated(ids: Set<string>) {\n    this.emitter.emit(MarketUpdateEvent.type, new MarketUpdateEvent(ids));\n  }\n}\n"]},"metadata":{},"sourceType":"module"}