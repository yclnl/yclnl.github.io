{"ast":null,"code":"import _slicedToArray from\"/home/yclnl/yclnl.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useCallback,useState}from\"react\";import PopularTokens from\"./token-list.json\";var AddressToToken=Object.keys(PopularTokens).reduce(function(map,key){var tokens=PopularTokens[key];var knownMints=tokens.reduce(function(map,item){map.set(item.mintAddress,item);return map;},new Map());map.set(key,knownMints);return map;},new Map());export function useLocalStorageState(key,defaultState){var _useState=useState(function(){// NOTE: Not sure if this is ok\nvar storedState=localStorage.getItem(key);if(storedState){return JSON.parse(storedState);}return defaultState;}),_useState2=_slicedToArray(_useState,2),state=_useState2[0],setState=_useState2[1];var setLocalStorageState=useCallback(function(newState){var changed=state!==newState;if(!changed){return;}setState(newState);if(newState===null){localStorage.removeItem(key);}else{localStorage.setItem(key,JSON.stringify(newState));}},[state,key]);return[state,setLocalStorageState];}// shorten the checksummed version of the input address to have 4 characters at start and end\nexport function shortenAddress(address){var chars=arguments.length>1&&arguments[1]!==undefined?arguments[1]:4;return\"\".concat(address.slice(0,chars),\"...\").concat(address.slice(-chars));}export function getTokenName(env,mintAddress){var _AddressToToken$get,_AddressToToken$get$g;var shorten=arguments.length>2&&arguments[2]!==undefined?arguments[2]:true;var knownSymbol=(_AddressToToken$get=AddressToToken.get(env))===null||_AddressToToken$get===void 0?void 0:(_AddressToToken$get$g=_AddressToToken$get.get(mintAddress))===null||_AddressToToken$get$g===void 0?void 0:_AddressToToken$get$g.tokenSymbol;if(knownSymbol){return knownSymbol;}return shorten?\"\".concat(mintAddress.substring(0,5),\"...\"):mintAddress;}export function getTokenIcon(env,mintAddress){var _AddressToToken$get2,_AddressToToken$get2$;return(_AddressToToken$get2=AddressToToken.get(env))===null||_AddressToToken$get2===void 0?void 0:(_AddressToToken$get2$=_AddressToToken$get2.get(mintAddress))===null||_AddressToToken$get2$===void 0?void 0:_AddressToToken$get2$.icon;}export function getPoolName(env,pool){var shorten=arguments.length>2&&arguments[2]!==undefined?arguments[2]:true;var sorted=pool.pubkeys.holdingMints.map(function(a){return a.toBase58();}).sort();return sorted.map(function(item){return getTokenName(env,item,shorten);}).join(\"/\");}export function isKnownMint(env,mintAddress){var _AddressToToken$get3;return!!((_AddressToToken$get3=AddressToToken.get(env))===null||_AddressToToken$get3===void 0?void 0:_AddressToToken$get3.get(mintAddress));}export var STABLE_COINS=new Set([\"USDC\",\"wUSDC\",\"USDT\"]);export function chunks(array,size){return Array.apply(0,new Array(Math.ceil(array.length/size))).map(function(_,index){return array.slice(index*size,(index+1)*size);});}export function convert(account,mint){var _account$info$amount;var rate=arguments.length>2&&arguments[2]!==undefined?arguments[2]:1.0;if(!account){return 0;}var precision=Math.pow(10,(mint===null||mint===void 0?void 0:mint.decimals)||0);return((_account$info$amount=account.info.amount)===null||_account$info$amount===void 0?void 0:_account$info$amount.toNumber())/precision*rate;}var SI_SYMBOL=[\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\"];var abbreviateNumber=function abbreviateNumber(number,precision){var tier=Math.log10(number)/3|0;var scaled=number;var suffix=SI_SYMBOL[tier];if(tier!==0){var scale=Math.pow(10,tier*3);scaled=number/scale;}return scaled.toFixed(precision)+suffix;};var format=function format(val,precision,abbr){return abbr?abbreviateNumber(val,precision):val.toFixed(precision);};export function formatTokenAmount(account,mint){var rate=arguments.length>2&&arguments[2]!==undefined?arguments[2]:1.0;var prefix=arguments.length>3&&arguments[3]!==undefined?arguments[3]:\"\";var suffix=arguments.length>4&&arguments[4]!==undefined?arguments[4]:\"\";var precision=arguments.length>5&&arguments[5]!==undefined?arguments[5]:6;var abbr=arguments.length>6&&arguments[6]!==undefined?arguments[6]:false;if(!account){return\"\";}return\"\".concat([prefix]).concat(format(convert(account,mint,rate),precision,abbr)).concat(suffix);}export var formatUSD=new Intl.NumberFormat(\"en-US\",{style:\"currency\",currency:\"USD\"});export var formatPct=new Intl.NumberFormat(\"en-US\",{style:\"percent\",minimumFractionDigits:2,maximumFractionDigits:2});","map":{"version":3,"sources":["/home/yclnl/yclnl.github.io/src/utils/utils.ts"],"names":["useCallback","useState","PopularTokens","AddressToToken","Object","keys","reduce","map","key","tokens","knownMints","item","set","mintAddress","Map","useLocalStorageState","defaultState","storedState","localStorage","getItem","JSON","parse","state","setState","setLocalStorageState","newState","changed","removeItem","setItem","stringify","shortenAddress","address","chars","slice","getTokenName","env","shorten","knownSymbol","get","tokenSymbol","substring","getTokenIcon","icon","getPoolName","pool","sorted","pubkeys","holdingMints","a","toBase58","sort","join","isKnownMint","STABLE_COINS","Set","chunks","array","size","Array","apply","Math","ceil","length","_","index","convert","account","mint","rate","precision","pow","decimals","info","amount","toNumber","SI_SYMBOL","abbreviateNumber","number","tier","log10","scaled","suffix","scale","toFixed","format","val","abbr","formatTokenAmount","prefix","formatUSD","Intl","NumberFormat","style","currency","formatPct","minimumFractionDigits","maximumFractionDigits"],"mappings":"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","sourcesContent":["import { useCallback, useState } from \"react\";\nimport { MintInfo } from \"@solana/spl-token\";\n\nimport PopularTokens from \"./token-list.json\";\nimport { ENV } from \"./connection\";\nimport { PoolInfo, TokenAccount } from \"./../models\";\n\nexport interface KnownToken {\n  tokenSymbol: string;\n  tokenName: string;\n  icon: string;\n  mintAddress: string;\n}\n\nconst AddressToToken = Object.keys(PopularTokens).reduce((map, key) => {\n  const tokens = PopularTokens[key as ENV] as KnownToken[];\n  const knownMints = tokens.reduce((map, item) => {\n    map.set(item.mintAddress, item);\n    return map;\n  }, new Map<string, KnownToken>());\n\n  map.set(key as ENV, knownMints);\n\n  return map;\n}, new Map<ENV, Map<string, KnownToken>>());\n\nexport function useLocalStorageState(key: string, defaultState?: string) {\n  const [state, setState] = useState(() => {\n    // NOTE: Not sure if this is ok\n    const storedState = localStorage.getItem(key);\n    if (storedState) {\n      return JSON.parse(storedState);\n    }\n    return defaultState;\n  });\n\n  const setLocalStorageState = useCallback(\n    (newState) => {\n      const changed = state !== newState;\n      if (!changed) {\n        return;\n      }\n      setState(newState);\n      if (newState === null) {\n        localStorage.removeItem(key);\n      } else {\n        localStorage.setItem(key, JSON.stringify(newState));\n      }\n    },\n    [state, key]\n  );\n\n  return [state, setLocalStorageState];\n}\n\n// shorten the checksummed version of the input address to have 4 characters at start and end\nexport function shortenAddress(address: string, chars = 4): string {\n  return `${address.slice(0, chars)}...${address.slice(-chars)}`;\n}\n\nexport function getTokenName(\n  env: ENV,\n  mintAddress: string,\n  shorten = true\n): string {\n  const knownSymbol = AddressToToken.get(env)?.get(mintAddress)?.tokenSymbol;\n  if (knownSymbol) {\n    return knownSymbol;\n  }\n\n  return shorten ? `${mintAddress.substring(0, 5)}...` : mintAddress;\n}\n\nexport function getTokenIcon(\n  env: ENV,\n  mintAddress: string\n): string | undefined {\n  return AddressToToken.get(env)?.get(mintAddress)?.icon;\n}\n\nexport function getPoolName(env: ENV, pool: PoolInfo, shorten = true) {\n  const sorted = pool.pubkeys.holdingMints.map((a) => a.toBase58()).sort();\n  return sorted.map((item) => getTokenName(env, item, shorten)).join(\"/\");\n}\n\nexport function isKnownMint(env: ENV, mintAddress: string) {\n  return !!AddressToToken.get(env)?.get(mintAddress);\n}\n\nexport const STABLE_COINS = new Set([\"USDC\", \"wUSDC\", \"USDT\"]);\n\nexport function chunks<T>(array: T[], size: number): T[][] {\n  return Array.apply<number, T[], T[][]>(\n    0,\n    new Array(Math.ceil(array.length / size))\n  ).map((_, index) => array.slice(index * size, (index + 1) * size));\n}\n\nexport function convert(\n  account?: TokenAccount,\n  mint?: MintInfo,\n  rate: number = 1.0\n): number {\n  if (!account) {\n    return 0;\n  }\n\n  const precision = Math.pow(10, mint?.decimals || 0);\n  return (account.info.amount?.toNumber() / precision) * rate;\n}\n\nvar SI_SYMBOL = [\"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\"];\n\nconst abbreviateNumber = (number: number, precision: number) => {\n  let tier = (Math.log10(number) / 3) | 0;\n  let scaled = number;\n  let suffix = SI_SYMBOL[tier];\n  if (tier !== 0) {\n    let scale = Math.pow(10, tier * 3);\n    scaled = number / scale;\n  }\n\n  return scaled.toFixed(precision) + suffix;\n};\n\nconst format = (val: number, precision: number, abbr: boolean) =>\n  abbr ? abbreviateNumber(val, precision) : val.toFixed(precision);\n\nexport function formatTokenAmount(\n  account?: TokenAccount,\n  mint?: MintInfo,\n  rate: number = 1.0,\n  prefix = \"\",\n  suffix = \"\",\n  precision = 6,\n  abbr = false\n): string {\n  if (!account) {\n    return \"\";\n  }\n\n  return `${[prefix]}${format(\n    convert(account, mint, rate),\n    precision,\n    abbr\n  )}${suffix}`;\n}\n\nexport const formatUSD = new Intl.NumberFormat(\"en-US\", {\n  style: \"currency\",\n  currency: \"USD\",\n});\nexport const formatPct = new Intl.NumberFormat(\"en-US\", {\n  style: \"percent\",\n  minimumFractionDigits: 2,\n  maximumFractionDigits: 2,\n});\n"]},"metadata":{},"sourceType":"module"}