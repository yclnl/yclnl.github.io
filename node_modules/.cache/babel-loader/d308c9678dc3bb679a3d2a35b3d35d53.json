{"ast":null,"code":"import _objectSpread from\"/home/yclnl/yclnl.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/yclnl/yclnl.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{Card,Select}from\"antd\";import{NumericInput}from\"../numericInput\";import\"./add.less\";var Option=Select.Option;export var DEFAULT_DENOMINATOR=10000;var FeeInput=function FeeInput(props){var _useState=useState((props.numerator/props.denominator*100).toString()),_useState2=_slicedToArray(_useState,2),value=_useState2[0],setValue=_useState2[1];return/*#__PURE__*/React.createElement(\"div\",{style:{padding:\"3px 10px 3px 3px\",border:\"1px solid #434343\"}},/*#__PURE__*/React.createElement(NumericInput,{className:\"slippage-input\",size:\"small\",value:value,style:{width:50,fontSize:14,boxShadow:\"none\",borderColor:\"transparent\",outline:\"transpaernt\"},onChange:function onChange(x){setValue(x);var val=parseFloat(x);if(Number.isFinite(val)){var _numerator=val*DEFAULT_DENOMINATOR/100;props.set(_numerator,DEFAULT_DENOMINATOR);}}}),\"%\");};// sets fee in the pool to 0.3%\n// see for fees details: https://uniswap.org/docs/v2/advanced-topics/fees/\nexport var PoolConfigCard=function PoolConfigCard(props){var _props$options=props.options,tradeFeeNumerator=_props$options.tradeFeeNumerator,tradeFeeDenominator=_props$options.tradeFeeDenominator,ownerTradeFeeNumerator=_props$options.ownerTradeFeeNumerator,ownerTradeFeeDenominator=_props$options.ownerTradeFeeDenominator,ownerWithdrawFeeNumerator=_props$options.ownerWithdrawFeeNumerator,ownerWithdrawFeeDenominator=_props$options.ownerWithdrawFeeDenominator;return/*#__PURE__*/React.createElement(Card,{title:\"Pool configuration\"},/*#__PURE__*/React.createElement(\"div\",{className:\"pool-settings-grid\"},/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"span\",null,\"LPs Trading Fee:\"),/*#__PURE__*/React.createElement(FeeInput,{numerator:tradeFeeNumerator,denominator:tradeFeeDenominator,set:function set(numerator,denominator){return props.setOptions(_objectSpread(_objectSpread({},props.options),{},{tradeFeeNumerator:numerator,tradeFeeDenominator:denominator}));}})),/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"span\",null,\"Owner Trading Fee:\"),/*#__PURE__*/React.createElement(FeeInput,{numerator:ownerTradeFeeNumerator,denominator:ownerTradeFeeDenominator,set:function set(numerator,denominator){return props.setOptions(_objectSpread(_objectSpread({},props.options),{},{ownerTradeFeeNumerator:numerator,ownerTradeFeeDenominator:denominator}));}})),/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"span\",null,\"Withdraw Fee:\"),/*#__PURE__*/React.createElement(FeeInput,{numerator:ownerWithdrawFeeNumerator,denominator:ownerWithdrawFeeDenominator,set:function set(numerator,denominator){return props.setOptions(_objectSpread(_objectSpread({},props.options),{},{ownerWithdrawFeeNumerator:numerator,ownerWithdrawFeeDenominator:denominator}));}})),/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"span\",null,\"Curve Type:\"),/*#__PURE__*/React.createElement(Select,{defaultValue:\"0\",style:{width:200},onChange:function onChange(val){return props.setOptions(_objectSpread(_objectSpread({},props.options),{},{curveType:parseInt(val)}));}},/*#__PURE__*/React.createElement(Option,{value:\"0\"},\"Constant Product\"),/*#__PURE__*/React.createElement(Option,{value:\"1\"},\"Flat\")))));};","map":{"version":3,"sources":["/home/yclnl/yclnl.github.io/src/components/pool/config.tsx"],"names":["React","useState","Card","Select","NumericInput","Option","DEFAULT_DENOMINATOR","FeeInput","props","numerator","denominator","toString","value","setValue","padding","border","width","fontSize","boxShadow","borderColor","outline","x","val","parseFloat","Number","isFinite","set","PoolConfigCard","options","tradeFeeNumerator","tradeFeeDenominator","ownerTradeFeeNumerator","ownerTradeFeeDenominator","ownerWithdrawFeeNumerator","ownerWithdrawFeeDenominator","setOptions","curveType","parseInt"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Card, Select } from \"antd\";\nimport { NumericInput } from \"../numericInput\";\nimport \"./add.less\";\nimport { PoolConfig } from \"../../models\";\n\nconst Option = Select.Option;\n\nexport const DEFAULT_DENOMINATOR = 10_000;\n\nconst FeeInput = (props: {\n  numerator: number;\n  denominator: number;\n  set: (numerator: number, denominator: number) => void;\n}) => {\n  const [value, setValue] = useState(\n    ((props.numerator / props.denominator) * 100).toString()\n  );\n\n  return (\n    <div style={{ padding: \"3px 10px 3px 3px\", border: \"1px solid #434343\" }}>\n      <NumericInput\n        className=\"slippage-input\"\n        size=\"small\"\n        value={value}\n        style={{\n          width: 50,\n          fontSize: 14,\n          boxShadow: \"none\",\n          borderColor: \"transparent\",\n          outline: \"transpaernt\",\n        }}\n        onChange={(x: any) => {\n          setValue(x);\n\n          const val = parseFloat(x);\n          if (Number.isFinite(val)) {\n            const numerator = (val * DEFAULT_DENOMINATOR) / 100;\n            props.set(numerator, DEFAULT_DENOMINATOR);\n          }\n        }}\n      />\n      %\n    </div>\n  );\n};\n\n// sets fee in the pool to 0.3%\n// see for fees details: https://uniswap.org/docs/v2/advanced-topics/fees/\nexport const PoolConfigCard = (props: {\n  options: PoolConfig;\n  setOptions: (config: PoolConfig) => void;\n}) => {\n  const {\n    tradeFeeNumerator,\n    tradeFeeDenominator,\n    ownerTradeFeeNumerator,\n    ownerTradeFeeDenominator,\n    ownerWithdrawFeeNumerator,\n    ownerWithdrawFeeDenominator,\n  } = props.options;\n\n  return (\n    <Card title=\"Pool configuration\">\n      <div className=\"pool-settings-grid\">\n        <>\n          <span>LPs Trading Fee:</span>\n          <FeeInput\n            numerator={tradeFeeNumerator}\n            denominator={tradeFeeDenominator}\n            set={(numerator, denominator) =>\n              props.setOptions({\n                ...props.options,\n                tradeFeeNumerator: numerator,\n                tradeFeeDenominator: denominator,\n              })\n            }\n          />\n        </>\n        <>\n          <span>Owner Trading Fee:</span>\n          <FeeInput\n            numerator={ownerTradeFeeNumerator}\n            denominator={ownerTradeFeeDenominator}\n            set={(numerator, denominator) =>\n              props.setOptions({\n                ...props.options,\n                ownerTradeFeeNumerator: numerator,\n                ownerTradeFeeDenominator: denominator,\n              })\n            }\n          />\n        </>\n        <>\n          <span>Withdraw Fee:</span>\n          <FeeInput\n            numerator={ownerWithdrawFeeNumerator}\n            denominator={ownerWithdrawFeeDenominator}\n            set={(numerator, denominator) =>\n              props.setOptions({\n                ...props.options,\n                ownerWithdrawFeeNumerator: numerator,\n                ownerWithdrawFeeDenominator: denominator,\n              })\n            }\n          />\n        </>\n        <>\n          <span>Curve Type:</span>\n          <Select\n            defaultValue=\"0\"\n            style={{ width: 200 }}\n            onChange={(val) =>\n              props.setOptions({\n                ...props.options,\n                curveType: parseInt(val) as any,\n              })\n            }\n          >\n            <Option value=\"0\">Constant Product</Option>\n            <Option value=\"1\">Flat</Option>\n          </Select>\n        </>\n      </div>\n    </Card>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}