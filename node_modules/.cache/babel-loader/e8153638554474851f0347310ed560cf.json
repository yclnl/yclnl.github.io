{"ast":null,"code":"import React,{useEffect,useRef}from\"react\";import Jazzicon from\"jazzicon\";import bs58 from'bs58';import\"./style.less\";export var Identicon=function Identicon(props){var address=props.address,style=props.style;var ref=useRef();useEffect(function(){if(address&&ref.current){ref.current.innerHTML=\"\";ref.current.appendChild(Jazzicon((style===null||style===void 0?void 0:style.width)||16,parseInt(bs58.decode(address).toString('hex').slice(5,15),16)));}},[address,style]);return/*#__PURE__*/React.createElement(\"div\",{className:\"identicon-wrapper\",ref:ref,style:props.style});};","map":{"version":3,"sources":["/home/yclnl/yclnl.github.io/src/components/identicon/index.tsx"],"names":["React","useEffect","useRef","Jazzicon","bs58","Identicon","props","address","style","ref","current","innerHTML","appendChild","width","parseInt","decode","toString","slice"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,MAA3B,KAAyC,OAAzC,CAEA,MAAOC,CAAAA,QAAP,KAAqB,UAArB,CACA,MAAOC,CAAAA,IAAP,KAAiB,MAAjB,CACA,MAAO,cAAP,CAEA,MAAO,IAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,KAAD,CAGnB,IACIC,CAAAA,OADJ,CACuBD,KADvB,CACIC,OADJ,CACaC,KADb,CACuBF,KADvB,CACaE,KADb,CAEJ,GAAMC,CAAAA,GAAG,CAAGP,MAAM,EAAlB,CAEAD,SAAS,CAAC,UAAM,CACd,GAAIM,OAAO,EAAIE,GAAG,CAACC,OAAnB,CAA4B,CAC1BD,GAAG,CAACC,OAAJ,CAAYC,SAAZ,CAAwB,EAAxB,CACAF,GAAG,CAACC,OAAJ,CAAYE,WAAZ,CACET,QAAQ,CAAC,CAAAK,KAAK,OAAL,EAAAA,KAAK,SAAL,QAAAA,KAAK,CAAEK,KAAP,GAAgB,EAAjB,CAAqBC,QAAQ,CAACV,IAAI,CAACW,MAAL,CAAYR,OAAZ,EAAqBS,QAArB,CAA8B,KAA9B,EAAqCC,KAArC,CAA2C,CAA3C,CAA8C,EAA9C,CAAD,CAAoD,EAApD,CAA7B,CADV,EAGD,CACF,CAPQ,CAON,CAACV,OAAD,CAAUC,KAAV,CAPM,CAAT,CASA,mBACE,2BAAK,SAAS,CAAC,mBAAf,CAAmC,GAAG,CAAEC,GAAxC,CAAoD,KAAK,CAAEH,KAAK,CAACE,KAAjE,EADF,CAGD,CAnBM","sourcesContent":["import React, { useEffect, useRef } from \"react\";\n\nimport Jazzicon from \"jazzicon\";\nimport bs58 from 'bs58';\nimport \"./style.less\";\n\nexport const Identicon = (props: {\n  address?: string;\n  style?: React.CSSProperties;\n}) => {\n  const { address, style } = props;\n  const ref = useRef<HTMLDivElement>();\n\n  useEffect(() => {\n    if (address && ref.current) {\n      ref.current.innerHTML = \"\";\n      ref.current.appendChild(\n        Jazzicon(style?.width || 16, parseInt(bs58.decode(address).toString('hex').slice(5, 15), 16))\n      );\n    }\n  }, [address, style]);\n\n  return (\n    <div className=\"identicon-wrapper\" ref={ref as any} style={props.style} />\n  );\n};\n"]},"metadata":{},"sourceType":"module"}