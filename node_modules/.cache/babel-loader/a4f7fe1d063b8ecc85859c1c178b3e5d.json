{"ast":null,"code":"import _slicedToArray from\"/home/yclnl/yclnl.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";import{Button}from\"antd\";import{useSlippageConfig}from\"./../../utils/connection\";import{NumericInput}from\"./../numericInput\";export var Slippage=function Slippage(){var _useSlippageConfig=useSlippageConfig(),slippage=_useSlippageConfig.slippage,setSlippage=_useSlippageConfig.setSlippage;var slippagePct=slippage*100;var _useState=useState(slippagePct.toString()),_useState2=_slicedToArray(_useState,2),value=_useState2[0],setValue=_useState2[1];useEffect(function(){setValue(slippagePct.toString());},[slippage,slippagePct]);var isSelected=function isSelected(val){return val===slippagePct?\"primary\":\"default\";};var itemStyle={margin:5};return/*#__PURE__*/React.createElement(\"div\",{style:{display:\"flex\",flexDirection:\"row\",alignItems:\"center\"}},[0.1,0.5,1.0].map(function(item){return/*#__PURE__*/React.createElement(Button,{key:item.toString(),style:itemStyle,type:isSelected(item),onClick:function onClick(){return setSlippage(item/100.0);}},item,\"%\");}),/*#__PURE__*/React.createElement(\"div\",{style:{padding:\"3px 10px 3px 3px\",border:\"1px solid #434343\"}},/*#__PURE__*/React.createElement(NumericInput,{className:\"slippage-input\",size:\"small\",placeholder:value,value:value,style:{width:50,fontSize:14,boxShadow:\"none\",borderColor:\"transparent\",outline:\"transpaernt\"},onChange:function onChange(x){setValue(x);var newValue=parseFloat(x)/100.0;if(Number.isFinite(newValue)){setSlippage(newValue);}}}),\"%\"));};","map":{"version":3,"sources":["/home/yclnl/yclnl.github.io/src/components/slippage/index.tsx"],"names":["React","useEffect","useState","Button","useSlippageConfig","NumericInput","Slippage","slippage","setSlippage","slippagePct","toString","value","setValue","isSelected","val","itemStyle","margin","display","flexDirection","alignItems","map","item","padding","border","width","fontSize","boxShadow","borderColor","outline","x","newValue","parseFloat","Number","isFinite"],"mappings":"kJAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,OAASC,MAAT,KAAuB,MAAvB,CACA,OAASC,iBAAT,KAAkC,0BAAlC,CACA,OAASC,YAAT,KAA6B,mBAA7B,CAEA,MAAO,IAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,wBACMF,iBAAiB,EADvB,CACpBG,QADoB,oBACpBA,QADoB,CACVC,WADU,oBACVA,WADU,CAE5B,GAAMC,CAAAA,WAAW,CAAGF,QAAQ,CAAG,GAA/B,CAF4B,cAGFL,QAAQ,CAACO,WAAW,CAACC,QAAZ,EAAD,CAHN,wCAGrBC,KAHqB,eAGdC,QAHc,eAK5BX,SAAS,CAAC,UAAM,CACdW,QAAQ,CAACH,WAAW,CAACC,QAAZ,EAAD,CAAR,CACD,CAFQ,CAEN,CAACH,QAAD,CAAWE,WAAX,CAFM,CAAT,CAIA,GAAMI,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,GAAD,CAAiB,CAClC,MAAOA,CAAAA,GAAG,GAAKL,WAAR,CAAsB,SAAtB,CAAkC,SAAzC,CACD,CAFD,CAIA,GAAMM,CAAAA,SAA8B,CAAG,CACrCC,MAAM,CAAE,CAD6B,CAAvC,CAIA,mBACE,2BACE,KAAK,CAAE,CAAEC,OAAO,CAAE,MAAX,CAAmBC,aAAa,CAAE,KAAlC,CAAyCC,UAAU,CAAE,QAArD,CADT,EAGG,CAAC,GAAD,CAAM,GAAN,CAAW,GAAX,EAAgBC,GAAhB,CAAoB,SAACC,IAAD,CAAU,CAC7B,mBACE,oBAAC,MAAD,EACE,GAAG,CAAEA,IAAI,CAACX,QAAL,EADP,CAEE,KAAK,CAAEK,SAFT,CAGE,IAAI,CAAEF,UAAU,CAACQ,IAAD,CAHlB,CAIE,OAAO,CAAE,yBAAMb,CAAAA,WAAW,CAACa,IAAI,CAAG,KAAR,CAAjB,EAJX,EAMGA,IANH,KADF,CAUD,CAXA,CAHH,cAeE,2BAAK,KAAK,CAAE,CAAEC,OAAO,CAAE,kBAAX,CAA+BC,MAAM,CAAE,mBAAvC,CAAZ,eACE,oBAAC,YAAD,EACE,SAAS,CAAC,gBADZ,CAEE,IAAI,CAAC,OAFP,CAGE,WAAW,CAAEZ,KAHf,CAIE,KAAK,CAAEA,KAJT,CAKE,KAAK,CAAE,CACLa,KAAK,CAAE,EADF,CAELC,QAAQ,CAAE,EAFL,CAGLC,SAAS,CAAE,MAHN,CAILC,WAAW,CAAE,aAJR,CAKLC,OAAO,CAAE,aALJ,CALT,CAYE,QAAQ,CAAE,kBAACC,CAAD,CAAY,CACpBjB,QAAQ,CAACiB,CAAD,CAAR,CACA,GAAMC,CAAAA,QAAQ,CAAGC,UAAU,CAACF,CAAD,CAAV,CAAgB,KAAjC,CACA,GAAIG,MAAM,CAACC,QAAP,CAAgBH,QAAhB,CAAJ,CAA+B,CAC7BtB,WAAW,CAACsB,QAAD,CAAX,CACD,CACF,CAlBH,EADF,KAfF,CADF,CAyCD,CA1DM","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Button } from \"antd\";\nimport { useSlippageConfig } from \"./../../utils/connection\";\nimport { NumericInput } from \"./../numericInput\";\n\nexport const Slippage = () => {\n  const { slippage, setSlippage } = useSlippageConfig();\n  const slippagePct = slippage * 100;\n  const [value, setValue] = useState(slippagePct.toString());\n\n  useEffect(() => {\n    setValue(slippagePct.toString());\n  }, [slippage, slippagePct]);\n\n  const isSelected = (val: number) => {\n    return val === slippagePct ? \"primary\" : \"default\";\n  };\n\n  const itemStyle: React.CSSProperties = {\n    margin: 5,\n  };\n\n  return (\n    <div\n      style={{ display: \"flex\", flexDirection: \"row\", alignItems: \"center\" }}\n    >\n      {[0.1, 0.5, 1.0].map((item) => {\n        return (\n          <Button\n            key={item.toString()}\n            style={itemStyle}\n            type={isSelected(item)}\n            onClick={() => setSlippage(item / 100.0)}\n          >\n            {item}%\n          </Button>\n        );\n      })}\n      <div style={{ padding: \"3px 10px 3px 3px\", border: \"1px solid #434343\" }}>\n        <NumericInput\n          className=\"slippage-input\"\n          size=\"small\"\n          placeholder={value}\n          value={value}\n          style={{\n            width: 50,\n            fontSize: 14,\n            boxShadow: \"none\",\n            borderColor: \"transparent\",\n            outline: \"transpaernt\",\n          }}\n          onChange={(x: any) => {\n            setValue(x);\n            const newValue = parseFloat(x) / 100.0;\n            if (Number.isFinite(newValue)) {\n              setSlippage(newValue);\n            }\n          }}\n        />\n        %\n      </div>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}