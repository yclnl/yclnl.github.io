{"ast":null,"code":"import{getTokenName}from\"../utils/utils\";export var CREATE_POOL_LABEL=\"Create Liquidity Pool\";export var INSUFFICIENT_FUNDS_LABEL=function INSUFFICIENT_FUNDS_LABEL(tokenName){return\"Insufficient \".concat(tokenName,\" funds\");};export var POOL_NOT_AVAILABLE=function POOL_NOT_AVAILABLE(tokenA,tokenB){return\"Pool \".concat(tokenA,\"/\").concat(tokenB,\" doesn't exsist\");};export var ADD_LIQUIDITY_LABEL=\"Provide Liquidity\";export var SWAP_LABEL=\"Swap\";export var CONNECT_LABEL=\"Connect Wallet\";export var SELECT_TOKEN_LABEL=\"Select a token\";export var ENTER_AMOUNT_LABEL=\"Enter an amount\";export var generateActionLabel=function generateActionLabel(action,connected,env,A,B){var ignoreToBalance=arguments.length>5&&arguments[5]!==undefined?arguments[5]:false;return!connected?CONNECT_LABEL:!A.mintAddress?SELECT_TOKEN_LABEL:!A.amount?ENTER_AMOUNT_LABEL:!B.mintAddress?SELECT_TOKEN_LABEL:!B.amount?ENTER_AMOUNT_LABEL:!A.sufficientBalance()?INSUFFICIENT_FUNDS_LABEL(getTokenName(env,A.mintAddress)):ignoreToBalance||B.sufficientBalance()?action:INSUFFICIENT_FUNDS_LABEL(getTokenName(env,B.mintAddress));};","map":{"version":3,"sources":["/home/yclnl/yclnl.github.io/src/components/labels.tsx"],"names":["getTokenName","CREATE_POOL_LABEL","INSUFFICIENT_FUNDS_LABEL","tokenName","POOL_NOT_AVAILABLE","tokenA","tokenB","ADD_LIQUIDITY_LABEL","SWAP_LABEL","CONNECT_LABEL","SELECT_TOKEN_LABEL","ENTER_AMOUNT_LABEL","generateActionLabel","action","connected","env","A","B","ignoreToBalance","mintAddress","amount","sufficientBalance"],"mappings":"AAEA,OAASA,YAAT,KAA6B,gBAA7B,CAEA,MAAO,IAAMC,CAAAA,iBAAiB,CAAG,uBAA1B,CACP,MAAO,IAAMC,CAAAA,wBAAwB,CAAG,QAA3BA,CAAAA,wBAA2B,CAACC,SAAD,+BACtBA,SADsB,YAAjC,CAEP,MAAO,IAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,MAAD,CAAiBC,MAAjB,uBACxBD,MADwB,aACdC,MADc,qBAA3B,CAEP,MAAO,IAAMC,CAAAA,mBAAmB,CAAG,mBAA5B,CACP,MAAO,IAAMC,CAAAA,UAAU,CAAG,MAAnB,CACP,MAAO,IAAMC,CAAAA,aAAa,CAAG,gBAAtB,CACP,MAAO,IAAMC,CAAAA,kBAAkB,CAAG,gBAA3B,CACP,MAAO,IAAMC,CAAAA,kBAAkB,CAAG,iBAA3B,CAEP,MAAO,IAAMC,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CACjCC,MADiC,CAEjCC,SAFiC,CAGjCC,GAHiC,CAIjCC,CAJiC,CAKjCC,CALiC,CAO9B,IADHC,CAAAA,eACG,2DADwB,KACxB,CACH,MAAO,CAACJ,SAAD,CACHL,aADG,CAEH,CAACO,CAAC,CAACG,WAAH,CACAT,kBADA,CAEA,CAACM,CAAC,CAACI,MAAH,CACAT,kBADA,CAEA,CAACM,CAAC,CAACE,WAAH,CACAT,kBADA,CAEA,CAACO,CAAC,CAACG,MAAH,CACAT,kBADA,CAEA,CAACK,CAAC,CAACK,iBAAF,EAAD,CACAnB,wBAAwB,CAACF,YAAY,CAACe,GAAD,CAAMC,CAAC,CAACG,WAAR,CAAb,CADxB,CAEAD,eAAe,EAAID,CAAC,CAACI,iBAAF,EAAnB,CACAR,MADA,CAEAX,wBAAwB,CAACF,YAAY,CAACe,GAAD,CAAME,CAAC,CAACE,WAAR,CAAb,CAd5B,CAeD,CAvBM","sourcesContent":["import { ENV } from \"../utils/connection\";\nimport { CurrencyContextState } from \"../utils/currencyPair\";\nimport { getTokenName } from \"../utils/utils\";\n\nexport const CREATE_POOL_LABEL = \"Create Liquidity Pool\";\nexport const INSUFFICIENT_FUNDS_LABEL = (tokenName: string) =>\n  `Insufficient ${tokenName} funds`;\nexport const POOL_NOT_AVAILABLE = (tokenA: string, tokenB: string) =>\n  `Pool ${tokenA}/${tokenB} doesn't exsist`;\nexport const ADD_LIQUIDITY_LABEL = \"Provide Liquidity\";\nexport const SWAP_LABEL = \"Swap\";\nexport const CONNECT_LABEL = \"Connect Wallet\";\nexport const SELECT_TOKEN_LABEL = \"Select a token\";\nexport const ENTER_AMOUNT_LABEL = \"Enter an amount\";\n\nexport const generateActionLabel = (\n  action: string,\n  connected: boolean,\n  env: ENV,\n  A: CurrencyContextState,\n  B: CurrencyContextState,\n  ignoreToBalance: boolean = false\n) => {\n  return !connected\n    ? CONNECT_LABEL\n    : !A.mintAddress\n    ? SELECT_TOKEN_LABEL\n    : !A.amount\n    ? ENTER_AMOUNT_LABEL\n    : !B.mintAddress\n    ? SELECT_TOKEN_LABEL\n    : !B.amount\n    ? ENTER_AMOUNT_LABEL\n    : !A.sufficientBalance()\n    ? INSUFFICIENT_FUNDS_LABEL(getTokenName(env, A.mintAddress))\n    : ignoreToBalance || B.sufficientBalance()\n    ? action\n    : INSUFFICIENT_FUNDS_LABEL(getTokenName(env, B.mintAddress));\n};\n"]},"metadata":{},"sourceType":"module"}