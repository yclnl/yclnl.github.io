{"ast":null,"code":"var _jsxFileName = \"/home/yclnl/yclnl.github.io/src/components/numericInput.tsx\";\nimport React from \"react\";\nimport { Input } from \"antd\";\nexport class NumericInput extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onChange = e => {\n      const {\n        value\n      } = e.target;\n      const reg = /^-?\\d*(\\.\\d*)?$/;\n\n      if (!isNaN(value) && reg.test(value) || value === \"\" || value === \"-\") {\n        this.props.onChange(value);\n      }\n    };\n\n    this.onBlur = () => {\n      const {\n        value,\n        onBlur,\n        onChange\n      } = this.props;\n      let valueTemp = value;\n\n      if (value.charAt(value.length - 1) === \".\" || value === \"-\") {\n        valueTemp = value.slice(0, -1);\n      }\n\n      onChange(valueTemp.replace(/0*(\\d+)/, \"$1\"));\n\n      if (onBlur) {\n        onBlur();\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Input, Object.assign({}, this.props, {\n      onChange: this.onChange,\n      onBlur: this.onBlur,\n      maxLength: 25,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/yclnl/yclnl.github.io/src/components/numericInput.tsx"],"names":["React","Input","NumericInput","Component","onChange","e","value","target","reg","isNaN","test","props","onBlur","valueTemp","charAt","length","slice","replace","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,MAAtB;AAEA,OAAO,MAAMC,YAAN,SAA2BF,KAAK,CAACG,SAAjC,CAAqD;AAAA;AAAA;;AAAA,SAC1DC,QAD0D,GAC9CC,CAAD,IAAY;AACrB,YAAM;AAAEC,QAAAA;AAAF,UAAYD,CAAC,CAACE,MAApB;AACA,YAAMC,GAAG,GAAG,iBAAZ;;AACA,UAAK,CAACC,KAAK,CAACH,KAAD,CAAN,IAAiBE,GAAG,CAACE,IAAJ,CAASJ,KAAT,CAAlB,IAAsCA,KAAK,KAAK,EAAhD,IAAsDA,KAAK,KAAK,GAApE,EAAyE;AACvE,aAAKK,KAAL,CAAWP,QAAX,CAAoBE,KAApB;AACD;AACF,KAPyD;;AAAA,SAU1DM,MAV0D,GAUjD,MAAM;AACb,YAAM;AAAEN,QAAAA,KAAF;AAASM,QAAAA,MAAT;AAAiBR,QAAAA;AAAjB,UAA8B,KAAKO,KAAzC;AACA,UAAIE,SAAS,GAAGP,KAAhB;;AACA,UAAIA,KAAK,CAACQ,MAAN,CAAaR,KAAK,CAACS,MAAN,GAAe,CAA5B,MAAmC,GAAnC,IAA0CT,KAAK,KAAK,GAAxD,EAA6D;AAC3DO,QAAAA,SAAS,GAAGP,KAAK,CAACU,KAAN,CAAY,CAAZ,EAAe,CAAC,CAAhB,CAAZ;AACD;;AACDZ,MAAAA,QAAQ,CAACS,SAAS,CAACI,OAAV,CAAkB,SAAlB,EAA6B,IAA7B,CAAD,CAAR;;AACA,UAAIL,MAAJ,EAAY;AACVA,QAAAA,MAAM;AACP;AACF,KApByD;AAAA;;AAsB1DM,EAAAA,MAAM,GAAG;AACP,wBACE,oBAAC,KAAD,oBACM,KAAKP,KADX;AAEE,MAAA,QAAQ,EAAE,KAAKP,QAFjB;AAGE,MAAA,MAAM,EAAE,KAAKQ,MAHf;AAIE,MAAA,SAAS,EAAE,EAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF;AAQD;;AA/ByD","sourcesContent":["import React from \"react\";\nimport { Input } from \"antd\";\n\nexport class NumericInput extends React.Component<any, any> {\n  onChange = (e: any) => {\n    const { value } = e.target;\n    const reg = /^-?\\d*(\\.\\d*)?$/;\n    if ((!isNaN(value) && reg.test(value)) || value === \"\" || value === \"-\") {\n      this.props.onChange(value);\n    }\n  };\n\n  // '.' at the end or only '-' in the input box.\n  onBlur = () => {\n    const { value, onBlur, onChange } = this.props;\n    let valueTemp = value;\n    if (value.charAt(value.length - 1) === \".\" || value === \"-\") {\n      valueTemp = value.slice(0, -1);\n    }\n    onChange(valueTemp.replace(/0*(\\d+)/, \"$1\"));\n    if (onBlur) {\n      onBlur();\n    }\n  };\n\n  render() {\n    return (\n      <Input\n        {...this.props}\n        onChange={this.onChange}\n        onBlur={this.onBlur}\n        maxLength={25}\n      />\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}