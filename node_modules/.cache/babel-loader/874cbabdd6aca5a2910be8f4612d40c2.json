{"ast":null,"code":"import { getTokenName } from \"../utils/utils\";\nexport const CREATE_POOL_LABEL = \"Create Liquidity Pool\";\nexport const INSUFFICIENT_FUNDS_LABEL = tokenName => `Insufficient ${tokenName} funds`;\nexport const POOL_NOT_AVAILABLE = (tokenA, tokenB) => `Pool ${tokenA}/${tokenB} doesn't exsist`;\nexport const ADD_LIQUIDITY_LABEL = \"Provide Liquidity\";\nexport const SWAP_LABEL = \"Swap\";\nexport const CONNECT_LABEL = \"Connect Wallet\";\nexport const SELECT_TOKEN_LABEL = \"Select a token\";\nexport const ENTER_AMOUNT_LABEL = \"Enter an amount\";\nexport const generateActionLabel = (action, connected, env, A, B, ignoreToBalance = false) => {\n  return !connected ? CONNECT_LABEL : !A.mintAddress ? SELECT_TOKEN_LABEL : !A.amount ? ENTER_AMOUNT_LABEL : !B.mintAddress ? SELECT_TOKEN_LABEL : !B.amount ? ENTER_AMOUNT_LABEL : !A.sufficientBalance() ? INSUFFICIENT_FUNDS_LABEL(getTokenName(env, A.mintAddress)) : ignoreToBalance || B.sufficientBalance() ? action : INSUFFICIENT_FUNDS_LABEL(getTokenName(env, B.mintAddress));\n};","map":{"version":3,"sources":["/home/yclnl/yclnl.github.io/src/components/labels.tsx"],"names":["getTokenName","CREATE_POOL_LABEL","INSUFFICIENT_FUNDS_LABEL","tokenName","POOL_NOT_AVAILABLE","tokenA","tokenB","ADD_LIQUIDITY_LABEL","SWAP_LABEL","CONNECT_LABEL","SELECT_TOKEN_LABEL","ENTER_AMOUNT_LABEL","generateActionLabel","action","connected","env","A","B","ignoreToBalance","mintAddress","amount","sufficientBalance"],"mappings":"AAEA,SAASA,YAAT,QAA6B,gBAA7B;AAEA,OAAO,MAAMC,iBAAiB,GAAG,uBAA1B;AACP,OAAO,MAAMC,wBAAwB,GAAIC,SAAD,IACrC,gBAAeA,SAAU,QADrB;AAEP,OAAO,MAAMC,kBAAkB,GAAG,CAACC,MAAD,EAAiBC,MAAjB,KAC/B,QAAOD,MAAO,IAAGC,MAAO,iBADpB;AAEP,OAAO,MAAMC,mBAAmB,GAAG,mBAA5B;AACP,OAAO,MAAMC,UAAU,GAAG,MAAnB;AACP,OAAO,MAAMC,aAAa,GAAG,gBAAtB;AACP,OAAO,MAAMC,kBAAkB,GAAG,gBAA3B;AACP,OAAO,MAAMC,kBAAkB,GAAG,iBAA3B;AAEP,OAAO,MAAMC,mBAAmB,GAAG,CACjCC,MADiC,EAEjCC,SAFiC,EAGjCC,GAHiC,EAIjCC,CAJiC,EAKjCC,CALiC,EAMjCC,eAAwB,GAAG,KANM,KAO9B;AACH,SAAO,CAACJ,SAAD,GACHL,aADG,GAEH,CAACO,CAAC,CAACG,WAAH,GACAT,kBADA,GAEA,CAACM,CAAC,CAACI,MAAH,GACAT,kBADA,GAEA,CAACM,CAAC,CAACE,WAAH,GACAT,kBADA,GAEA,CAACO,CAAC,CAACG,MAAH,GACAT,kBADA,GAEA,CAACK,CAAC,CAACK,iBAAF,EAAD,GACAnB,wBAAwB,CAACF,YAAY,CAACe,GAAD,EAAMC,CAAC,CAACG,WAAR,CAAb,CADxB,GAEAD,eAAe,IAAID,CAAC,CAACI,iBAAF,EAAnB,GACAR,MADA,GAEAX,wBAAwB,CAACF,YAAY,CAACe,GAAD,EAAME,CAAC,CAACE,WAAR,CAAb,CAd5B;AAeD,CAvBM","sourcesContent":["import { ENV } from \"../utils/connection\";\nimport { CurrencyContextState } from \"../utils/currencyPair\";\nimport { getTokenName } from \"../utils/utils\";\n\nexport const CREATE_POOL_LABEL = \"Create Liquidity Pool\";\nexport const INSUFFICIENT_FUNDS_LABEL = (tokenName: string) =>\n  `Insufficient ${tokenName} funds`;\nexport const POOL_NOT_AVAILABLE = (tokenA: string, tokenB: string) =>\n  `Pool ${tokenA}/${tokenB} doesn't exsist`;\nexport const ADD_LIQUIDITY_LABEL = \"Provide Liquidity\";\nexport const SWAP_LABEL = \"Swap\";\nexport const CONNECT_LABEL = \"Connect Wallet\";\nexport const SELECT_TOKEN_LABEL = \"Select a token\";\nexport const ENTER_AMOUNT_LABEL = \"Enter an amount\";\n\nexport const generateActionLabel = (\n  action: string,\n  connected: boolean,\n  env: ENV,\n  A: CurrencyContextState,\n  B: CurrencyContextState,\n  ignoreToBalance: boolean = false\n) => {\n  return !connected\n    ? CONNECT_LABEL\n    : !A.mintAddress\n    ? SELECT_TOKEN_LABEL\n    : !A.amount\n    ? ENTER_AMOUNT_LABEL\n    : !B.mintAddress\n    ? SELECT_TOKEN_LABEL\n    : !B.amount\n    ? ENTER_AMOUNT_LABEL\n    : !A.sufficientBalance()\n    ? INSUFFICIENT_FUNDS_LABEL(getTokenName(env, A.mintAddress))\n    : ignoreToBalance || B.sufficientBalance()\n    ? action\n    : INSUFFICIENT_FUNDS_LABEL(getTokenName(env, B.mintAddress));\n};\n"]},"metadata":{},"sourceType":"module"}