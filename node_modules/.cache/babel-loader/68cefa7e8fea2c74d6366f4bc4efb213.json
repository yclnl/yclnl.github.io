{"ast":null,"code":"import{PublicKey}from\"@solana/web3.js\";export var WRAPPED_SOL_MINT=new PublicKey(\"So11111111111111111111111111111111111111112\");var TOKEN_PROGRAM_ID=new PublicKey(\"TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA\");var SWAP_PROGRAM_ID;var SWAP_PROGRAM_LEGACY_IDS;export var SWAP_HOST_FEE_ADDRESS=process.env.REACT_APP_SWAP_HOST_FEE_ADDRESS?new PublicKey(\"\".concat(process.env.REACT_APP_SWAP_HOST_FEE_ADDRESS)):undefined;export var SWAP_PROGRAM_OWNER_FEE_ADDRESS=new PublicKey(\"HfoTxFR1Tm6kGmWgYWD6J7YHVy1UwqSULUGVLXkJqaKN\");console.debug(\"Host address: \".concat(SWAP_HOST_FEE_ADDRESS===null||SWAP_HOST_FEE_ADDRESS===void 0?void 0:SWAP_HOST_FEE_ADDRESS.toBase58()));console.debug(\"Owner address: \".concat(SWAP_PROGRAM_OWNER_FEE_ADDRESS===null||SWAP_PROGRAM_OWNER_FEE_ADDRESS===void 0?void 0:SWAP_PROGRAM_OWNER_FEE_ADDRESS.toBase58()));// legacy pools are used to show users contributions in those pools to allow for withdrawals of funds\nexport var PROGRAM_IDS=[{name:\"mainnet-beta\",swap:function swap(){return{current:new PublicKey(\"9qvG1zUp8xF1Bi4m6UdRNby1BAAuaDrUxSpv4CmRRMjL\"),legacy:[]};}},{name:\"testnet\",swap:function swap(){return{current:new PublicKey(\"2n2dsFSgmPcZ8jkmBZLGUM2nzuFqcBGQ3JEEj6RJJcEg\"),legacy:[new PublicKey(\"9tdctNJuFsYZ6VrKfKEuwwbPp4SFdFw3jYBZU8QUtzeX\"),new PublicKey(\"CrRvVBS4Hmj47TPU3cMukurpmCUYUrdHYxTQBxncBGqw\")]};}},{name:\"devnet\",swap:function swap(){return{current:new PublicKey(\"BSfTAcBdqmvX5iE2PW88WFNNp2DHhLUaBKk5WrnxVkcJ\"),legacy:[new PublicKey(\"H1E1G7eD5Rrcy43xvDxXCsjkRggz7MWNMLGJ8YNzJ8PM\"),new PublicKey(\"CMoteLxSPVPoc7Drcggf3QPg3ue8WPpxYyZTg77UGqHo\"),new PublicKey(\"EEuPz4iZA5reBUeZj6x1VzoiHfYeHMppSCnHZasRFhYo\")]};}},{name:\"localnet\",swap:function swap(){return{current:new PublicKey(\"5rdpyt5iGfr68qt28hkefcFyF4WtyhTwqKDmHSBG8GZx\"),legacy:[]};}}];export var setProgramIds=function setProgramIds(envName){var instance=PROGRAM_IDS.find(function(env){return env.name===envName;});if(!instance){return;}var swap=instance.swap();SWAP_PROGRAM_ID=swap.current;SWAP_PROGRAM_LEGACY_IDS=swap.legacy;};export var programIds=function programIds(){return{token:TOKEN_PROGRAM_ID,swap:SWAP_PROGRAM_ID,swap_legacy:SWAP_PROGRAM_LEGACY_IDS};};","map":{"version":3,"sources":["/home/yclnl/yclnl.github.io/src/utils/ids.tsx"],"names":["PublicKey","WRAPPED_SOL_MINT","TOKEN_PROGRAM_ID","SWAP_PROGRAM_ID","SWAP_PROGRAM_LEGACY_IDS","SWAP_HOST_FEE_ADDRESS","process","env","REACT_APP_SWAP_HOST_FEE_ADDRESS","undefined","SWAP_PROGRAM_OWNER_FEE_ADDRESS","console","debug","toBase58","PROGRAM_IDS","name","swap","current","legacy","setProgramIds","envName","instance","find","programIds","token","swap_legacy"],"mappings":"AAAA,OAASA,SAAT,KAA0B,iBAA1B,CAEA,MAAO,IAAMC,CAAAA,gBAAgB,CAAG,GAAID,CAAAA,SAAJ,CAC9B,6CAD8B,CAAzB,CAGP,GAAIE,CAAAA,gBAAgB,CAAG,GAAIF,CAAAA,SAAJ,CACrB,6CADqB,CAAvB,CAIA,GAAIG,CAAAA,eAAJ,CACA,GAAIC,CAAAA,uBAAJ,CAEA,MAAO,IAAMC,CAAAA,qBAAqB,CAAGC,OAAO,CAACC,GAAR,CAAYC,+BAAZ,CACjC,GAAIR,CAAAA,SAAJ,WAAiBM,OAAO,CAACC,GAAR,CAAYC,+BAA7B,EADiC,CAEjCC,SAFG,CAGP,MAAO,IAAMC,CAAAA,8BAA8B,CAAG,GAAIV,CAAAA,SAAJ,CAC5C,8CAD4C,CAAvC,CAIPW,OAAO,CAACC,KAAR,yBAA+BP,qBAA/B,SAA+BA,qBAA/B,iBAA+BA,qBAAqB,CAAEQ,QAAvB,EAA/B,GACAF,OAAO,CAACC,KAAR,0BAAgCF,8BAAhC,SAAgCA,8BAAhC,iBAAgCA,8BAA8B,CAAEG,QAAhC,EAAhC,GAEA;AACA,MAAO,IAAMC,CAAAA,WAAW,CAAG,CACzB,CACEC,IAAI,CAAE,cADR,CAEEC,IAAI,CAAE,sBAAO,CACXC,OAAO,CAAE,GAAIjB,CAAAA,SAAJ,CAAc,8CAAd,CADE,CAEXkB,MAAM,CAAE,EAFG,CAAP,EAFR,CADyB,CAQzB,CACEH,IAAI,CAAE,SADR,CAEEC,IAAI,CAAE,sBAAO,CACXC,OAAO,CAAE,GAAIjB,CAAAA,SAAJ,CAAc,8CAAd,CADE,CAEXkB,MAAM,CAAE,CACN,GAAIlB,CAAAA,SAAJ,CAAc,8CAAd,CADM,CAEN,GAAIA,CAAAA,SAAJ,CAAc,8CAAd,CAFM,CAFG,CAAP,EAFR,CARyB,CAkBzB,CACEe,IAAI,CAAE,QADR,CAEEC,IAAI,CAAE,sBAAO,CACXC,OAAO,CAAE,GAAIjB,CAAAA,SAAJ,CAAc,8CAAd,CADE,CAEXkB,MAAM,CAAE,CACN,GAAIlB,CAAAA,SAAJ,CAAc,8CAAd,CADM,CAEN,GAAIA,CAAAA,SAAJ,CAAc,8CAAd,CAFM,CAGN,GAAIA,CAAAA,SAAJ,CAAc,8CAAd,CAHM,CAFG,CAAP,EAFR,CAlByB,CA6BzB,CACEe,IAAI,CAAE,UADR,CAEEC,IAAI,CAAE,sBAAO,CACXC,OAAO,CAAE,GAAIjB,CAAAA,SAAJ,CAAc,8CAAd,CADE,CAEXkB,MAAM,CAAE,EAFG,CAAP,EAFR,CA7ByB,CAApB,CAsCP,MAAO,IAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,OAAD,CAAqB,CAChD,GAAIC,CAAAA,QAAQ,CAAGP,WAAW,CAACQ,IAAZ,CAAiB,SAACf,GAAD,QAASA,CAAAA,GAAG,CAACQ,IAAJ,GAAaK,OAAtB,EAAjB,CAAf,CACA,GAAI,CAACC,QAAL,CAAe,CACb,OACD,CAED,GAAIL,CAAAA,IAAI,CAAGK,QAAQ,CAACL,IAAT,EAAX,CAEAb,eAAe,CAAGa,IAAI,CAACC,OAAvB,CACAb,uBAAuB,CAAGY,IAAI,CAACE,MAA/B,CACD,CAVM,CAYP,MAAO,IAAMK,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CAC9B,MAAO,CACLC,KAAK,CAAEtB,gBADF,CAELc,IAAI,CAAEb,eAFD,CAGLsB,WAAW,CAAErB,uBAHR,CAAP,CAKD,CANM","sourcesContent":["import { PublicKey } from \"@solana/web3.js\";\n\nexport const WRAPPED_SOL_MINT = new PublicKey(\n  \"So11111111111111111111111111111111111111112\"\n);\nlet TOKEN_PROGRAM_ID = new PublicKey(\n  \"TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA\"\n);\n\nlet SWAP_PROGRAM_ID: PublicKey;\nlet SWAP_PROGRAM_LEGACY_IDS: PublicKey[];\n\nexport const SWAP_HOST_FEE_ADDRESS = process.env.REACT_APP_SWAP_HOST_FEE_ADDRESS\n  ? new PublicKey(`${process.env.REACT_APP_SWAP_HOST_FEE_ADDRESS}`)\n  : undefined;\nexport const SWAP_PROGRAM_OWNER_FEE_ADDRESS = new PublicKey(\n  \"HfoTxFR1Tm6kGmWgYWD6J7YHVy1UwqSULUGVLXkJqaKN\"\n);\n\nconsole.debug(`Host address: ${SWAP_HOST_FEE_ADDRESS?.toBase58()}`);\nconsole.debug(`Owner address: ${SWAP_PROGRAM_OWNER_FEE_ADDRESS?.toBase58()}`);\n\n// legacy pools are used to show users contributions in those pools to allow for withdrawals of funds\nexport const PROGRAM_IDS = [\n  {\n    name: \"mainnet-beta\",\n    swap: () => ({\n      current: new PublicKey(\"9qvG1zUp8xF1Bi4m6UdRNby1BAAuaDrUxSpv4CmRRMjL\"),\n      legacy: [],\n    }),\n  },\n  {\n    name: \"testnet\",\n    swap: () => ({\n      current: new PublicKey(\"2n2dsFSgmPcZ8jkmBZLGUM2nzuFqcBGQ3JEEj6RJJcEg\"),\n      legacy: [\n        new PublicKey(\"9tdctNJuFsYZ6VrKfKEuwwbPp4SFdFw3jYBZU8QUtzeX\"),\n        new PublicKey(\"CrRvVBS4Hmj47TPU3cMukurpmCUYUrdHYxTQBxncBGqw\"),\n      ],\n    }),\n  },\n  {\n    name: \"devnet\",\n    swap: () => ({\n      current: new PublicKey(\"BSfTAcBdqmvX5iE2PW88WFNNp2DHhLUaBKk5WrnxVkcJ\"),\n      legacy: [\n        new PublicKey(\"H1E1G7eD5Rrcy43xvDxXCsjkRggz7MWNMLGJ8YNzJ8PM\"),\n        new PublicKey(\"CMoteLxSPVPoc7Drcggf3QPg3ue8WPpxYyZTg77UGqHo\"),\n        new PublicKey(\"EEuPz4iZA5reBUeZj6x1VzoiHfYeHMppSCnHZasRFhYo\"),\n      ],\n    }),\n  },\n  {\n    name: \"localnet\",\n    swap: () => ({\n      current: new PublicKey(\"5rdpyt5iGfr68qt28hkefcFyF4WtyhTwqKDmHSBG8GZx\"),\n      legacy: [],\n    }),\n  },\n];\n\nexport const setProgramIds = (envName: string) => {\n  let instance = PROGRAM_IDS.find((env) => env.name === envName);\n  if (!instance) {\n    return;\n  }\n\n  let swap = instance.swap();\n\n  SWAP_PROGRAM_ID = swap.current;\n  SWAP_PROGRAM_LEGACY_IDS = swap.legacy;\n};\n\nexport const programIds = () => {\n  return {\n    token: TOKEN_PROGRAM_ID,\n    swap: SWAP_PROGRAM_ID,\n    swap_legacy: SWAP_PROGRAM_LEGACY_IDS,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}