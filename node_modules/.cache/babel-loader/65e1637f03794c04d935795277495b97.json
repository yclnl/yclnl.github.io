{"ast":null,"code":"var _jsxFileName = \"/home/yclnl/yclnl.github.io/src/components/exchange.tsx\";\nimport React, { useState } from \"react\";\nimport { Button, Card, Popover } from \"antd\";\nimport { TradeEntry } from \"./trade\";\nimport { AddToLiquidity } from \"./pool/add\";\nimport { Settings } from \"./settings\";\nimport { SettingOutlined } from \"@ant-design/icons\";\nimport { AppBar } from \"./appBar\";\nexport const ExchangeView = props => {\n  var _tabList$find;\n\n  const tabStyle = {\n    width: 120\n  };\n  const tabList = [{\n    key: \"trade\",\n    tab: /*#__PURE__*/React.createElement(\"div\", {\n      style: tabStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 12\n      }\n    }, \"Trade\"),\n    render: () => {\n      return /*#__PURE__*/React.createElement(TradeEntry, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 16\n        }\n      });\n    }\n  }, {\n    key: \"pool\",\n    tab: /*#__PURE__*/React.createElement(\"div\", {\n      style: tabStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 12\n      }\n    }, \"Pool\"),\n    render: () => {\n      return /*#__PURE__*/React.createElement(AddToLiquidity, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 16\n        }\n      });\n    }\n  }];\n  const [activeTab, setActiveTab] = useState(tabList[0].key);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AppBar, {\n    right: /*#__PURE__*/React.createElement(Popover, {\n      placement: \"topRight\",\n      title: \"Settings\",\n      content: /*#__PURE__*/React.createElement(Settings, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 22\n        }\n      }),\n      trigger: \"click\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      shape: \"circle\",\n      size: \"large\",\n      type: \"text\",\n      icon: /*#__PURE__*/React.createElement(SettingOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Card, {\n    className: \"exchange-card\",\n    headStyle: {\n      padding: 0\n    },\n    tabList: tabList,\n    tabProps: {\n      tabBarGutter: 0\n    },\n    activeTabKey: activeTab,\n    onTabChange: key => {\n      setActiveTab(key);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, (_tabList$find = tabList.find(t => t.key === activeTab)) === null || _tabList$find === void 0 ? void 0 : _tabList$find.render()));\n};","map":{"version":3,"sources":["/home/yclnl/yclnl.github.io/src/components/exchange.tsx"],"names":["React","useState","Button","Card","Popover","TradeEntry","AddToLiquidity","Settings","SettingOutlined","AppBar","ExchangeView","props","tabStyle","width","tabList","key","tab","render","activeTab","setActiveTab","padding","tabBarGutter","find","t"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,OAAvB,QAAsC,MAAtC;AACA,SAASC,UAAT,QAA2B,SAA3B;AACA,SAASC,cAAT,QAA+B,YAA/B;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,SAASC,eAAT,QAAgC,mBAAhC;AACA,SAASC,MAAT,QAAuB,UAAvB;AAEA,OAAO,MAAMC,YAAY,GAAIC,KAAD,IAAe;AAAA;;AACzC,QAAMC,QAA6B,GAAG;AAAEC,IAAAA,KAAK,EAAE;AAAT,GAAtC;AACA,QAAMC,OAAO,GAAG,CACd;AACEC,IAAAA,GAAG,EAAE,OADP;AAEEC,IAAAA,GAAG,eAAE;AAAK,MAAA,KAAK,EAAEJ,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFP;AAGEK,IAAAA,MAAM,EAAE,MAAM;AACZ,0BAAO,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;AALH,GADc,EAQd;AACEF,IAAAA,GAAG,EAAE,MADP;AAEEC,IAAAA,GAAG,eAAE;AAAK,MAAA,KAAK,EAAEJ,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFP;AAGEK,IAAAA,MAAM,EAAE,MAAM;AACZ,0BAAO,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;AALH,GARc,CAAhB;AAiBA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BlB,QAAQ,CAACa,OAAO,CAAC,CAAD,CAAP,CAAWC,GAAZ,CAA1C;AAEA,sBACE,uDACE,oBAAC,MAAD;AACE,IAAA,KAAK,eACH,oBAAC,OAAD;AACE,MAAA,SAAS,EAAC,UADZ;AAEE,MAAA,KAAK,EAAC,UAFR;AAGE,MAAA,OAAO,eAAE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHX;AAIE,MAAA,OAAO,EAAC,OAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAME,oBAAC,MAAD;AACE,MAAA,KAAK,EAAC,QADR;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,MAAA,IAAI,EAAC,MAHP;AAIE,MAAA,IAAI,eAAE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAkBE,oBAAC,IAAD;AACE,IAAA,SAAS,EAAC,eADZ;AAEE,IAAA,SAAS,EAAE;AAAEK,MAAAA,OAAO,EAAE;AAAX,KAFb;AAGE,IAAA,OAAO,EAAEN,OAHX;AAIE,IAAA,QAAQ,EAAE;AACRO,MAAAA,YAAY,EAAE;AADN,KAJZ;AAOE,IAAA,YAAY,EAAEH,SAPhB;AAQE,IAAA,WAAW,EAAGH,GAAD,IAAS;AACpBI,MAAAA,YAAY,CAACJ,GAAD,CAAZ;AACD,KAVH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAYGD,OAAO,CAACQ,IAAR,CAAcC,CAAD,IAAOA,CAAC,CAACR,GAAF,KAAUG,SAA9B,CAZH,kDAYG,cAA0CD,MAA1C,EAZH,CAlBF,CADF;AAmCD,CAxDM","sourcesContent":["import React, { useState } from \"react\";\nimport { Button, Card, Popover } from \"antd\";\nimport { TradeEntry } from \"./trade\";\nimport { AddToLiquidity } from \"./pool/add\";\nimport { Settings } from \"./settings\";\nimport { SettingOutlined } from \"@ant-design/icons\";\nimport { AppBar } from \"./appBar\";\n\nexport const ExchangeView = (props: {}) => {\n  const tabStyle: React.CSSProperties = { width: 120 };\n  const tabList = [\n    {\n      key: \"trade\",\n      tab: <div style={tabStyle}>Trade</div>,\n      render: () => {\n        return <TradeEntry />;\n      },\n    },\n    {\n      key: \"pool\",\n      tab: <div style={tabStyle}>Pool</div>,\n      render: () => {\n        return <AddToLiquidity />;\n      },\n    },\n  ];\n\n  const [activeTab, setActiveTab] = useState(tabList[0].key);\n\n  return (\n    <>\n      <AppBar\n        right={\n          <Popover\n            placement=\"topRight\"\n            title=\"Settings\"\n            content={<Settings />}\n            trigger=\"click\"\n          >\n            <Button\n              shape=\"circle\"\n              size=\"large\"\n              type=\"text\"\n              icon={<SettingOutlined />}\n            />\n          </Popover>\n        }\n      />\n      <Card\n        className=\"exchange-card\"\n        headStyle={{ padding: 0 }}\n        tabList={tabList}\n        tabProps={{\n          tabBarGutter: 0,\n        }}\n        activeTabKey={activeTab}\n        onTabChange={(key) => {\n          setActiveTab(key);\n        }}\n      >\n        {tabList.find((t) => t.key === activeTab)?.render()}\n      </Card>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}