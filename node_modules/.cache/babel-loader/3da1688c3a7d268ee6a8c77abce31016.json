{"ast":null,"code":"var _jsxFileName = \"/home/yclnl/yclnl.github.io/src/components/charts/index.tsx\";\nimport React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport { Button, Popover, Table } from \"antd\";\nimport { AppBar } from \"./../appBar\";\nimport { Settings } from \"../settings\";\nimport { SettingOutlined } from \"@ant-design/icons\";\nimport { PoolIcon } from \"../tokenIcon\";\nimport { Input } from \"antd\";\nimport \"./styles.less\";\nimport echarts from \"echarts\";\nimport { useEnrichedPools } from \"../../context/market\";\nimport { usePools } from \"../../utils/pools\";\nimport { formatPct, formatUSD } from \"../../utils/utils\";\nimport { PoolAddress } from \"../pool/address\";\nconst {\n  Search\n} = Input;\n\nconst FlashText = props => {\n  const [activeClass, setActiveClass] = useState(\"\");\n  const [value] = useState(props.val);\n  useEffect(() => {\n    if (props.val !== value) {\n      setActiveClass(props.val > value ? \"flash-positive\" : \"flash-negative\");\n      setTimeout(() => setActiveClass(\"\"), 200);\n    }\n  }, [props.text, props.val, value]);\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: activeClass,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 10\n    }\n  }, props.text);\n};\n\nexport const ChartsView = React.memo(() => {\n  const [search, setSearch] = useState(\"\");\n  const [totals, setTotals] = useState(() => ({\n    liquidity: 0,\n    volume: 0,\n    fees: 0\n  }));\n  const chartDiv = useRef(null);\n  const echartsRef = useRef(null);\n  const {\n    pools\n  } = usePools();\n  const enriched = useEnrichedPools(pools); // separate connection for market updates\n\n  useEffect(() => {\n    if (chartDiv.current) {\n      echartsRef.current = echarts.init(chartDiv.current);\n    }\n\n    return () => {\n      echartsRef.current.dispose();\n    };\n  }, []); // TODO: display user percent in the pool\n  // const { ownedPools } = useOwnedPools();\n  // TODO: create cache object with layout type, get, query, add\n\n  let searchRegex;\n\n  try {\n    searchRegex = new RegExp(search, \"i\");\n  } catch {// ignore bad regex typed by user\n  }\n\n  const updateChart = useCallback(() => {\n    if (echartsRef.current) {\n      echartsRef.current.setOption({\n        series: [{\n          name: \"Liquidity\",\n          type: \"treemap\",\n          top: 0,\n          bottom: 10,\n          left: 30,\n          right: 30,\n          animation: false,\n          // visibleMin: 300,\n          label: {\n            show: true,\n            formatter: \"{b}\"\n          },\n          itemStyle: {\n            normal: {\n              borderColor: \"#000\"\n            }\n          },\n          breadcrumb: {\n            show: false\n          },\n          data: enriched.filter(row => !search || !searchRegex || searchRegex.test(row.name)).map(row => {\n            return {\n              value: row.liquidity,\n              name: row.name,\n              path: `Liquidity/${row.name}`,\n              data: row\n            };\n          })\n        }]\n      });\n    }\n  }, [enriched, echartsRef.current, search]); // Updates total values\n\n  useEffect(() => {\n    setTotals(enriched.reduce((acc, item) => {\n      acc.liquidity = acc.liquidity + item.liquidity;\n      acc.volume = acc.volume + item.volume;\n      acc.fees = acc.fees + item.fees;\n      return acc;\n    }, {\n      liquidity: 0,\n      volume: 0,\n      fees: 0\n    }));\n    updateChart();\n  }, [enriched, updateChart, search]);\n  const columns = [{\n    title: \"Name\",\n    dataIndex: \"name\",\n    key: \"name\",\n\n    render(text, record) {\n      return {\n        props: {\n          style: {}\n        },\n        children: /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            display: \"flex\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(PoolIcon, {\n          mintA: record.mints[0],\n          mintB: record.mints[1],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 15\n          }\n        }), /*#__PURE__*/React.createElement(\"a\", {\n          href: record.link,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }\n        }, text))\n      };\n    }\n\n  }, {\n    title: \"Liquidity\",\n    dataIndex: \"liquidity\",\n    key: \"liquidity\",\n\n    render(text, record) {\n      return {\n        props: {\n          style: {\n            textAlign: \"right\"\n          }\n        },\n        children: /*#__PURE__*/React.createElement(FlashText, {\n          text: formatUSD.format(record.liquidity),\n          val: record.liquidity,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }\n        })\n      };\n    },\n\n    sorter: (a, b) => a.liquidity - b.liquidity,\n    defaultSortOrder: \"descend\"\n  }, {\n    title: \"Supply\",\n    dataIndex: \"supply\",\n    key: \"supply\",\n\n    render(text, record) {\n      return {\n        props: {\n          style: {\n            textAlign: \"right\"\n          }\n        },\n        children: /*#__PURE__*/React.createElement(FlashText, {\n          text: text,\n          val: record.supply,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 21\n          }\n        })\n      };\n    },\n\n    sorter: (a, b) => a.supply - b.supply\n  }, {\n    title: \"Volume\",\n    dataIndex: \"volume\",\n    key: \"volume\",\n\n    render(text, record) {\n      return {\n        props: {\n          style: {\n            textAlign: \"right\"\n          }\n        },\n        children: /*#__PURE__*/React.createElement(FlashText, {\n          text: formatUSD.format(record.volume),\n          val: record.volume,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }\n        })\n      };\n    },\n\n    sorter: (a, b) => a.volume - b.volume\n  }, {\n    title: \"Fees\",\n    dataIndex: \"fees\",\n    key: \"fees\",\n\n    render(text, record) {\n      return {\n        props: {\n          style: {\n            textAlign: \"right\"\n          }\n        },\n        children: /*#__PURE__*/React.createElement(FlashText, {\n          text: formatUSD.format(record.fees),\n          val: record.fees,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }\n        })\n      };\n    }\n\n  }, {\n    title: \"APY\",\n    dataIndex: \"apy\",\n    key: \"apy\",\n\n    render(text, record) {\n      return {\n        props: {\n          style: {\n            textAlign: \"right\"\n          }\n        },\n        children: formatPct.format(record.apy)\n      };\n    },\n\n    sorter: (a, b) => a.apy - b.apy\n  }, {\n    title: \"Address\",\n    dataIndex: \"address\",\n    key: \"address\",\n\n    render(text, record) {\n      return {\n        props: {\n          style: {\n            fontFamily: \"monospace\"\n          }\n        },\n        children: /*#__PURE__*/React.createElement(PoolAddress, {\n          pool: record.raw,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 21\n          }\n        })\n      };\n    }\n\n  }];\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AppBar, {\n    right: /*#__PURE__*/React.createElement(Popover, {\n      placement: \"topRight\",\n      title: \"Settings\",\n      content: /*#__PURE__*/React.createElement(Settings, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 22\n        }\n      }),\n      trigger: \"click\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      shape: \"circle\",\n      size: \"large\",\n      type: \"text\",\n      icon: /*#__PURE__*/React.createElement(SettingOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 21\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 13\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"info-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 9\n    }\n  }, \"Liquidity: \", formatUSD.format(totals.liquidity)), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 9\n    }\n  }, \"Volume: \", formatUSD.format(totals.volume)), /*#__PURE__*/React.createElement(Search, {\n    className: \"search-input\",\n    placeholder: \"Filter\",\n    type: \"search\",\n    value: search,\n    onChange: e => setSearch(e.target.value),\n    onSearch: value => setSearch(value),\n    style: {\n      width: 200\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    ref: chartDiv,\n    style: {\n      height: \"250px\",\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Table, {\n    dataSource: enriched.filter(row => !search || !searchRegex || searchRegex.test(row.name)),\n    columns: columns,\n    size: \"small\",\n    pagination: {\n      pageSize: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 7\n    }\n  }));\n});","map":{"version":3,"sources":["/home/yclnl/yclnl.github.io/src/components/charts/index.tsx"],"names":["React","useCallback","useEffect","useRef","useState","Button","Popover","Table","AppBar","Settings","SettingOutlined","PoolIcon","Input","echarts","useEnrichedPools","usePools","formatPct","formatUSD","PoolAddress","Search","FlashText","props","activeClass","setActiveClass","value","val","setTimeout","text","ChartsView","memo","search","setSearch","totals","setTotals","liquidity","volume","fees","chartDiv","echartsRef","pools","enriched","current","init","dispose","searchRegex","RegExp","updateChart","setOption","series","name","type","top","bottom","left","right","animation","label","show","formatter","itemStyle","normal","borderColor","breadcrumb","data","filter","row","test","map","path","reduce","acc","item","columns","title","dataIndex","key","render","record","style","children","display","mints","link","textAlign","format","sorter","a","b","defaultSortOrder","supply","apy","fontFamily","raw","e","target","width","height","pageSize"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport { Button, Popover, Table } from \"antd\";\nimport { AppBar } from \"./../appBar\";\nimport { Settings } from \"../settings\";\nimport { SettingOutlined } from \"@ant-design/icons\";\nimport { PoolIcon } from \"../tokenIcon\";\nimport { Input } from \"antd\";\nimport \"./styles.less\";\nimport echarts from \"echarts\";\nimport { useEnrichedPools } from \"../../context/market\";\nimport { usePools } from \"../../utils/pools\";\nimport { formatPct, formatUSD } from \"../../utils/utils\";\nimport { PoolAddress } from \"../pool/address\";\n\nconst { Search } = Input;\n\nconst FlashText = (props: { text: string; val: number }) => {\n  const [activeClass, setActiveClass] = useState(\"\");\n  const [value] = useState(props.val);\n  useEffect(() => {\n    if (props.val !== value) {\n      setActiveClass(props.val > value ? \"flash-positive\" : \"flash-negative\");\n\n      setTimeout(() => setActiveClass(\"\"), 200);\n    }\n  }, [props.text, props.val, value]);\n\n  return <span className={activeClass}>{props.text}</span>;\n};\n\ninterface Totals {\n  liquidity: number;\n  volume: number;\n  fees: number;\n}\n\nexport const ChartsView = React.memo(() => {\n  const [search, setSearch] = useState<string>(\"\");\n  const [totals, setTotals] = useState<Totals>(() => ({\n    liquidity: 0,\n    volume: 0,\n    fees: 0,\n  }));\n  const chartDiv = useRef<HTMLDivElement>(null);\n  const echartsRef = useRef<any>(null);\n  const { pools } = usePools();\n  const enriched = useEnrichedPools(pools);\n  // separate connection for market updates\n\n  useEffect(() => {\n    if (chartDiv.current) {\n      echartsRef.current = echarts.init(chartDiv.current);\n    }\n\n    return () => {\n      echartsRef.current.dispose();\n    };\n  }, []);\n\n  // TODO: display user percent in the pool\n  // const { ownedPools } = useOwnedPools();\n\n  // TODO: create cache object with layout type, get, query, add\n\n  let searchRegex: RegExp;\n  try {\n    searchRegex = new RegExp(search, \"i\");\n  } catch {\n    // ignore bad regex typed by user\n  }\n\n  const updateChart = useCallback(() => {\n    if (echartsRef.current) {\n      echartsRef.current.setOption({\n        series: [\n          {\n            name: \"Liquidity\",\n            type: \"treemap\",\n            top: 0,\n            bottom: 10,\n            left: 30,\n            right: 30,\n            animation: false,\n            // visibleMin: 300,\n            label: {\n              show: true,\n              formatter: \"{b}\",\n            },\n            itemStyle: {\n              normal: {\n                borderColor: \"#000\",\n              },\n            },\n            breadcrumb: {\n              show: false,\n            },\n            data: enriched\n              .filter(\n                (row) => !search || !searchRegex || searchRegex.test(row.name)\n              )\n              .map((row) => {\n                return {\n                  value: row.liquidity,\n                  name: row.name,\n                  path: `Liquidity/${row.name}`,\n                  data: row,\n                };\n              }),\n          },\n        ],\n      });\n    }\n  }, [enriched, echartsRef.current, search]);\n\n  // Updates total values\n  useEffect(() => {\n    setTotals(\n      enriched.reduce(\n        (acc, item) => {\n          acc.liquidity = acc.liquidity + item.liquidity;\n          acc.volume = acc.volume + item.volume;\n          acc.fees = acc.fees + item.fees;\n          return acc;\n        },\n        { liquidity: 0, volume: 0, fees: 0 } as Totals\n      )\n    );\n\n    updateChart();\n  }, [enriched, updateChart, search]);\n\n  const columns = [\n    {\n      title: \"Name\",\n      dataIndex: \"name\",\n      key: \"name\",\n      render(text: string, record: any) {\n        return {\n          props: {\n            style: {},\n          },\n          children: (\n            <div style={{ display: \"flex\" }}>\n              <PoolIcon mintA={record.mints[0]} mintB={record.mints[1]} />\n              <a href={record.link} target=\"_blank\" rel=\"noopener noreferrer\">\n                {text}\n              </a>\n            </div>\n          ),\n        };\n      },\n    },\n    {\n      title: \"Liquidity\",\n      dataIndex: \"liquidity\",\n      key: \"liquidity\",\n      render(text: string, record: any) {\n        return {\n          props: {\n            style: { textAlign: \"right\" },\n          },\n          children: (\n            <FlashText\n              text={formatUSD.format(record.liquidity)}\n              val={record.liquidity}\n            />\n          ),\n        };\n      },\n      sorter: (a: any, b: any) => a.liquidity - b.liquidity,\n      defaultSortOrder: \"descend\" as any,\n    },\n    {\n      title: \"Supply\",\n      dataIndex: \"supply\",\n      key: \"supply\",\n      render(text: string, record: any) {\n        return {\n          props: {\n            style: { textAlign: \"right\" },\n          },\n          children: <FlashText text={text} val={record.supply} />,\n        };\n      },\n      sorter: (a: any, b: any) => a.supply - b.supply,\n    },\n    {\n      title: \"Volume\",\n      dataIndex: \"volume\",\n      key: \"volume\",\n      render(text: string, record: any) {\n        return {\n          props: {\n            style: { textAlign: \"right\" },\n          },\n          children: (\n            <FlashText\n              text={formatUSD.format(record.volume)}\n              val={record.volume}\n            />\n          ),\n        };\n      },\n      sorter: (a: any, b: any) => a.volume - b.volume,\n    },\n    {\n      title: \"Fees\",\n      dataIndex: \"fees\",\n      key: \"fees\",\n      render(text: string, record: any) {\n        return {\n          props: {\n            style: { textAlign: \"right\" },\n          },\n          children: (\n            <FlashText text={formatUSD.format(record.fees)} val={record.fees} />\n          ),\n        };\n      },\n    },\n    {\n      title: \"APY\",\n      dataIndex: \"apy\",\n      key: \"apy\",\n      render(text: string, record: any) {\n        return {\n          props: {\n            style: { textAlign: \"right\" },\n          },\n          children: formatPct.format(record.apy),\n        };\n      },\n      sorter: (a: any, b: any) => a.apy - b.apy,\n    },\n    {\n      title: \"Address\",\n      dataIndex: \"address\",\n      key: \"address\",\n      render(text: string, record: any) {\n        return {\n          props: {\n            style: { fontFamily: \"monospace\" } as React.CSSProperties,\n          },\n          children: <PoolAddress pool={record.raw} />,\n        };\n      },\n    },\n  ];\n\n  return (\n    <>\n      <AppBar\n        right={\n          <Popover\n            placement=\"topRight\"\n            title=\"Settings\"\n            content={<Settings />}\n            trigger=\"click\"\n          >\n            <Button\n              shape=\"circle\"\n              size=\"large\"\n              type=\"text\"\n              icon={<SettingOutlined />}\n            />\n          </Popover>\n        }\n      />\n      <div className=\"info-header\">\n        <h1>Liquidity: {formatUSD.format(totals.liquidity)}</h1>\n        <h1>Volume: {formatUSD.format(totals.volume)}</h1>\n        <Search\n          className=\"search-input\"\n          placeholder=\"Filter\"\n          type=\"search\"\n          value={search}\n          onChange={(e) => setSearch(e.target.value)}\n          onSearch={(value) => setSearch(value)}\n          style={{ width: 200 }}\n        />\n      </div>\n      <div ref={chartDiv} style={{ height: \"250px\", width: \"100%\" }} />\n      <Table\n        dataSource={enriched.filter(\n          (row) => !search || !searchRegex || searchRegex.test(row.name)\n        )}\n        columns={columns}\n        size=\"small\"\n        pagination={{ pageSize: 10 }}\n      />\n    </>\n  );\n});\n"]},"metadata":{},"sourceType":"module"}