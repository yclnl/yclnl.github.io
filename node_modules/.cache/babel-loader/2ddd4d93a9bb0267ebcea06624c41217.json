{"ast":null,"code":"import React,{useMemo}from\"react\";import{ConfigProvider,Empty}from\"antd\";import{useOwnedPools}from\"../../utils/pools\";import{RemoveLiquidity}from\"./remove\";import{useMint}from\"../../utils/accounts\";import{PoolIcon}from\"../tokenIcon\";import{useCurrencyPairState}from\"../../utils/currencyPair\";import\"./view.less\";import{useEnrichedPools}from\"../../context/market\";import{formatUSD}from\"../../utils/utils\";var PoolItem=function PoolItem(props){var _props$poolDetails,_props$poolDetails2;var _useCurrencyPairState=useCurrencyPairState(),A=_useCurrencyPairState.A,B=_useCurrencyPairState.B;var item=props.item;var mint=useMint(item.account.info.mint.toBase58());var amount=item.account.info.amount.toNumber()/Math.pow(10,(mint===null||mint===void 0?void 0:mint.decimals)||0);var supply=(mint===null||mint===void 0?void 0:mint.supply.toNumber())||0;var poolContribution=item.account.info.amount.toNumber()/supply;var contributionInUSD=poolContribution*((_props$poolDetails=props.poolDetails)===null||_props$poolDetails===void 0?void 0:_props$poolDetails.liquidity);var feesInUSD=poolContribution*((_props$poolDetails2=props.poolDetails)===null||_props$poolDetails2===void 0?void 0:_props$poolDetails2.fees);// amount / supply * liquidity\nif(!amount){return null;}var setPair=function setPair(){var _props$item$pool$pubk,_props$item$pool$pubk2;A.setMint((_props$item$pool$pubk=props.item.pool.pubkeys.holdingMints[0])===null||_props$item$pool$pubk===void 0?void 0:_props$item$pool$pubk.toBase58());B.setMint((_props$item$pool$pubk2=props.item.pool.pubkeys.holdingMints[1])===null||_props$item$pool$pubk2===void 0?void 0:_props$item$pool$pubk2.toBase58());};var sorted=item.pool.pubkeys.holdingMints.map(function(a){return a.toBase58();}).sort();if(item){var _props$poolDetails3;return/*#__PURE__*/React.createElement(\"div\",{className:\"pool-item-row\",onClick:setPair,title:\"LP Token: \".concat(props.item.pool.pubkeys.mint.toBase58())},/*#__PURE__*/React.createElement(PoolIcon,{mintA:sorted[0],mintB:sorted[1],style:{marginLeft:\"0.5rem\"}}),/*#__PURE__*/React.createElement(\"div\",{className:\"pool-item-name\"},(_props$poolDetails3=props.poolDetails)===null||_props$poolDetails3===void 0?void 0:_props$poolDetails3.name),/*#__PURE__*/React.createElement(\"div\",{className:\"pool-item-amount\"},formatUSD.format(contributionInUSD)),/*#__PURE__*/React.createElement(\"div\",{className:\"pool-item-amount\"},formatUSD.format(feesInUSD)),/*#__PURE__*/React.createElement(\"div\",{className:\"pool-item-type\",title:\"Fee account\"},item.isFeeAccount?\" (F) \":\" \"),/*#__PURE__*/React.createElement(RemoveLiquidity,{instance:item}));}return null;};export var PoolAccounts=function PoolAccounts(){var pools=useOwnedPools();var userPools=useMemo(function(){return pools.map(function(p){return p.pool;});},[pools]);var enriched=useEnrichedPools(userPools);return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",null,\"Your Liquidity\"),/*#__PURE__*/React.createElement(ConfigProvider,{renderEmpty:function renderEmpty(){return/*#__PURE__*/React.createElement(Empty,{image:Empty.PRESENTED_IMAGE_SIMPLE,description:\"No liquidity found.\"});}},/*#__PURE__*/React.createElement(\"div\",{className:\"pools-grid\"},/*#__PURE__*/React.createElement(\"div\",{className:\"pool-item-header\"},/*#__PURE__*/React.createElement(\"div\",{style:{width:48}}),/*#__PURE__*/React.createElement(\"div\",{className:\"pool-item-name\"},\"Pool\"),/*#__PURE__*/React.createElement(\"div\",{className:\"pool-item-amount\"},\"Liquidity\"),/*#__PURE__*/React.createElement(\"div\",{className:\"pool-item-amount\"},\"Fees\"),/*#__PURE__*/React.createElement(\"div\",{className:\"pool-item-type\"}),/*#__PURE__*/React.createElement(\"div\",null)),pools.map(function(p){return/*#__PURE__*/React.createElement(PoolItem,{key:p===null||p===void 0?void 0:p.account.pubkey.toBase58(),item:p,poolDetails:enriched.find(function(e){return e.raw===p.pool;})});}))));};","map":{"version":3,"sources":["/home/yclnl/yclnl.github.io/src/components/pool/view.tsx"],"names":["React","useMemo","ConfigProvider","Empty","useOwnedPools","RemoveLiquidity","useMint","PoolIcon","useCurrencyPairState","useEnrichedPools","formatUSD","PoolItem","props","A","B","item","mint","account","info","toBase58","amount","toNumber","Math","pow","decimals","supply","poolContribution","contributionInUSD","poolDetails","liquidity","feesInUSD","fees","setPair","setMint","pool","pubkeys","holdingMints","sorted","map","a","sort","marginLeft","name","format","isFeeAccount","PoolAccounts","pools","userPools","p","enriched","PRESENTED_IMAGE_SIMPLE","width","pubkey","find","e","raw"],"mappings":"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","sourcesContent":["import React, { useMemo } from \"react\";\nimport { ConfigProvider, Empty } from \"antd\";\nimport { useOwnedPools } from \"../../utils/pools\";\nimport { RemoveLiquidity } from \"./remove\";\nimport { useMint } from \"../../utils/accounts\";\nimport { PoolIcon } from \"../tokenIcon\";\nimport { PoolInfo, TokenAccount } from \"../../models\";\nimport { useCurrencyPairState } from \"../../utils/currencyPair\";\nimport \"./view.less\";\nimport { useEnrichedPools } from \"../../context/market\";\nimport { formatUSD } from \"../../utils/utils\";\n\nconst PoolItem = (props: {\n  item: { pool: PoolInfo; isFeeAccount: boolean; account: TokenAccount };\n  poolDetails: any;\n}) => {\n  const { A, B } = useCurrencyPairState();\n  const item = props.item;\n  const mint = useMint(item.account.info.mint.toBase58());\n  const amount =\n    item.account.info.amount.toNumber() / Math.pow(10, mint?.decimals || 0);\n\n  const supply = mint?.supply.toNumber() || 0;\n  const poolContribution = item.account.info.amount.toNumber() / supply;\n  const contributionInUSD = poolContribution * props.poolDetails?.liquidity;\n  const feesInUSD = poolContribution * props.poolDetails?.fees;\n\n  // amount / supply * liquidity\n\n  if (!amount) {\n    return null;\n  }\n\n  const setPair = () => {\n    A.setMint(props.item.pool.pubkeys.holdingMints[0]?.toBase58());\n    B.setMint(props.item.pool.pubkeys.holdingMints[1]?.toBase58());\n  };\n\n  const sorted = item.pool.pubkeys.holdingMints.map((a) => a.toBase58()).sort();\n\n  if (item) {\n    return (\n      <div\n        className=\"pool-item-row\"\n        onClick={setPair}\n        title={`LP Token: ${props.item.pool.pubkeys.mint.toBase58()}`}\n      >\n        <PoolIcon\n          mintA={sorted[0]}\n          mintB={sorted[1]}\n          style={{ marginLeft: \"0.5rem\" }}\n        />\n        <div className=\"pool-item-name\">{props.poolDetails?.name}</div>\n        <div className=\"pool-item-amount\">\n          {formatUSD.format(contributionInUSD)}\n        </div>\n        <div className=\"pool-item-amount\">{formatUSD.format(feesInUSD)}</div>\n        <div className=\"pool-item-type\" title=\"Fee account\">\n          {item.isFeeAccount ? \" (F) \" : \" \"}\n        </div>\n        <RemoveLiquidity instance={item} />\n      </div>\n    );\n  }\n\n  return null;\n};\n\nexport const PoolAccounts = () => {\n  const pools = useOwnedPools();\n  const userPools = useMemo(() => {\n    return pools.map((p) => p.pool);\n  }, [pools]);\n\n  const enriched = useEnrichedPools(userPools);\n\n  return (\n    <>\n      <div>Your Liquidity</div>\n      <ConfigProvider\n        renderEmpty={() => (\n          <Empty\n            image={Empty.PRESENTED_IMAGE_SIMPLE}\n            description=\"No liquidity found.\"\n          />\n        )}\n      >\n        <div className=\"pools-grid\">\n          <div className=\"pool-item-header\">\n            <div style={{ width: 48 }} />\n            <div className=\"pool-item-name\">Pool</div>\n            <div className=\"pool-item-amount\">Liquidity</div>\n            <div className=\"pool-item-amount\">Fees</div>\n            <div className=\"pool-item-type\" />\n            <div />\n          </div>\n          {pools.map((p) => (\n            <PoolItem\n              key={p?.account.pubkey.toBase58()}\n              item={p as any}\n              poolDetails={enriched.find((e) => e.raw === p.pool)}\n            />\n          ))}\n        </div>\n      </ConfigProvider>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}