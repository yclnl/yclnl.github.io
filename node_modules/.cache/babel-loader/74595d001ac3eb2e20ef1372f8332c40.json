{"ast":null,"code":"import _regeneratorRuntime from\"/home/yclnl/yclnl.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/yclnl/yclnl.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/yclnl/yclnl.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useCallback,useContext,useEffect,useState}from\"react\";import{calculateDependentAmount,usePoolForBasket,PoolOperation}from\"./pools\";import{useMint,useAccountByMint}from\"./accounts\";import{useConnection,useConnectionConfig}from\"./connection\";import{convert}from\"./utils\";import PopularTokens from\"../utils/token-list.json\";import{useHistory,useLocation}from\"react-router-dom\";import bs58 from'bs58';var CurrencyPairContext=React.createContext(null);export function CurrencyPairProvider(_ref){var _ref$children=_ref.children,children=_ref$children===void 0?null:_ref$children;var connection=useConnection();var _useConnectionConfig=useConnectionConfig(),env=_useConnectionConfig.env;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),amountA=_useState2[0],setAmountA=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),amountB=_useState4[0],setAmountB=_useState4[1];var history=useHistory();var location=useLocation();var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),mintAddressA=_useState6[0],setMintAddressA=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),mintAddressB=_useState8[0],setMintAddressB=_useState8[1];var _useState9=useState(\"\"),_useState10=_slicedToArray(_useState9,2),lastTypedAccount=_useState10[0],setLastTypedAccount=_useState10[1];var accountA=useAccountByMint(mintAddressA);var accountB=useAccountByMint(mintAddressB);var mintA=useMint(mintAddressA);var mintB=useMint(mintAddressB);var pool=usePoolForBasket([mintAddressA,mintAddressB]);var _useState11=useState(PoolOperation.Add),_useState12=_slicedToArray(_useState11,2),poolOperation=_useState12[0],setPoolOperation=_useState12[1];// updates browser history on token changes\nuseEffect(function(){var _PopularTokens$env$fi,_PopularTokens$env$fi2;// set history\nvar base=((_PopularTokens$env$fi=PopularTokens[env].find(function(t){return t.mintAddress===mintAddressA;}))===null||_PopularTokens$env$fi===void 0?void 0:_PopularTokens$env$fi.tokenSymbol)||mintAddressA;var quote=((_PopularTokens$env$fi2=PopularTokens[env].find(function(t){return t.mintAddress===mintAddressB;}))===null||_PopularTokens$env$fi2===void 0?void 0:_PopularTokens$env$fi2.tokenSymbol)||mintAddressB;if(base&&quote&&location.pathname.indexOf(\"info\")<0){history.push({search:\"?pair=\".concat(base,\"-\").concat(quote)});}else{if(mintAddressA&&mintAddressB){history.push({search:\"\"});}else{return;}}},[mintAddressA,mintAddressB]);// Updates tokens on location change\nuseEffect(function(){var _PopularTokens$env$fi3,_PopularTokens$env$fi4;if(!location.search&&mintAddressA&&mintAddressB){return;}var _getDefaultTokens=getDefaultTokens(env,location.search),defaultBase=_getDefaultTokens.defaultBase,defaultQuote=_getDefaultTokens.defaultQuote;if(!defaultBase||!defaultQuote){return;}setMintAddressA(((_PopularTokens$env$fi3=PopularTokens[env].find(function(t){return t.tokenSymbol===defaultBase;}))===null||_PopularTokens$env$fi3===void 0?void 0:_PopularTokens$env$fi3.mintAddress)||defaultBase||\"\");setMintAddressB(((_PopularTokens$env$fi4=PopularTokens[env].find(function(t){return t.tokenSymbol===defaultQuote;}))===null||_PopularTokens$env$fi4===void 0?void 0:_PopularTokens$env$fi4.mintAddress)||defaultQuote||\"\");},[location,location.search,setMintAddressA,setMintAddressB]);var calculateDependent=useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var setDependent,amount,independent,result;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(pool&&mintAddressA&&mintAddressB)){_context.next=6;break;}if(lastTypedAccount===mintAddressA){independent=mintAddressA;setDependent=setAmountB;amount=parseFloat(amountA);}else{independent=mintAddressB;setDependent=setAmountA;amount=parseFloat(amountB);}_context.next=4;return calculateDependentAmount(connection,independent,amount,pool,poolOperation);case 4:result=_context.sent;if(typeof result===\"string\"){setDependent(result);}else if(result!==undefined&&Number.isFinite(result)){setDependent(result.toFixed(6));}else{setDependent(\"\");}case 6:case\"end\":return _context.stop();}}},_callee);})),[pool,mintAddressA,mintAddressB,setAmountA,setAmountB,amountA,amountB,connection,lastTypedAccount]);useEffect(function(){calculateDependent();},[amountB,amountA,lastTypedAccount,calculateDependent]);var _convertAmount=function convertAmount(amount,mint){return parseFloat(amount)*Math.pow(10,(mint===null||mint===void 0?void 0:mint.decimals)||0);};return/*#__PURE__*/React.createElement(CurrencyPairContext.Provider,{value:{A:{mintAddress:mintAddressA,account:accountA,mint:mintA,amount:amountA,setAmount:setAmountA,setMint:setMintAddressA,convertAmount:function convertAmount(){return _convertAmount(amountA,mintA);},sufficientBalance:function sufficientBalance(){return accountA!==undefined&&convert(accountA,mintA)>=parseFloat(amountA);}},B:{mintAddress:mintAddressB,account:accountB,mint:mintB,amount:amountB,setAmount:setAmountB,setMint:setMintAddressB,convertAmount:function convertAmount(){return _convertAmount(amountB,mintB);},sufficientBalance:function sufficientBalance(){return accountB!==undefined&&convert(accountB,mintB)>=parseFloat(amountB);}},setLastTypedAccount:setLastTypedAccount,setPoolOperation:setPoolOperation}},children);}export var useCurrencyPairState=function useCurrencyPairState(){var context=useContext(CurrencyPairContext);return context;};var isValidAddress=function isValidAddress(address){var decoded=bs58.decode(address);return decoded.length===32;};function getDefaultTokens(env,search){var defaultBase=\"SOL\";var defaultQuote=\"USDC\";var nameToToken=PopularTokens[env].reduce(function(map,item){map.set(item.tokenSymbol,item);return map;},new Map());if(search){var urlParams=new URLSearchParams(search);var pair=urlParams.get(\"pair\");if(pair){var items=pair.split(\"-\");if(items.length>1){if(nameToToken.has(items[0])||isValidAddress(items[0])){defaultBase=items[0];}if(nameToToken.has(items[1])||isValidAddress(items[1])){defaultQuote=items[1];}}}}return{defaultBase:defaultBase,defaultQuote:defaultQuote};}","map":{"version":3,"sources":["/home/yclnl/yclnl.github.io/src/utils/currencyPair.tsx"],"names":["React","useCallback","useContext","useEffect","useState","calculateDependentAmount","usePoolForBasket","PoolOperation","useMint","useAccountByMint","useConnection","useConnectionConfig","convert","PopularTokens","useHistory","useLocation","bs58","CurrencyPairContext","createContext","CurrencyPairProvider","children","connection","env","amountA","setAmountA","amountB","setAmountB","history","location","mintAddressA","setMintAddressA","mintAddressB","setMintAddressB","lastTypedAccount","setLastTypedAccount","accountA","accountB","mintA","mintB","pool","Add","poolOperation","setPoolOperation","base","find","t","mintAddress","tokenSymbol","quote","pathname","indexOf","push","search","getDefaultTokens","defaultBase","defaultQuote","calculateDependent","independent","setDependent","amount","parseFloat","result","undefined","Number","isFinite","toFixed","convertAmount","mint","Math","pow","decimals","A","account","setAmount","setMint","sufficientBalance","B","useCurrencyPairState","context","isValidAddress","address","decoded","decode","length","nameToToken","reduce","map","item","set","Map","urlParams","URLSearchParams","pair","get","items","split","has"],"mappings":"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","sourcesContent":["import React, { useCallback, useContext, useEffect, useState } from \"react\";\nimport {\n  calculateDependentAmount,\n  usePoolForBasket,\n  PoolOperation,\n} from \"./pools\";\nimport { useMint, useAccountByMint } from \"./accounts\";\nimport { MintInfo } from \"@solana/spl-token\";\nimport { ENV, useConnection, useConnectionConfig } from \"./connection\";\nimport { TokenAccount } from \"../models\";\nimport { convert } from \"./utils\";\nimport PopularTokens from \"../utils/token-list.json\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport bs58 from 'bs58';\n\nexport interface CurrencyContextState {\n  mintAddress: string;\n  account?: TokenAccount;\n  mint?: MintInfo;\n  amount: string;\n  setAmount: (val: string) => void;\n  setMint: (mintAddress: string) => void;\n  convertAmount: () => number;\n  sufficientBalance: () => boolean;\n}\n\nexport interface CurrencyPairContextState {\n  A: CurrencyContextState;\n  B: CurrencyContextState;\n  setLastTypedAccount: (mintAddress: string) => void;\n  setPoolOperation: (swapDirection: PoolOperation) => void;\n}\n\nconst CurrencyPairContext = React.createContext<CurrencyPairContextState | null>(\n  null\n);\n\nexport function CurrencyPairProvider({ children = null as any }) {\n  const connection = useConnection();\n  const { env } = useConnectionConfig();\n  const [amountA, setAmountA] = useState(\"\");\n  const [amountB, setAmountB] = useState(\"\");\n  const history = useHistory();\n  const location = useLocation();\n  const [mintAddressA, setMintAddressA] = useState(\"\");\n  const [mintAddressB, setMintAddressB] = useState(\"\");\n  const [lastTypedAccount, setLastTypedAccount] = useState(\"\");\n  const accountA = useAccountByMint(mintAddressA);\n  const accountB = useAccountByMint(mintAddressB);\n  const mintA = useMint(mintAddressA);\n  const mintB = useMint(mintAddressB);\n  const pool = usePoolForBasket([mintAddressA, mintAddressB]);\n  const [poolOperation, setPoolOperation] = useState<PoolOperation>(\n    PoolOperation.Add\n  );\n\n  // updates browser history on token changes\n  useEffect(() => {\n    // set history\n    const base =\n      PopularTokens[env].find((t) => t.mintAddress === mintAddressA)\n        ?.tokenSymbol || mintAddressA;\n    const quote =\n      PopularTokens[env].find((t) => t.mintAddress === mintAddressB)\n        ?.tokenSymbol || mintAddressB;\n\n    if (base && quote && location.pathname.indexOf(\"info\") < 0) {\n      history.push({\n        search: `?pair=${base}-${quote}`,\n      });\n    } else {\n      if (mintAddressA && mintAddressB) {\n        history.push({\n          search: ``,\n        });\n      } else {\n        return;\n      }\n    }\n  }, [mintAddressA, mintAddressB]);\n\n  // Updates tokens on location change\n  useEffect(() => {\n    if (!location.search && mintAddressA && mintAddressB) {\n      return;\n    }\n\n    let { defaultBase, defaultQuote } = getDefaultTokens(env, location.search);\n    if (!defaultBase || !defaultQuote) {\n      return;\n    }\n    setMintAddressA(\n      PopularTokens[env].find((t) => t.tokenSymbol === defaultBase)\n        ?.mintAddress ||\n      defaultBase ||\n      \"\"\n    );\n    setMintAddressB(\n      PopularTokens[env].find((t) => t.tokenSymbol === defaultQuote)\n        ?.mintAddress ||\n      defaultQuote ||\n      \"\"\n    );\n  }, [location, location.search, setMintAddressA, setMintAddressB]);\n\n  const calculateDependent = useCallback(async () => {\n    if (pool && mintAddressA && mintAddressB) {\n      let setDependent;\n      let amount;\n      let independent;\n      if (lastTypedAccount === mintAddressA) {\n        independent = mintAddressA;\n        setDependent = setAmountB;\n        amount = parseFloat(amountA);\n      } else {\n        independent = mintAddressB;\n        setDependent = setAmountA;\n        amount = parseFloat(amountB);\n      }\n\n      const result = await calculateDependentAmount(\n        connection,\n        independent,\n        amount,\n        pool,\n        poolOperation\n      );\n      if (typeof result === \"string\") {\n        setDependent(result);\n      } else if (result !== undefined && Number.isFinite(result)) {\n        setDependent(result.toFixed(6));\n      } else {\n        setDependent(\"\");\n      }\n    }\n  }, [\n    pool,\n    mintAddressA,\n    mintAddressB,\n    setAmountA,\n    setAmountB,\n    amountA,\n    amountB,\n    connection,\n    lastTypedAccount,\n  ]);\n\n  useEffect(() => {\n    calculateDependent();\n  }, [amountB, amountA, lastTypedAccount, calculateDependent]);\n\n  const convertAmount = (amount: string, mint?: MintInfo) => {\n    return parseFloat(amount) * Math.pow(10, mint?.decimals || 0);\n  };\n\n  return (\n    <CurrencyPairContext.Provider\n      value={{\n        A: {\n          mintAddress: mintAddressA,\n          account: accountA,\n          mint: mintA,\n          amount: amountA,\n          setAmount: setAmountA,\n          setMint: setMintAddressA,\n          convertAmount: () => convertAmount(amountA, mintA),\n          sufficientBalance: () =>\n            accountA !== undefined &&\n            convert(accountA, mintA) >= parseFloat(amountA),\n        },\n        B: {\n          mintAddress: mintAddressB,\n          account: accountB,\n          mint: mintB,\n          amount: amountB,\n          setAmount: setAmountB,\n          setMint: setMintAddressB,\n          convertAmount: () => convertAmount(amountB, mintB),\n          sufficientBalance: () =>\n            accountB !== undefined &&\n            convert(accountB, mintB) >= parseFloat(amountB),\n        },\n        setLastTypedAccount,\n        setPoolOperation,\n      }}\n    >\n      {children}\n    </CurrencyPairContext.Provider>\n  );\n}\n\nexport const useCurrencyPairState = () => {\n  const context = useContext(CurrencyPairContext);\n  return context as CurrencyPairContextState;\n};\n\nconst isValidAddress = (address: string) => {\n  const decoded = bs58.decode(address);\n  return decoded.length === 32;\n};\n\nfunction getDefaultTokens(env: ENV, search: string) {\n  let defaultBase = \"SOL\";\n  let defaultQuote = \"USDC\";\n\n  const nameToToken = (PopularTokens[env] as any[]).reduce((map, item) => {\n    map.set(item.tokenSymbol, item);\n    return map;\n  }, new Map<string, any>());\n\n  if (search) {\n    const urlParams = new URLSearchParams(search);\n    const pair = urlParams.get(\"pair\");\n    if (pair) {\n      let items = pair.split(\"-\");\n\n      if (items.length > 1) {\n        if (nameToToken.has(items[0]) || isValidAddress(items[0])) {\n          defaultBase = items[0];\n        }\n\n        if (nameToToken.has(items[1]) || isValidAddress(items[1])) {\n          defaultQuote = items[1];\n        }\n      }\n    }\n  }\n  return { defaultBase, defaultQuote };\n}\n"]},"metadata":{},"sourceType":"module"}