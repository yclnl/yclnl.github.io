{"ast":null,"code":"var _jsxFileName = \"/home/yclnl/yclnl.github.io/src/components/pool/view.tsx\";\nimport React, { useMemo } from \"react\";\nimport { ConfigProvider, Empty } from \"antd\";\nimport { useOwnedPools } from \"../../utils/pools\";\nimport { RemoveLiquidity } from \"./remove\";\nimport { useMint } from \"../../utils/accounts\";\nimport { PoolIcon } from \"../tokenIcon\";\nimport { useCurrencyPairState } from \"../../utils/currencyPair\";\nimport \"./view.less\";\nimport { useEnrichedPools } from \"../../context/market\";\nimport { formatUSD } from \"../../utils/utils\";\n\nconst PoolItem = props => {\n  var _props$poolDetails, _props$poolDetails2;\n\n  const {\n    A,\n    B\n  } = useCurrencyPairState();\n  const item = props.item;\n  const mint = useMint(item.account.info.mint.toBase58());\n  const amount = item.account.info.amount.toNumber() / Math.pow(10, (mint === null || mint === void 0 ? void 0 : mint.decimals) || 0);\n  const supply = (mint === null || mint === void 0 ? void 0 : mint.supply.toNumber()) || 0;\n  const poolContribution = item.account.info.amount.toNumber() / supply;\n  const contributionInUSD = poolContribution * ((_props$poolDetails = props.poolDetails) === null || _props$poolDetails === void 0 ? void 0 : _props$poolDetails.liquidity);\n  const feesInUSD = poolContribution * ((_props$poolDetails2 = props.poolDetails) === null || _props$poolDetails2 === void 0 ? void 0 : _props$poolDetails2.fees); // amount / supply * liquidity\n\n  if (!amount) {\n    return null;\n  }\n\n  const setPair = () => {\n    var _props$item$pool$pubk, _props$item$pool$pubk2;\n\n    A.setMint((_props$item$pool$pubk = props.item.pool.pubkeys.holdingMints[0]) === null || _props$item$pool$pubk === void 0 ? void 0 : _props$item$pool$pubk.toBase58());\n    B.setMint((_props$item$pool$pubk2 = props.item.pool.pubkeys.holdingMints[1]) === null || _props$item$pool$pubk2 === void 0 ? void 0 : _props$item$pool$pubk2.toBase58());\n  };\n\n  const sorted = item.pool.pubkeys.holdingMints.map(a => a.toBase58()).sort();\n\n  if (item) {\n    var _props$poolDetails3;\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pool-item-row\",\n      onClick: setPair,\n      title: `LP Token: ${props.item.pool.pubkeys.mint.toBase58()}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(PoolIcon, {\n      mintA: sorted[0],\n      mintB: sorted[1],\n      style: {\n        marginLeft: \"0.5rem\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pool-item-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }, (_props$poolDetails3 = props.poolDetails) === null || _props$poolDetails3 === void 0 ? void 0 : _props$poolDetails3.name), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pool-item-amount\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, formatUSD.format(contributionInUSD)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pool-item-amount\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }, formatUSD.format(feesInUSD)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pool-item-type\",\n      title: \"Fee account\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }, item.isFeeAccount ? \" (F) \" : \" \"), /*#__PURE__*/React.createElement(RemoveLiquidity, {\n      instance: item,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  return null;\n};\n\nexport const PoolAccounts = () => {\n  const pools = useOwnedPools();\n  const userPools = useMemo(() => {\n    return pools.map(p => p.pool);\n  }, [pools]);\n  const enriched = useEnrichedPools(userPools);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, \"Your Liquidity\"), /*#__PURE__*/React.createElement(ConfigProvider, {\n    renderEmpty: () => /*#__PURE__*/React.createElement(Empty, {\n      image: Empty.PRESENTED_IMAGE_SIMPLE,\n      description: \"No liquidity found.\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pools-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pool-item-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: 48\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pool-item-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, \"Pool\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pool-item-amount\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, \"Liquidity\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pool-item-amount\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, \"Fees\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pool-item-type\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  })), pools.map(p => /*#__PURE__*/React.createElement(PoolItem, {\n    key: p === null || p === void 0 ? void 0 : p.account.pubkey.toBase58(),\n    item: p,\n    poolDetails: enriched.find(e => e.raw === p.pool),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  })))));\n};","map":{"version":3,"sources":["/home/yclnl/yclnl.github.io/src/components/pool/view.tsx"],"names":["React","useMemo","ConfigProvider","Empty","useOwnedPools","RemoveLiquidity","useMint","PoolIcon","useCurrencyPairState","useEnrichedPools","formatUSD","PoolItem","props","A","B","item","mint","account","info","toBase58","amount","toNumber","Math","pow","decimals","supply","poolContribution","contributionInUSD","poolDetails","liquidity","feesInUSD","fees","setPair","setMint","pool","pubkeys","holdingMints","sorted","map","a","sort","marginLeft","name","format","isFeeAccount","PoolAccounts","pools","userPools","p","enriched","PRESENTED_IMAGE_SIMPLE","width","pubkey","find","e","raw"],"mappings":"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","sourcesContent":["import React, { useMemo } from \"react\";\nimport { ConfigProvider, Empty } from \"antd\";\nimport { useOwnedPools } from \"../../utils/pools\";\nimport { RemoveLiquidity } from \"./remove\";\nimport { useMint } from \"../../utils/accounts\";\nimport { PoolIcon } from \"../tokenIcon\";\nimport { PoolInfo, TokenAccount } from \"../../models\";\nimport { useCurrencyPairState } from \"../../utils/currencyPair\";\nimport \"./view.less\";\nimport { useEnrichedPools } from \"../../context/market\";\nimport { formatUSD } from \"../../utils/utils\";\n\nconst PoolItem = (props: {\n  item: { pool: PoolInfo; isFeeAccount: boolean; account: TokenAccount };\n  poolDetails: any;\n}) => {\n  const { A, B } = useCurrencyPairState();\n  const item = props.item;\n  const mint = useMint(item.account.info.mint.toBase58());\n  const amount =\n    item.account.info.amount.toNumber() / Math.pow(10, mint?.decimals || 0);\n\n  const supply = mint?.supply.toNumber() || 0;\n  const poolContribution = item.account.info.amount.toNumber() / supply;\n  const contributionInUSD = poolContribution * props.poolDetails?.liquidity;\n  const feesInUSD = poolContribution * props.poolDetails?.fees;\n\n  // amount / supply * liquidity\n\n  if (!amount) {\n    return null;\n  }\n\n  const setPair = () => {\n    A.setMint(props.item.pool.pubkeys.holdingMints[0]?.toBase58());\n    B.setMint(props.item.pool.pubkeys.holdingMints[1]?.toBase58());\n  };\n\n  const sorted = item.pool.pubkeys.holdingMints.map((a) => a.toBase58()).sort();\n\n  if (item) {\n    return (\n      <div\n        className=\"pool-item-row\"\n        onClick={setPair}\n        title={`LP Token: ${props.item.pool.pubkeys.mint.toBase58()}`}\n      >\n        <PoolIcon\n          mintA={sorted[0]}\n          mintB={sorted[1]}\n          style={{ marginLeft: \"0.5rem\" }}\n        />\n        <div className=\"pool-item-name\">{props.poolDetails?.name}</div>\n        <div className=\"pool-item-amount\">\n          {formatUSD.format(contributionInUSD)}\n        </div>\n        <div className=\"pool-item-amount\">{formatUSD.format(feesInUSD)}</div>\n        <div className=\"pool-item-type\" title=\"Fee account\">\n          {item.isFeeAccount ? \" (F) \" : \" \"}\n        </div>\n        <RemoveLiquidity instance={item} />\n      </div>\n    );\n  }\n\n  return null;\n};\n\nexport const PoolAccounts = () => {\n  const pools = useOwnedPools();\n  const userPools = useMemo(() => {\n    return pools.map((p) => p.pool);\n  }, [pools]);\n\n  const enriched = useEnrichedPools(userPools);\n\n  return (\n    <>\n      <div>Your Liquidity</div>\n      <ConfigProvider\n        renderEmpty={() => (\n          <Empty\n            image={Empty.PRESENTED_IMAGE_SIMPLE}\n            description=\"No liquidity found.\"\n          />\n        )}\n      >\n        <div className=\"pools-grid\">\n          <div className=\"pool-item-header\">\n            <div style={{ width: 48 }} />\n            <div className=\"pool-item-name\">Pool</div>\n            <div className=\"pool-item-amount\">Liquidity</div>\n            <div className=\"pool-item-amount\">Fees</div>\n            <div className=\"pool-item-type\" />\n            <div />\n          </div>\n          {pools.map((p) => (\n            <PoolItem\n              key={p?.account.pubkey.toBase58()}\n              item={p as any}\n              poolDetails={enriched.find((e) => e.raw === p.pool)}\n            />\n          ))}\n        </div>\n      </ConfigProvider>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}